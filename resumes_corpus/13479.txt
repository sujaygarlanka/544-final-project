Sr. Java/J2ee Full Stack Developer Sr. <span class="hl">Java</span>/J2ee Full Stack <span class="hl">Developer</span> Sr. Java/J2ee Full Stack Developer - Optum/United Health Group Minneapolis, MN • 9+ years of IT experience in Design, Development, Implementation and Testing of applications using Java/J2EE.  • Experience working with Software Development Life Cycle(SDLC) methodologies-Agile, Scrum, Waterfall Model.  • Experience in implementing Java EE design patterns such as MVC, Singleton, Abstract Factory, Session Façade, DAO, DTO and business Delegate in the development of Multi-Tier distributed Enterprise Applications.  • Experience in developing UI applications using HTML, CSS, Backbone Js, Bootstrap, Angular, React, Ajax, Node.js, JSP.  • Extensive experience in Core Java concepts like Exception Handling, Multi-Threading, Synchronization, Serialization, IO, Collections, Framework, Java Beans.  • Experience in developing Java/J2EE applications using JSP, JSF, Servlets, Struts, Spring, Hibernate, Webservices (SOAP, REST), XML, XSD, XSL and JNDI.  • Experience with Spring MVC, IOC, Spring JDBC, Spring JTA, Spring IO, Spring Boot, Spring Dashboard,  Spring Microservices, Spring Ribbon, Spring Netflix, Spring Zuul, Spring Eureka with Thymeleaf.  • Experience in Spring Security for User Access Management and LDAP configuration for authentication.  • Experienced in Middleware persistence frameworks like Hibernate/JPA for mapping java classes with database using HQL. Experienced in working on modern MEAN stack- MongoDB, Express.JS, AngularJS and NodeJS.  • Knowledge and experience in working with messaging brokers like Apache Kafka, Active Mq, Rabbit Mq.  • Developed SQL queries, procedures, Triggers and Stored Procedures in database such as Oracle, DB2 and MYSQL.  • Experienced in working with multiple databases like Oracle 10/11g, MySQL, MongoDB, Cassandra and involved in converting Cassandra/SQL queries to Spark transformation using Spark RDDs.  • Hands on experience with Amazon Web Services(AWS) like EC2, S3, Elastic Beanstalk, ELB (Load Balancers), RDS, VPC, Route53, Cloud Watch, Cloud Formation, IAM, SNS, SQS.  • Hands on experience with Dev-ops tools like Docker,Kubernetes, Jenkins(CI-CD) and knowledge on Chef, Puppet, Ansible. Experience in creating rules using Business Rules Engines like Drools, ILOG, JBPM.  • Good knowledge on Apache Storm which is used for real-time Stream processing and end-to-end delivery response.  • Experience in using different version controlling/tracking systems Subversion, CVS, GIT and Rational Clear Case.Experienced in developing UNIX shell scripts for batch processing.  • Experience in using build tools like ANT, GRADLE, MAVEN to compile, package the components to application servers. Experienced in developing UNIX shell scripts for batch processing.  • Hands on experience with Integrated Development Environment(IDE) like Eclipse, IntelliJ, Spring Tool Suite(STS). Experience in testing frameworks like Junit, Mockito, TestNG, Power mock, Easy mock.  • Expertise in Selenium automation using Selenium Web Driver, Selenium Grid, JAVA, Junit and Maven.  • Maintained the Selenium and JAVA automation code and resources in source controls like GIT, CVS, and SVN.  • Experience in configuring and deploying the applications and messaging on Tomcat, WebSphere, WebLogic and JBOSS. Authorized to work in the US for any employer Work Experience Sr. Java/J2ee Full Stack Developer Optum/United Health Group - Minneapolis, MN, US October 2017 to Present Optum is health services and Innovation Company. It powers modern health care by modernizing infrastructure, advancing care and improving experiences. Helped in production and managing of HTML pages, redesign old legacy systems within the company as well as to help design a project to rebuild the internal intranet system for various departments.    Responsibilities:  • Experience working in Agile development following SCRUM process, Sprint and daily stand-up meetings.  • Developed applications using new features of Java 1.7/1.8 like Annotations, Generics, enhanced for loops and Enums. Worked with Angular CLI and Typescript in Angular 2/4 to create Angular components.  • Worked with Advanced Java 8 features like Lambda, filters and Predicates for adding functionality processing capability and Stream API to facilitate pipeline processing and method to eliminate elements based on the criteria.  • Developed UI layer for the application using HTML5, CSS3, Angular 2 and Bootstrap.  • Worked on media queries as a compliment to the grid system of UI Bootstrap to facilitate the implementation.  • Experience in using PrimeNG to create UI components and to create robust services and UI widgets.  • Created arrange loop directive and components like data binding, dependency injection in Angular 2.  • Involved in building single page cross browser compatible applications using Angular 2(Angular Routing).  • Created the Nodejs server to build MVC framework from front-end side Angular 2 to back-end Oracle.  • Worked with advanced MVC framework such as Spring-IOC, MVC and Batch to implement backend functionality.  • Heavily used Spring Inheritance, Auto Wiring, Core-Container, Security, ORM modules as part of migration from EJB to Spring, Spring Quartz for scheduling tasks to generate reports.  • Implemented SOA to develop Spring Restful and implemented Spring Eureka, Netflix, Ribbon using Apache AXIS. Created and injected Spring services, Spring Controllers and the DAOs to achieve DI and to wire objects.  • Participated in coding Spring AOP components for the Logging, Exception handling and Transactional Models.  • Developed Spring Boot application with microservices and deployed in AWS using EC2 instances.  • Used Spring Boot based services to interact through a combination of REST and Apache Kafka message brokers.  • Worked with Kafka Cluster using Zookeeper apart from JMS as messaging service.  • Developed Web API'S using Restful web services which can be accessed from various tools and enable CNC employees to access information on member activities.  • Implemented Spring circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservices.  • Worked on the creation of custom Docker container images, tagging, pushing images, integration of Spring Boot.  • Used Hibernate JPA, Object/Relational-Mapping(ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL based schema.  • Used Hibernate Transaction Management, Hibernate Batch Transactions and Hibernate cache concepts.  • Hands on experience withCassandra Installation, Configuring, Monitoring and Designing Shared Environment.  • Worked on Cassandra concepts such as locking, transactions, indexes, replications, schema design.  • Followed Java and J2EE design patterns like Singleton, Service Locator, Session Façade, DAO during development. Developed API for using AWS Lambda to manage the servers and run the code in the AWS.  • Generated Scala and Java classes from the respective APIs so that they can be incorporated in the overall application.  • Performed configuration, deployment and support of cloud services including Amazon Web Services (AWS).  • Configured AWS Identity and Access Management (IAM) Groups and Users for improved login authentication.  • Developed API for using AWS Lambda to manage the servers and run the code in the AWS.  • Utilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda functions (Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling).  • Developed applications using Rule Engines Drools4.x, Work Flows, Human tasks to implement business rules validations. Integrated the JBPM with the Spring Framework in the enterprise layer.  • Designed and implemented Oracle 11g database to record the collateral securities and settlement data.  • Integrated the JBPM with the Spring Framework in the enterprise layer.  • Wrote SQL queries, stored procedures and enhanced performance by running explain plans.  • Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.  • Involved in using Gray log validation tool to validate logs.  • Developed Integration test suites for all services invoking python scripts using JSON.  • Experience with WebLogic application server to deploy the applications and configure multiple data sources messaging.  • Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files.  • Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito.  • Worked on Elastic Search and Kibana for reporting different logs of data.    Environment: Java 8, J2EE, Spring, Spring Boot, Spring Security, Spring Eureka, Netflix, Ribbon, Hibernate, Angular.js/2/4, HTML5, CSS 3, JavaScript, JQuery and CSS, SOAP, WebSphere, JBoss, Eclipse, GIT, GitHub, Apache Kafka, Apache Camel, Zookeeper, Docker, AWS, JUnit, Jenkins, MongoDB, Oracle, Karma, Jasmine, Grunt, Bower. Sr. Java/J2ee Full Stack Developer PNC BANK - Pittsburgh, Pennsylvania, US July 2016 to September 2017 PNC takes a personal interest in your banking needs mortgage, investing, credit card, insurance, consumer, and commercial financial services. This project is based on tracking portfolio growth, view investment allocations, access account information and view transfers and payments    Responsibilities:  • Worked with GIT as a version control tool in the project and done unit testing with Junit and Mockito.  • Involved in various SDLC phases like Requirement gathering, Design, Analysis, Code development and Deployment.  • Applied Agile Test Practices SCRUM, Scripted Test Cases for Test Driven Development TDD and developed test cases for story card based on Acceptance Test Driven Development ATDD.  • Active in coding some of the Core Java concepts such as collections, generics and multi-threading.  • Followed the best practices in coding like removing unnecessary casting, using generics in Hash Map, caching, Collections like sort, comparator, list, set and Design patterns.  • Developing web pages using HTML5, CSS3, JavaScript and used twitter Bootstrap for cross browser compatibility.  • Extensive experience with AngularJS, creating custom directives, decorators, and services to interface with both restful and legacy network services also DOM applications.  • Involved in implementing the complete Application in the in-build MVC Architecture with Angular js. Used date-format and moment packages in Nodejs to save the timestamp in database converting into GMT.  • Created proof-of-concept using responsive web design Node.js, HTML5, and CSS3.  • Implemented Multithreading, Concurrency, Exception Handling and Collections whenever necessary.  • Developed spring based presentation layer, hibernate based DAO layer and integrated them using Spring Dependency injection, ORM and Web modules.  • Used popular Node.js frameworks like Express and Restify to mock a Restful api.  • Deep dive into the node.js internal to understand node.js' internal performance and memory area and performance related optimization.  • Design, develop, test and deliver Node.js modules implementing various reusable services, as well as parts of a central component in the platform, the App Router.  • Spring Transaction is used for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction.  • Created AWS EBS volumes for storing application files for use with AWS EC2 instances whenever they are mounted to them.  • Designed and developed UI screens with XSLT and JSF (MVC) to provide interactive screens to display data.  • Developed API for using AWS Lambda to manage the servers and run the code in the AWS.  • Used AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store data.  • Extensively worked on JPA as persistence layer, involving EJB3.0 annotations.  • Spring Boot Micro services were developed with micro service architecture using SOAP and Apache Camel.  • Integrated configured Camel with ActiveMQ to use it as bus.  • Implemented a SOA compliant system working on various transactional messaging using Camels and used Session Beans Message Driven Beans.  • Worked on Jenkins and Docker interactively and integrating together for end to end automation of builds and deployment.  • Configured the Hibernate configuration files to persist the data to the MongoDB database.  • Worked on Mongo DB concepts such as locking, transactions, indexes, replications, schema design.  • Created connections to database using Hibernate Session Factory, using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control.  • Used XML Web Services using SOAP protocol to transfer the amount to other application that is remote and global to different financial institutions.  • Wrote code Web Services (JAX-WS) for external system via SOAP/HTTP call and to fetch data from web services via JSON response and updating HTML pages.  • Employed fail safe and circuit breaker patterns for the first time in Client's email applications using Hystrix  and Hystrix Dashboard in spring boot Micro Service Applications.  • Developed Docker images to support Development and Testing.  • Used version control repository SVN (Subversion by apache) and JIRA for issue tracking.  • Researched and trouble shooted emerging application issues, from WebLogic configuration to code issues.  • Selenium's playback tool feature for authoring tests has been used in executing more than 100 test cases.  • Used Log4j framework to log/track application.    Environment: HTML, CSS, Bootstrap, AJAX, Multithreading, JavaScript, JSF 2.1, Angular JS, Spring 3.x, Hibernate 3.x, Soap UI, Maven, SVN, JIRA, Docker, Web sphere, SOAP web service, Unix/Linux, Selenium, Web Logic Application Server. Sr. Java/J2EE Full Stack Developer Omnicare - Columbus, OH, US February 2015 to June 2016 Omnicare's e-kit system is a high performance, flexible, automated system. A formulary is created to deliver medicines to facilities. A faulty manual system, where every billing was manual is now automated. The facilities place the orders online and any discrepancies are reported within a week. This package provides a powerful way of user-driven application with transparency, security and ease in data access.    Responsibilities:  • Involved in various phases of Software Development Life Cycle (SDLC) of the application like Requirement gathering, Design, Analysis and Code development and Customization of the Application.  • Actively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model to help, respond quickly to business needs.  • Used Spring Inversion of Control (IOC) for injecting the beans and reduced the coupling between the classes. Implemented the Model View Controller using Spring MVC.  • Used Spring actuator-configuring Spring Boot application, monitoring and invoking HTTP endpoints.  • Implemented the application using Spring Boot Framework and handled the security using SpringSecurity. Used XML Web Services using SOAP to register agents using non- java application.  • Curl is a command line tool for doing all sorts of URL manipulations and transfers.  • Developed services that are reusable and interoperable, based on SOAP, WSDL, JAXWS, JAXRPC  • Web services by exchanging XML data between applications over HTTP.  • Used JMS for the asynchronous exchange of critical data and events among J2EE components. Publisher-Subscriber method was used for data loading and Point-To-Point method of JMS was used for event processing. Involved in writing DAO, DTO's using Hibernate DAO Support.  • Implemented persistence layer using Hibernate that uses the POJOs (which do not have the business processes) to represent the persistence database tuples. Worked with POJO for handling data coming from the legacy systems.  • Configured Swagger-UI registered Micro service with Eureka server to monitor service health check.  • Utilized Object Oriented Programming in JavaScript and DOM structure to implement various functionalities and DOM parser to parse the XML documents and XSLT for transformations.  • Developed Interactive web pages using HTML5, CSS3 and JavaScript. Develop various screens for the front end using Angular JS and used various predefined components from Node NPM.  • Extensively used the JavaScript and jQuery plug-in to fetch and display the data on web pages and create interactive features in the application. Worked with jQuery concepts like selectors, and filters.  • Coded pages with best Search Engine Optimization (SEO) techniques.  • Designed applications that execute on various browsers such as Internet Explorer, Mozilla Firefox, Google Chrome, and Opera using various debugging tools like Firebugs/IE Developer Tools.  • Used MongoDB and Oracle DB for the application. The legacy info was going to Oracle and rest to MongoDB.  • Performed CRUD operations like Update, Insert and Delete data in MongoDB.  • Continuous integration services are provided for software development using JENKINS.  • Implemented security for different front-end views based on the access privileges.  • Spring with Tiles Framework is implemented for a common look in all the presentation views.  • The application is designed using J2EE design patterns and technologies based on MVC architecture.  • Used J2EE design patterns like Value Object Pattern, Session façade, Singleton, Factory and DAO.  • Developed JUnit test cases for DAO and Service Layer methods for all the developed modules.  • Executed test scripts using Selenium web driver and analyzed the test results and implemented navigation using Spring MVC controllers and configured controllers using Spring MVC annotations and configuration files.  • Developed the ANT scripts for preparing WAR files used to deploy J2EE components.  • Used GIT as Version Control and iText to generate pdf in the form of a tree. Done unit testing using Test NG. Used GIT as version management, JIRA for defect management system.  • Used Log4J to capture the log that includes runtime exceptions.  • Used RAD IDE based on Eclipse for writing code for JSP, Action Classes and spring beans.  • Interacted with quality assurance team for requirements gathering and analysis.    Environment: Java, J2EE, Spring, Spring DI, Spring Actuator, Spring Boot, Spring Security, SOAP, WSDL, JAXWS, JAXRPC, JMS, Curl, Hibernate, HTML5, CSS3, Angular JS, JavaScript, jQuery, Swagger, JENKINS, JSP, AJAX, Eureka, Cassandra, ANT, GIT, JIRA. Sr. Java /J2EE Developer Guide One Insurance - West Des Moines, IA, US July 2013 to January 2015 The PL-PAS Project represents a major overhaul of the GuideOne Personal Lines business unit. The  program will involve analysis and making changes to products, processes, technology, staffing, distribution and marketing. The objective of this initiative is to deliver administrative processes and underlying system capabilities necessary for the personal lines business unit to achieve their 10-year strategic objectives. It also implements the integrations to existing systems and vendors associated with the GuideOne PL-PAS. The GuideOne Personal Lines Rater (PLR) is an easy-to-use business tool. It can be used to quote new business for Auto, Home, and Personal Excess Liability. Using this system agent can create a new quote or view a specific agent's quotes and issue policies.    Responsibilities:  • Involved in preparing System Requirements and detailed Design document for the project.  • Extensively used various modules in Spring like AOP, DI (IOC), Bean Wiring, Spring Inheritance, Auto Wiring, Spring JDBC Templates and Spring Quartz Schedulers for Jobs.  • Involved in developing components on Reporting Dashboard with Spring MVC, Spring Framework, Spring Security and Hibernate and created Microservices using Spring Boot.  • Designed and developed the End Points (Controllers), Business Layer, DAO Layer using Hibernate, Hibernate Transaction Managementand Spring IOC (Dependency Injection).  • Extensively worked on JPA as persistence layer and Java Messaging Service(JMS), involving EJB3.0 annotations, synchronizing Data base tables through XML in a secondary project.  • Extensively used Session beans for implementing the business logic of module.  • Developed Web Services SOAP/HTTP, SOAP/JMS, SMTP using SOA technologies such as SOAP, WSDL and UDDI. Heavily used SOAP UI Pro version for testing the Web Services.  • Involved in consuming, producing SOAP based web services using JAX-WS.  • Developed UI application modules using HTML, CSS and JavaScript, JSON, jQuery and AJAX. Used Bootstrap library to build application UI's and used AngularJS to associate HTML elements to models.  • Extensively used/modified JQUERY to perform AJAX calls for creating interactive web pages on JSON response. jQuery opinionated about how a CRUD application should be built.  • Creating cross-browser compatible and standards-compliant CSS-based page layouts.  • Client-Side code were written in ReactJS, JQuery and server-Side Code were developed using MVC4.  • Used Angular Routing for navigating between screens and developed several reusable directives.  • Database development required creation of new tables, PL/SQL Stored Procedures, Views, Indexes and Constraints, Triggers and required SQL tuning to reduce the response time in the application.  • Utilized DOM, SAX parser technologies in implementing XML parsing framework.  • Extensively used MVC, Factory, Delegate and Singleton design patterns.  • Used AWS (Amazon Web Services) stack (Including EC2, Route53, S3, RDS, Dynamo DB, SNS, SQS, IAM) Deploying, managing and operating scalable, highly available, and fault tolerant systems.  • Implemented responsive web design using Bootstrap and Apache Cordoba.  • Created and Written automated regression tests using JMeter scripts for load testing.  • Used JMeter for stress testing., Selenium WebDriver for testing the automation code.  • Develop unit test using Karma and Jasmine. Followed strict patterns of RA team for unit test cases with jasmine to verify AngularJS modules and JavaScript utility routines.  • Installed and configured WebSphere Process Server 6.1 and WebSphere ESB 6.1, WID.  • Used version control repository SVN (Subversion by apache) and JIRA for issue tracking.    Environment: Java, J2EE, Spring MVC, Spring Security, Spring Boot, Spring MVC, Spring IOC, JPA, Hibernate, JMS, SOAP, WSDL, UDDI, HTML, CSS JavaScript, JSON, jQuery, AJAX, AngularJS,  PL/SQL, AWS, Apache Cordoba, JMeter, Karma, Jasmine, WebSphere, SVN. Sr. Java Developer Mercury Insurance Group - Los Angeles, CA, US June 2012 to June 2013 The insurance-based company provides insurance for car, homes Condo, business auto insurance etc. The developed application provides web based online insurance services. Application also supports features for customer care services and internal reporting and log maintenance. The application had been developed using Struts framework along with hibernate and log4j.    Responsibilities:  • Involved in analysis, design and development of Expense Processing system and developed specs that include Use Cases, Class Diagrams, Sequence Diagrams and Activity Diagrams.  • Well experienced in Core Java - asynchronous programming, multithreading, collections and a few design patterns. Taken care of complete Java multi-threading part in back end components.  • Used Java Messaging Services (JMS) for reliable and asynchronous exchange of important information such as payment status report and Spring for cross cutting concerns and IOC for dependency injection.  • Used Hibernate in data access layer to access and update information in the database.  • Used Web services - WSDL and SOAP for getting credit card information from third party.  • Used Hibernate Transaction Management, Hibernate Batch Transactions, cache concepts.  • Designed various tables required for the project in MySQL database and used the Stored Procedures in the application also worked on the system landscape includes configuring Linux and SQL database.  • Developed several annotated managed beans and integrated with Spring 3.x framework  • Used AJAX Framework for Dynamic Searching of Bill Expense Information.  • Used Log4J to capture the log that includes runtime exceptions, monitored error logs and fixed the problems.  • Developed JUnit test cases for all the developed modules.  • Used CVS for version control across common source code used by developers.  • Used ANT scripts to build the application and deployed on WebSphere Application Server.  • Involved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources in the development of Multi-Tier distributed Enterprise Applications.  • Worked on Ext JS for user interface widgets with High performance scalable grids, trees and menus.  • Deployed the applications on IBM WebSphere Application Server.    Environment: Core Java, J2EE, JSP, JavaScript, Spring, JMS, Hibernate, MYSQL, Eclipse 3.4, log4j, JUnit, HTML4.0, CSS, MySQL, XML, CVS. Java/J2EE Developer JPMorgan - Chase, NY, US November 2010 to May 2012 CSR Dashboard is an internal facing application, accessed via the Prime View portal, which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events, with Corporate Actions and Money Transfer events to follow. This tool provides a CSR centric view of all key events for all families supported by a CSR, Team Lead or Area Manager. As of today, Option Exercise and Corporate Actions have been on boarded.    Responsibilities:  • Identified the Business requirements of the project and involved in preparing System Requirements.  • Involved in preparing the Detailed Design document for the project by extensively using MVC, Factory, Delegate and Singleton design patterns and used Java 1.4 for the compilation.  • Developed the middle tier using EJBs, Java Servlets and debugged the servlets and EJB with WebSphere Application server also developed session, entity beans and message driven beans.  • Used XML/XSLT for transforming common XML format and SAML for Single Sign-On.  • Designed and implemented Java Classes to use JAXP parser to create Java objects to be able to modify the data received in the response and configured XML Schema for the application.  • Handled Java multi-threading part in back-end component, one thread will be running for each user.  • Used SOAP for Web Services by exchanging XML data between applications over HTTP.  • Designed and developed the UI using JSP, HTML, CSS and JavaScript, AJAX, JSON. Whereas JavaScript is used for the client-side validation and developed Web GUI involving Java Script under MVC architecture.  • Used Spring Framework AOP Module to implement logging in the application to know the application status. Used Spring DAO Module to deal with Database.  • Spring MVC Framework IOC (Inversion of Control) design pattern is used to have relationships between application components. It is also used to separate the application configuration and dependency specification from the actual application code along with singleton to achieve clean separation of layers.  • MQ was used to provide a single unifying transport that reduces cost and maintenance efforts, including support for HTTP, REST and JMS which involves communications without side systems.  • Junit tests were written and performed unit test to test each module in the application.  • Wrote Ant Scripts for preparing WAR files to automate the build and to deploy J2EE components.  • Involved in Code Review, Unit Testing and Integration Testing.  • Designed the data flow for the client-side screens and the object interaction layer for the server-side components using Rational Rose (Case Diagrams, Class Diagrams and Sequence diagrams).    Environment: Core Java, J2EE, JSP, JavaScript, EJB, HTML, CSS, JavaScript, AJAX, JSON, XML/XSLT, SOAP, Junit, Java Servlets, Rational Rose. Software Engineer Sasken Communication System Ltd June 2009 to September 2010 This project is designed to provide a standard interface to control TVs, Hi-fi equipment, etc. to allow a single remote control to control all the A/V equipment to which a user has access. The procedure of this profile specific AV/C command is an extension of the AV/C digital interface command. It supports Hands-free as well as handsets both. This profile gives the facility to the user to play the music with Bluetooth Dongle and remote control is also supported under Microsoft Window Media Player.    Responsibilities:  • Involved in Requirement Analysis to understand the Company needs for various downstream systems. Created the design using class diagrams and sequence diagrams.  • Involved in deciding the WEB Service architecture with XML and SOAP for integrating with heterogeneous systems and to register agents using non- java applications.  • Designed and implemented SOAP XML Request and Response, WEB Service WSDL using XML SPY.  • Implemented WEB Service using Apache SOAP API (2.1), WASD.  • Designed and implemented subsystem for administrative tasks (like verify data loads, consistency check and notify clients for data extract) using SERVLETS, session and Entry bean and java classes.  • Developed dynamic WEB screens, Customization of the screens done using JSP.  • Designed and guided the team for implementing Client module and XSL conversions for transforming common XML format and SAML for Single Sign-On using XSLT (XALAN).  • Tested and debugged SERVLETS, JSP using Visual age JSP execution monitor.  • Implemented various design patterns in the project such as Business Delegate, Data Transfer Object, Data Access Object, Service Locator and Singleton.  • Used JDBC for communicating with the database for developing business module applications.  • Involved in writing XML documents. Involved in writing build scripts using UNIX.  • Handled database interaction writing SQL Queries, Oracle 8i was used as Database for central Fund repository and designed Health Check module to monitor current health of the system.  • The service was deployed on WEBSPHERE 4.0.    Environment: Core Java, J2EE, JSP, WSDL, JavaScript, SQL, SAML, Oracle 8i, SERVLETS, UNIX, WEBSPHERE 4.0. Education Bachelor's Skills database (9 years), J2ee (9 years), Java (9 years), JavaScript (9 years), SOAP (9 years) Additional Information SKILL SET    Java/J2EE Technologies Servlets, JSP, JSTL, JDBC, JMS, JNDI, RMI, EJB, JFC/Swing, AWT, Applets, Multi-threading, Java Networking  Programming Languages Java1.6/1.7/1.8, C++, C, SQL, Scala, PL/SQL  Application/Web Servers: Oracle/BEA WebLogic 8.1/9.1/10.3, IBM WebSphere 5.1/6.0/6.1/7.0, Jboss, Tomcat 5.0.28/6.0, Bug tracking, Jenkins.  Frameworks Struts 2.x/1.x, Spring 4.x/3.x/ 2.x, Hibernate 3.x, JSF 1.2/2.0, iBatis, Flex  UI Frameworks jQuery, AngularJS, NodeJS, ReactJs, Bootstrap.  IDEs Eclipse 3.x, IBM WSAD, IntelliJ, Dream viewer  Web technologies HTML/HTML5, CSS/CSS3, XHTML, JavaScript, Ajax, jQuery, AngularJS/2/4, JSON, BackBonejs  Web Services JAX-WS, JAX-RPC, JAX-RS, SOAP, REST, SOAP UI  XML Tools JAXB, Apache Axis  Methodologies Agile, Scrum, RUP, TDD, OOAD, SDLC  Modeling Tools UML, Rational Rose, Visio  Testing technologies/tools JUnit, JMeter, HTML Unit  Database Servers Oracle 8i/9i/10g/11G, DB2, SQL Server 2000/2005/2008, MySQL ,NOSQL-MongoDB, Cassandra  Version Control Git, CVS, SVN  Build Tools Gradle, Maven, ANT  Platforms Windows 2000/98/95/NT4.0, Linux, UNIX, Mac, Windows  Containerization Tools Docker, Dockerswarm, Kubernetes  Cloud Developments EC2,S3,Elastic, ELB, Spring PCF(pivotal cloud foundry)