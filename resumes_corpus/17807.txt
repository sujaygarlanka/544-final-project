Azure DevOps Engineer Azure DevOps Engineer Azure DevOps Engineer - Bayer • Experience in dealing with Windows Azure IaaS - Virtual Networks, Virtual Machines, Cloud Services, VPN, Application Gateways Express Route, Traffic Manager, VPN, Load Balancing, Application Gateways, Auto-Scaling, Resource Groups, Windows Azure PaaS storages like Blob (Page and Block), SQL Azure.  • Built Azure environments by deploying Azure IaaS Virtual machines (VMs) and Cloud services (PaaS) into secure VNets.  • Configured Azure Multi-Factor Authentication as a part of Azure AD Premium to securely authenticate users.  • Deployed the initial Azure components like Azure Virtual Networks, Azure Application Gateway, Azure Storage and Affinity groups.  • Strong experience in Automating, Configuring and Deploying Instances on Azure environments and in Datacenters.  • Involved in migrating SQL Server databases to SQL Azure Database using SQL Azure Migration Wizard and then Deployed application to Azure Cloud.  • Developed and migrated SQL databases and websites to Microsoft Azure platform and been part of the team in implementing high availability with Azure classic and Azure resource manager.  • Experience in designing AWS Cloud models for Infrastructure-as-a-Service (IAAS), Platform-as-a-Service (PAAS) and Software-as-a-Service (SAAS).  • Experience in Implementing Data warehouse solutions in AWS Redshift worked on various projects to migrate data from on database to AWS Redshift, RDS and S3.  • Experienced in Cloud automation using AWS Cloud Formation, Terraform templates.  • Experienced in Amazon Cloud (EC2) Hosting and AWS Administration including S3 and IAM Services.  • Experienced in writing Ansible playbooks to launch and automate AWS instances on Ubuntu and Amazon Linux.  • Experienced in writing Chef Cookbooks to launch instances and configure and Manage Infrastructure.  • Using AWS, Creating, Importing and launching volumes, EC2, RDS, Lambda, security groups, auto-scaling, load balancers (ELBs), NAT, NACL in the defined VPC.  • Experienced in triggering Cloud Watch alarms and specified thresholds with metrics and notified by creating subscribers by using SNS.  • Expertise in using Google Cloud Platform (GCP), AWS Cloud Platform & API tools.  • Excellent knowledge of Google Compute Engine, Google Cloud Storage, Google Cloud Load Balancing and other services of the GCP family.  • Experienced in Creating and managing a Docker deployment pipeline for custom application images in the cloud using Jenkins, working on Docker hub, creating Docker images and handling multiple images primarily.  • Experienced with container-based deployments using Docker and working with Docker images, Docker Hub and Kubernetes.  • Good experience in creating the IAM Service: IAM Policies, Roles, Users, Groups and service accounts thru Terraform Scripts.  • Experienced in Creating Terraform scripts for EC2 instances, Elastic Load balancers and S3 buckets, Planned, developed & maintained Infrastructure as code using CI/CD deployments using Terraform.  • Worked with Kubernetes to automate deployment, scaling and management of web Containerized applications, Worked with Spinnaker for Continuous Deployment with Kubernetes for container orchestration with Kubernetes, Container Storage, automation, to enhance container platform multi-tenancy.  • Experience in AWS Cloud Computing services, such as EC2, S3, Lambda, API, Dynamo, EBS, VPC, ELB, Route53, Cloud Watch, Security Groups, Cloud Trail, IAM, Cloud Front, Snowball, EMR, RDS, and Glacier.  • Supported multiple DevOps project implementation through Infrastructure Automation, Configuration Management, Deployment Management, and Test Orchestration.  • Experienced in Setting up ElasticSearch service on AWS.  • In-depth knowledge of DevOps management methodologies and production deployment which include Compiling, Packaging, Deploying and Application Configurations.  • Experience in various scripting languages like Shell, Ruby and Python focus on DevOps tools, CI/CD and AWS Cloud Architecture.  • Extensive experience using MAVEN and ANT as a Build Tool for the building of deployable artifacts (Jar, war & ear) from source code.  • Involved in JIRA as defect tracking system and configure various workflows, customizations and plugins for JIRA bug/issue tracker, integration of Jenkins with JIRA and GitHub, Bitbucket.  • Experienced in installing and configuring Apache, Tomcat, Java and SQL and web hosting administration HTTP, SSH and RSH.  • Experience in developing a fully automated continuous integration system using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash.  • Configured network protocols such as DNS, DHCP and SMTP and troubleshoot network issues related to TCP/IP protocol providing support for users in solving their problems.  • Experience in using RDBMS like SQL, MySQL, Oracle and NoSQL databases such as Dynamo DB, MongoDB.  • Extensive experience in monitoring tools like Nagios, Splunk and CloudWatch.  • Experienced in Installation, Configuration & administer Splunk Enterprise Server and Splunk Universal Forwarder, Splunk Heavy Weight Forwarder in large distributed environment.  • Implemented the effective Data sizing of the ELK Cluster based on the data flow and use cases.  • application servers,  • Worked with Client's OpenStack cloud, created instances using nova client, setting security and deploy applications and brought them in to production after QA testing.  • Experience Automating the OpenShift cluster installation using Ansible playbooks.  • Experienced deploying application on PCF using Build pack and Docker.  • Automating the Microsoft .NET software build, packaging, and deployment processes using TFS and VSTS (Azure DevOps) Work Experience Azure DevOps Engineer Bayer - St. Louis, MO May 2018 to Present Responsibilities:  • Designed Premises applications on cloud platform Azure in dealing with Azure (PaaS) - Virtual Networks, Virtual Machines, Resource Groups, Express Route, Traffic Manager, VPN, Load Balancing, Application Gateways, Auto-scaling.  • Created Azure services such as compute virtual machines, azure storage, azure active directory, SQL Database, Azure DNS and Azure Application Insights. Created Azure Virtual Networks, subnets, Azure network settings and Azure cloud.  • Created and maintained containerized microservices and configured private container registry Microsoft Azure for Hosting Images and using Windows Active Directory.  • Designed cloud-native applications and resilient infrastructure, Azure Web App including all key domains such as compute, storage, Site Recovery and networking.  • Configured VMs availability sets using Azure portal to provide resiliency for IaC based solution and scalable sets using Azure Resource Manager to manage network traffic.  • Developed automated scripts using the .NET framework in Visual Studio VSTS.  • Experience in Custom Process design of Transformation via Azure Data Factory & Azure Pipelines.  • Designed a fast DR solution using Azure Cloud ARM templates DSC, and PowerShell scripts.  • Created Azure Cloud run books for the backup and recovery of Microsoft Dynamics including all the necessary Power-Shell scripts and configuration items such as certificates and password vault.  • Create performance measurements to monitor resources across Azure using Azure native monitoring tools utilizing ARM template.  • Developed and implemented software release management strategies for various applications according to the agile process.  • Deployed java applications to application servers in an agile continuous integration environment and also automated the whole process.  • Created GIT repository for storing Terraform files and maintaining versioning. Converted existing Terraform modules that had version conflicts to utilize Resource Manager during Terraform deployments to enable more control or missing capabilities.  • Created several pods using Master and Minion architecture of Kubernetes and developed microservice on boarding tools leveraging Python allowing for easy creation and maintenance of build jobs and Kubernetes deploy and services.  • Migrated the Micro Service Based applications from Virtual Machines to Docker containers and managed the clustered containers using Kubernetes.  • Implemented Redhat OpenShift platform: Creating Java, PHP application docker image and deploy on Docker, Kubernetes and OpenShift environment.  • Deploy the alpha and Beta releases in clustered mode of the applications before they are approved for production.  • Wrote Ansible modules to deploy Docker services on the Docker cluster for the entire microservices stack.  • Implementing CI/CD system with Jenkins and Kubernetes, docker, Ansible and Terraform for the runtime environment for the CI/CD system to build, test and deploy.  • Configured Git with Jenkins and schedule jobs using Webhooks and installing Jenkins master and slave nodes.  • Developed the Pipelines in Jenkins to automate the .NET and java builds and to update database during the releases.  • Experience in CI/CD using Jenkins for application process and in production support.  • Managed Sonar type Nexus repositories to download the artifacts (jar, war & ear) during the build.  • Performed integration of Code Quality Analysis techniques - Check style, Find bugs with CI tools.  • Installed GRUNT, SonarQube on sandbox and installed plugins basing on developer requirements.  • Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets.  • Worked on creating Azure Blob for storing unstructured data in the cloud as blobs  • Provided high availability for IaaS VMs and PaaS role instances for access from other services in the VNet with Azure Internal Load Balancer.  • Designed the Azure Data Factory Pipelines to move the data from On-Premise SQL Database servers to Azure SQL Database servers using the Azure Data Factory Copy tool and Self-Hosted Runtimes.  • Implemented Bug Tracking tools like JIRA and HP Quality center. Used JIRA as a Change Management/ Work Management/ SCRUM Agile Tool. Experience with various persistence mechanisms and APIs like SOAP API's and Rest API's.  • Monitoring health of the infrastructure and applications using Prometheuos, Grafana and Nagios and taking proactive measures.  • Worked in advocating, maintaining and monitoring of Active Directory (AD) services infrastructure and Azure Active Directory (AAD) infrastructure, incorporated with periodic auditing, troubleshooting, and performance.    Environment: Azure DNS, Azure Application, Visual Studio VSTS, Azure Data Factory & Azure Pipelines, azure storage, Azure Blob, azure active directory, SQL Database, Azure Cloud ARM templates DSC, SonarQube, Webhooks, Jenkins, PowerShell scripts, Kubernetes, Terraform, Python, Docker, .NET, Nexus, Code Quality Analysis, SonarQube, Azure Blob, VNet and JIRA. Cloud DevOps Engineer Videojet Technologies - Duluth, GA March 2017 to May 2018 Responsibilities:  • Setting up and building AWS infrastructure resources such as VPC, EC2, S3, IAM, EBS, ELB, Route53, Cloud front, Cloud trail, SNS, SQS, CloudWatch, ECS, EMR, Elasticsearch, Security Group, Auto Scaling, Lambda and RDS in Cloud Formation and involved in deploying the content to Cloud platform on AWS using EC2, S3 and EBS.  • IAM to set up user roles with corresponding user and groupPolicies using JSON, Defined AWS Security Groups which acted as virtual firewalls that controlled the traffic allowed to reach one or more AWS EC2 instances.  • Utilized AWS API gateway for authentication, authorization, caching, throttling, and monitoring for the REST APIs implemented as individual AWS ECS services, in the microservices based architecture.  • Designed AWS ALB based service discovery for the AWS ECS tasks running docker containers, by utilizing task based (awsvpc) networking mode in AWS ECS and dynamic host port mapping feature of AWS ALB.  • Architected a blue/green deployment strategy along with canary analysis via AWS Route53, for the greenfield LAMP stack web app, by using DNS routing update with AWS Route53 and swapping environment URL's in AWS Elastic Beanstalk  • Configured an ansible control host in the AWS VPC and ansible playbooks with AWS modules, to work with the AWS infrastructure and enable automated EBS volume snapshot/ AMI creation to support the backup strategy.  • Created Infrastructure as Code by using Terraform and Cloud Formation and worked on creating Cloud Formation templates for dev, test, staging and production.  • Planned and design infrastructure for automating VPC flow logs through kinesis into Splunk managed on AWS.  • Automated Splunk infrastructure for Logging and Monitoring team by through Ansible Playbooks.  • Creating automated deployments job for Tomcat with Jenkins and managing deployment automation using Ansible and custom Ansible inventory files.  • Used Ansible to document all infrastructures into version control and Used Ansible to document application dependencies into version control.  • Managed Maven environment by setting up local, remote and central repositories with required configuration in maven configuration files.  • Responsible for maintenance of the GIT repositories which includes Jenkins Integration, creating pull requests, code reviews, branching, merging and transitioning JIRA issues.  • Responsible for design and maintenance of the GIT repositories and the access control strategies and Performed all necessary day-to-day GIT support for different projects, created new jobs in Jenkins and built pipeline for Continuous Integration and migrated applications to the AWS cloud.  • Implemented AWS cloud services to launch Linux and windows machines, created security groups and written basic PowerShell scripts to take backups and mount network shared drives.  • Created container-based deployments using Docker, working with Docker images, Docker Hub and Docker registries and Kubernetes.  • Used Ansible and Ansible Tower as Configuration management tool, to automate repetitive tasks, quickly deploys critical applications, and proactively manages change.  • Maintained Artifacts in binary repositories using JFrog Artifactory and pushed new Artifacts by configuring the Jenkins project Jenkins Artifactory plugin.  • Designed distributed private cloud system solution using Kubernetes (Docker) on CoreOS, Automated various infrastructure activities like Continuous Deployment, Application Server setup, Stack monitoring using Ansible playbooks and has Integrated Ansible with Jenkins.  • Docker engine to create and use containers; SaaS-based services for creating and sharing Docker services in Docker hub.  • Created and launched EC2 instances using AMI's of Linux, Ubuntu, RHEL, and Windows and wrote shell scripts to bootstrap instances.  • Design and implemented ElasticSearch cluster for divert web traffic to ES domain.  • Established backup, recovery, monitoring and alerting processes for ElasticSearch and implement them across multiple application environments.  • Implemented Kubernetes to manage containerized applications using its nodes, Config-Maps, Selector, Services and deployed application containers as Pods.  • Monitoring and analysis of Kubernetes pods logs using ElasticSearch by deploying Filebeat as a DaemonSet.  • Created two separate Jenkins pipelines for running Terraform scripts and the other to Push the Docker Images and Update the latest Image.  • Virtualized the servers on AWS, Linux and Windows using Docker, created the Docker file. Built various containers using Docker engine and Docker Machine environments, to deploy the micro services-oriented environments for scalable applications.  • Extensive PowerShell and VBScript scripting for Remote management of Windows 2003 & Windows 2008 servers. Managed security and launch configurations using PowerShell.  • Building scalable, resilient microservice APIs deploying in cutting edge Pivotal Cloud Foundry (PCF) infrastructure employing Spring Cloud, Spring Boot stacks.  • Wrote Python, Groovy and shell Scripts to automate the build process and administration jobs.    Environment: Terraform, Docker, Kubernetes, Jenkins, ANT, Maven, API gateway, VPC, EC2, S3, IAM, EBS, ELB, Route53, Cloud front, Cloud trail, SNS, SQS, CloudWatch, ECS, EMR, Elasticsearch, Security Group, Auto Scaling, Lambda, RDS in Cloud Formation Splunk, Git, Groovy, shell Scripts, PowerShell, Pivotal Cloud Foundry, Route53, SVN, Jira, Bash, Perl, Python, Ruby, Tomcat, WebSphere, DNS, Nagios, RHEL. DevOps Engineer Zebra Technologies - Lincolnshire, IL August 2016 to March 2017 Responsibilities  • Configured Cloud platform such as Virtual Networks Multi-site, Cross-site, VMs, Azure AD, Load Balancers, Azure SQL, Cloud Services, etc.  • Established connection from Azure to On-premise datacenter using Azure ExpressRoute for Single and Multi-subscription connectivity.  • Design, install, administer, and optimize hybrid cloud components to ensure business continuity (i.e. Azure AD, ADFS, SSO & VPN Gateways).  • Deployed Azure IaaS virtual machines (VMs) and Cloud services (PaaS role instances) into secure VNets and subnets.  • Leveraged "Azure Automation" and PowerShell, Chef and Ansible to automate processes in the Azure Cloud  • Implemented multiple Google Cloud Services for computing: Compute Engine and App Engine, for networking Cloud Virtual Networks, Cloud Load balancing, Cloud Interconnect specifically partner interconnect with Equinix and XPN(Shared-VPC), for storage and DB Cloud Storage, Cloud Bigtable, Cloud SQL, and PDs, for big data Big Query and Cloud.  • Leveraged OpenID Connect standards to authenticate users using PingId for setting up the SSO for the Google Cloud as an Identity Provider (IdP) and Pinguid as a Service Provider (SP).  • Created and developed strategy for Docker containers, deploying and operating on Kubernetes on Google Cloud Platform to achieve.  • Defining our Cloud IAM policies and roles for different GCP components  • Configured and standardized permanent and highly available communication between Jefferies On-premises network and Google Cloud Platform (GCP).  • Implemented Google Cloud Platform (GCP) API's like compute engine instance to run on public and custom images and familiar with other services cloud functions, Kubernetes engine, VPC Network.  • Migrated the Legacy application into Google cloud platform and managing the GCP services.  • Created automated Stackdriver monitoring alerts using Terraform on Google cloud platform (GCP).  • Configured Google Kubernetes Engine (GKE), Google App Services for deploying microservices in different environment.  • Migrated build.xml into pom.xml to build the applications using Apache MAVEN.  • Engineered Splunk to build, configure and maintain heterogeneous environments and maintained log analysis generated by various systems including security products.  • Created Jenkins CI/CD pipeline jobs for end-to-end automation to build, test and deliver artifacts and Troubleshoot the build issue during the Jenkins build process.  • Implemented Jenkins Code Deploy plugin to deploy to Azure and used to automate the build process and deploy the application to Tomcat server.  • Implemented CI/CD using Jenkins Pipeline using Docker-Jenkins Integration.  • Worked on Branching and Merging, Resolving Branching Strategy maintaining Branching strategy using GIT.  • Used GitHub repository for storing Terraform files and maintaining versioning.  • Deploying, configuring, managing, Master and Agent machines using chef and Debugging Chef Recipes and their execution trying to pull logs into Splunk and monitor deployments.  • Developed and version control of Chef Cookbooks, testing of Cookbooks using Food critic and Test Kitchen and running recipes on nodes managed by on premise Chef Server.  • Configuring and maintaining Chef Master Server, creating modules and pushing them to chef clients.  • Implementing Continuous Delivery pipeline with Docker & Swarm, Maven, Jenkins.  • Build scripts using ANT and MAVEN build tools in Jenkins to move from one environment to other environments.  • Setting up continuous integration and formal builds using Jenkins with the Nexus repository and resolved update, merge and password authentication issues in Jenkins and JIRA.  • Executing builds and troubleshooting builds, Interaction with development and QA teams.  • Implemented the setup for Master-slave architecture to improve the Performance of Jenkins.  • Managed Maven project dependencies by creating parent-child relationships between projects.  • Managed Dependency Management within the teams by installing and configuring Nexus Repository Manager.  • Perform periodic system audits on all environments to ensure that only controlled versions of software reside all environments.    Environment: Azure, Azure AD, Azure SQL, Azure IaaS, PowerShell, VPN Gateways, Vnets, Azure Automation, Google Cloud Platform (GCP), Google Compute Engine and App Engine, Google Cloud Services, networking Cloud Virtual Networks, Cloud Load balancing, DB Cloud Storage, Cloud Bigtable, Cloud SQL, big data Big Query, Chef, Ansible,Docker, Kubernetes, MAVEN, Jenkins, Jenkins CI/CD pipeline, Splunk, terraform, ANT, JIRA and Nexus. DevOps Engineer Mozido - Austin, TX March 2016 to August 2016 Responsibilities:  • Implemented AWS solutions using EC2, S3, IAM, RDS, EBS, ECS, Route53, Elastic Load Balancer, Auto scaling groups, AWS CLI services using API's  • Configured S3 versioning and lifecycle policies to and backup files and archive files in Glacier.  • Resolving build issues during build and release cycle by conducting meetings with developers and managers.  • Worked with development/testing, deployment, systems/infrastructure and project teams to ensure continuous operation of build and test systems  • Created a high availability and scalable AWS stacks using EC2 auto scaling functionality.  • Used Stack Driver and AWS cloud monitoring extensively to monitor and debug the cloudbased AWS EC2 services.  • Configured Docker container for branching purposes and Implemented Docker automation solution for Continuous Integration / Continuous Delivery model.  • Used Jenkins and pipelines to drive all microservices builds out to the Docker registry and deployed in the ECS.  • Created tagging standards for proper identification and ownership of EC2 instances and other AWS resources.  • Coordinate/assist developers with establishing and applying appropriate branching, labeling/naming conventions using Subversion.  • Develop and configure of Continuous Integration (CI) scripts for releases and Enhancing/Maintaining to suite the request from teams across the organization.  • Deployed Puppet, Puppet dashboard for configuration management to existing infrastructure.  • Analyze and resolve conflicts related to merging of source code for SVN.  • Implement, maintain and support reliable, timely and reproducible builds for project teams.  • AWS Deployment setup, Application Stack deployments and Troubleshooting Scenarios.  • Researched and implemented code coverage and unit test plug-ins like find bugs, check style and PMD with Maven.  • Developing procedures to unify, streamline and automate application development and deployment procedures with Linux container technology using Docker.  • Experience in designing and developing infrastructure using Terraform and Cloud Formation and automated end to end transit hub connectivity resource deployment in AWS.  • Proactively monitor and report on MySQL/SQL Server database performance and capacity and provide trend analysis for all environments.  • Build and maintain uDeploy Processes for consistent application deployment across the environments.  • Collaborated with development and support team to setup a continuous delivery environment with the use of Docker.  • Maintaining systems and subsystems, servers monitoring and maintain and monitoring servers, creating nodes making and maintaining networking connections between systems as a System integrator.  • Designed, supported and maintained the Splunk infrastructure in Windows and Linux environments. Installation of Splunk Enterprise, Apps in multiple servers with automation.  • Configured and maintained Hudson to implement the CI process and integrated the tool with Ant and Maven to schedule the builds. Took the sole responsibility to maintain the CI Hudson server.  • Developed Shell/Perl Scripts for automation purpose.  • Work with development/testing, deployment, systems/infrastructure and project teams to ensure continuous operation of build and test systems.  Environment: Subversion, AWS, Jenkins, SVN, Docker, uDeploy, terraform, Puppet, maven, UNIX, splunk, Jira, Ant, Perl and Hudson. Build and Release Engineer Matrix Solutions - Hyderabad, Telangana April 2014 to December 2015 Responsibilities:  • Installed, configured and administered Jenkins CI tool on Linux machines and Configuration Management (SCM) tools like Subversion (SVN), GIT.  • Setup Jenkins Build server and maintenance which is used as a continuous integration tool for build and deployment of JAVA code.  • Experience in User Management and Plug-in Management for Jenkins and Used the continuous integration tool Jenkins to automate the daily processes.  • Created Instances in Apache Web Server and JBOSS Application server in QA and Production environments.  • Worked in creating WebSphere Application Server Clustered Environments and handling Load Balancing for QA, UAT and Production.  • Automated Linux production server setup using Puppet scripts. Documented release builds and source control processes and plans.  • Designed and implemented Puppet-based configuration management system for all new Linux machines (physical and virtual).  • Managed Maven environment by setting up local, remote and central repositories with required configuration in maven configuration files.  • Experience with Build Management tools like Maven for writing build.xml and Pom.xml.  • Managed the Maven Repository using Nexus tool to automate the build process and used the same to share the snapshots and releases of internal projects  • Used ANT and MAVEN as build tools on Java projects for the development of build artifacts on the source code.  • Created Maven shell scripts for build and release activities in QA, Staging, and Production environments.  • Managed SVN repositories for branching, merging, and tagging.  • Performed all necessary day-to-day Subversion/GIT support for different projects.  • Integrate GIT into Jenkins to automate the code check-out process.  • Using GIT as configuration Management tool to have version control  • Responsible for design and maintenance of the Stash GIT Repositories, views, and the access control strategies.  • Written Perl script to monitor and notify team about the Rsync updates  • Developed and maintained UNIX/Perl/ANT scripts for Java/J2EE build and release tasks.  • Implemented Release schedules, communicated the Release status, created Roll Out Plans, tracked the Project Milestones, prepared the reports and chaired the Release calls and worked for a Jira Application.  • Deployed Enterprise Application Archive (EAR), Web Application Archive (WAR), Staging and Production environments.  • Modified ANT scripts to build the JAR's, Class files, WAR files and EAR files from VOB's.  • Strong ability to troubleshoot any issues generated while building, deploying and in production support. Good Interpersonal Skills, team-working attitude, takes initiatives and very proactive in solving problems and providing best solutions. Good knowledge on ITIL Process and have worked on coordinating releases across the projects.  • Followed Waterfall methodology for application development. Proposed and implemented branching strategy suitable for Agile development in Subversion.  Environment: Linux, GIT, Subversion, Jenkins, JBOSS, SQL Server, Oracle, Puppet, Ant, Maven, Perl, Python, Jira, Web Sphere, Tomcat, Apache Web Server, Web Application Server, Subversion and Agile/Waterfall methodology. Jr. Python Developer Navayuga Infotech - Hyderabad, Telangana February 2013 to April 2014 Responsibilities:  • Responsible for the design and development of different web-based applications based on client's requirements.  • Maintained and improved the security level of data.  • Developed applications using CherryPy and Flask ( Python frameworks)  • Utilized Pandas - python library for analyzing data and data structures.  • Managed large datasets using Pandas data frames and SQLite  • Designed email marketing campaigns and also created responsive web forms that saved data into a database using Python / Django Framework.  • Developed Python scripts to read from Excel files, generate XML configuration files and also for generating IP access frequency lists in different data logs  • Performed front-end development for web initiatives to ensure usability, using HTML and CSS.  • Tested all completed work to ensure proper and error free functionality  • Enhance the quality, feel, and usability of consumer-facing website  • Wrote Use Case diagrams, Class diagrams Sequence Diagrams, and State Diagrams.  • Collaborated with a team of instructors and programmers to develop the curriculum and guidelines for workshops to teach the logic of programming.  • Designed manuals, workbooks, and other printed media for reference purpose.  • Created and ran custom SQL queries and stored procedures and also created an application to stored client phone calls and emails that were routed to various developers  Environment: Python 2.6/2.7, Django 1.2, CherryPy, Flask, SQLite, Pandas, HTML, CSS Education Master's in Computer Science in Computer Science Virginia International University - Fairfax, VA 2018 Batcher's Jawaharlal Nehru Technological University - Kakinada, Andhra Pradesh 2013 Skills Docker, Git, Gradle, Html, Jenkins, Python, Ruby, Scripting, Subversion, Ant, Configuration management, Maven, Msbuild, Chef, Dns, Firewalls, Nagios, Puppet, Jira, nginx Additional Information Technical Skills:    Cloud Platforms AWS, Azure, Google Cloud Platform (GCP), and OpenStack.  Continuous Integration Tools Jenkins, Bamboo, and TeamCity.  Containerization and orchestration Docker, Kubernetes  Configuration Management Tools Ansible, Puppet and Chef.  Version control tools GIT, Bitbucket, GitHub and Subversion  Build Tools Maven, MSBuild, ANT and Gradle.  Tracking Tools JIRA, ServiceNow and Orange Scrum.  Artifact Repositories Nexus and Artifactory.  Logging & Monitoring Tools Nagios, Splunk, Azure Monitor, ELK Stack (Log stash & Kibana), CloudWatch and Network Watcher.  Web Servers and Application Servers Apache, Nginx, JBoss, Apache Tomcat and WebLogic.  Operating Systems RHEL/CentOS 5/6/7, Ubuntu, Fedora, Sun Solaris 7/8/9/10, Windows Server 2003/2008/2012, Linux/Unix and MAC OS.  Network Services and Topologies LDAP, DNS, Web, FTP, Sub netting, LAN, VPC, WAN and firewalls.  Scripting languages Shell, bash, Python, HTML, Ruby, and YAML.  Cloud Migration, Infrastructure Spin-up Tools Terraform, CloudFormation and Azure Resource Manager.