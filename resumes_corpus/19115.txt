Senior Engineer Senior Engineer Senior Engineer - Salesforce Work Experience Senior Engineer Salesforce - San Francisco, CA July 2016 to Present The project is part of Salesforce infrastructure team which implemented logical model that enables service teams to easily describe and instantiate their services' access policies, which dictate how grouping of devices should be able to communicate with one another. Service team can work with Network Security to codify their access policies, have those policies reliably and automatically implemented in any environment. The initial project Ev1 was built in Python. The project Estatev2 was to migrate to GoLang project.    • Analyze the business logic in Ev1 python project.  • Create the user stories in Scrum based on the analysis.  • Participate design and code retro discussions.  • Code the functionality in GoLang.  • Code Review the pull requests created by peer developers in GitHub.    Environment: Python, Golang, Docker, Shell scripting, GitHub, Jenkins, Agile. Sr. Python Developer Rackspace July 2012 to June 2016 Rackspace is a managed cloud computing company. The customer cloud usage is jjmonitored by CloudUsage application and the usage of the customer is rated through Oracle BRM(Billing & Revenue Management) system.    Project 1: Built a fully automated and integrated system for billing management process in python using OpenCafe as framework. There are various components of billing management process. Module which I worked on is to develop automated framework which enables to test the individual components of the entire system. Individual components provide RESTful API service. The developed framework's base framework is opencafe. The framework is developed using Python.  • My Role in this project is Technical Lead for the team of 4 developers.  • Understand the requirements of the project.  • Make the design and implementation plan of the project.  • Assign the tasks to developers and review the code.  • Deliver the quality code and deploy build through Jenkins.    Project 2:    BSL is a billing service layer that contains various operations related to billing operations.  This service has various micro services, which are interrelated together as a system.    1) BSL 1.0 contains operations such as getbalance, getcurrent cycles etc. There are 18 apis related to it.  2) BSL 2.0 provides system related api operations. There are 10 apis related to it.  3) Payment Service acts as a gateway for accepting payments for different products Rackspace provide.  4) BSL Syncs are process/programs that consumes the feeds from Atomhopper and calls the BSL and PSL apis to migrate the data to underlying Oracle BRM.    There are 8 sync pieces such as Billing Account Creation Process, Billing Account Updation Process etc which run continuously to consume feeds for Atomhopper. These are subscribers to the Atomhopper. Publishers to this atomhopper are Signup service, Usage monitoring Service etc.    • Developed using Python on Django framework.  • Designed, developed and unit tested the payment and billing services.  • Designed and developed failover mechanism for failed requests during service processing.  • Developed horizontally scalable mechanism for increasing loads of processing.  • Deliver quality code and deploy build through Jenkins.    Environment: Python, OpenCafe, Django, Oracle BRM, Shell scripting, GitHub, Agile, Jira, SQL, and Linux. Sr. Consultant Deloitte, Hermitage December 2010 to June 2012 Deloitte implemented corporate programs dashboard for internal processes and business modules as a part of Policy, Compliance and Corporate Programs. This dashboard enables the users to execute and manage the corporate programs (Wireless Inventory and Corporate Cards Inventory) critical processes. The dashboard also provides reporting for various FSS in areas of Sales, Revenue, Corporate programs. The Corporate programs Special Projects team is responsible for smooth running of Wireless and Corporate Cards automated business processes.    • Responsible for overseeing all phases of project management from concept to release: requirement gatherings from end users, analysis, design, development, deployment and testing of key modules  • Implemented using HTML, CSS, Java script, Django framework, SQL Server.  • Conduct regular meetings, giving demos and presentations of the proposed model and coordinate with projects team, end users and internal clients  • Handle the tasks of tracking progress of projects against goals, objectives and timelines.  • Responsible for ensuring successful implementation of projects in compliance with company Software Quality processes  • Perform responsibilities of managing project team by providing direction and leadership in the absence of the Manager  • Testing the functionality of the modules.    Environment: Python, Django, JQuery, JavaScript, HTML, CSS, XML, JSON, AJAX, T-SQL and SQL Server. Sr. Developer Seagate - Denver, CO June 2009 to November 2010 Seagate built a custom continuous integration process written in Python, integrated with GIT that could build and deploy automated builds of the Applications under Test to custom hardware distributed across global geographic locations. Builds could be queued within the system directly from a developer's sandbox, from anywhere in the world where the new software would be built and automatically smoke tested. System was distributed across global geographic locations, could automatically select appropriate hardware configuration to execute test cases that were matched directly to the type of hardware architecture being tested.    • Developed the framework using Python  • Requirement gathering, design, develop integration and deployment tool  • The tool reads the user inputs, reads configuration xml file, creates the original build by getting files from the Git version control. Makes the build and upon successful completion of build deploys to the hardware and runs the required test suite. Every step informs the user about the completion of job with an email.  • Enhanced to automatically select appropriate hardware configuration(xml) to execute test cases that were matched directly to the type of hardware architecture being tested.    Environment: Python, Git, Linux, Shell scripting, Linux. Analyst Deloitte - IN April 2007 to May 2009 The objective of the project was to design and develop database models and ETL to meet reporting requirements for corporate program team.    Responsibilities:  • Created various database objects (tables, indexes, views, stored procedures and triggers) and implemented referential integrity constraints for enforcing data integrity and business rule.  • Extensively used joins and sub queries to simplify complex queries involving multiple tables.  • Performed troubleshooting operations on the production servers.  • Write T-SQL statements for retrieval of data and involved in performance tuning of TSQL queries.    Environment: SSIS, SQL Server, Visual Basic.Net, Windows. SQL Developer Avenion Pvt Ltd November 2005 to March 2007 The System was responsible for taking in raw data from flat files and Oracle processing those creating invoices for the customer.    • Created tables, indexes, sequences, constraints, triggers and procedures  • Worked with Functional team to make sure required data has been extracted and loaded.  • Provided support for ad hoc data extraction requirements.    Environment: Oracle, PL/SQL, Unix. Additional Information Technical Skills:    Languages Python, GoLang, Java    Technologies SOAP, RESTful, ETL  Web Technologies HTML, CSS, Java Script, JQuery, Django, Tomcat  Databases & ETL SQL Server, Oracle, PostgreSQL, Informatica, SSIS  Development IDE PyCharm, Sublime, Eclipse IDE  Scripting Shell Scripting, Python  Versioning Tools Perforce(P4V), ClearCase, SVN, Git  Operating System Windows, Linux, Unix