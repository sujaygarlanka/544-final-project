Python/ORACLE Developer <span class="hl">Python</span>/ORACLE <span class="hl">Developer</span> Python/ORACLE Developer - Bank Of America • Highly motivated and experienced software professional with over 9 years of experience  • Good working experience in ORACLE, Python Unix Shell programming  • Well experienced in UNIX Korn shell scripting.  • Good Working experience in UNIX AWK/SED.  • Experience in creating ORACLE database objects such as databases, tables, views, macros, stored procedures.  • Well knowledge in production support.  • Excellent logical and analytical skills - solve complex problems.  • Good Working experience on python web application development using Django web framework and Flask.  • Good working experience in python NumPy to implement complex business rules.  • Experience in reading and writing xml reports with Python XML modules. Work Experience Python/ORACLE Developer Bank Of America - Charlotte, NC October 2013 to Present Saber 2 is an application built for the purpose of calculating the firm's Risk Weighted Assets (RWA) for multiple products across several line of business work streams (Retail lending and Wholesale channels for example). It is meant to handle calculating the regulatory capital requirements for supported products and supply necessary inputs into the economic capital functions used by Enterprise Capital Management (ECM).It also endeavors to support other requirements from ECM and their stakeholder's more easily by providing a modular platform that can be leveraged in pieces. This modular capability will also allow technology to deliver enhancements and new solutions faster than is currently possible with the existing platform.    Responsibilities  • Involved in requirement analysis, database design, coding, testing, implementation and review for re hosting.  • Worked on saber archive process to backup the data files and maintain the space on the unix servers.  • Developed and automated the Python jobs for Saber to Saber 2 migration.  • Worked on Parsing various format of files like XML using Python XML modules.  • Interacting with data modeling and ETL teams to convert logical data models into ORACLE physical data models and recommending, implementing data type changes and primary index by enhancing ORACLE best practices.  • Enhanced SQL performance tuning by collecting/refreshing statistics and enhancing the proper primary index and introducing PPI and MLPPIs.  • Worked on migrating config files to centralized xml config to be used by Python framerwork.  • Worked on writing Python wrappers to streamline the saber environment.  • Worked on Saber Smoke test report generation using Python and XML configs.  • Worked extensively on creating python modules for Saber ORACLE/oracle calculator framework.  • Worked on creating downstream feeds in XML format.  • Created saber config review pages using HTML and python Django and flask libraries.  • Worked on implementing saber calculator logic using python advanced libraries like NumPy.  • Worked on implementing OO Python standards to rewrite the remote framework.  • Worked on development of db refresh project for weekly backup of ORACLE.  • Implemented Risk weighted wholesale calculator login using Python NumPy.  • Worked on Saber/Saber 2 health check report jobs using python, shell scripts.  • Worked on development of config review process.  • Developed and implemented Web based Saber control Panel using Flask and Djago libraries.  • Worked on Isolated environment builds for business testing.  • Worked on ORACLE data lineage process to map source to target db, table and column mappings using OO Python.  • Worked on automating the weekly data archive jobs using autosys.  • Worked on troubleshooting environment relates issues during monthly SDLC cycle.  • Provided support for job scheduling, file transfers, and transactional processes.  • Worked on migration of CRM job from JAVA to Python using NumPy.  • Worked on modifying the job reset option to kill the backend processes in unix and windows.  Environment: python, KSH, R/MATLAB, BCP, OO Python, UNIX, Windows NT, Django, Flask, Numpy ORACLE Developer First Data - Louisville, KY April 2012 to September 2013 CADRE is the back office exceptions processing application that integrates imaging and artificial intelligence to assist dispute analysis in resolving the disputes related to the credit card transactions. To efficiently process disputes, CADRE depends on receiving and sending files to major credit card associations VISA, MasterCard and Diners and our supported merchants. Expedites workflow and turn-around time for resolution of exception items.  Responsibilities  • Involved in requirement analysis, database design, coding, testing, implementation and review for re hosting.  • Worked on creating centralized email system for CADRE backend emails using python.  • Wrote routines in python - update database from XML files and vice versa.  • Developed Sybase Stored procedures for the back end processing of the proposed data base design  • Automated console with scaling in ORACLE SQL.  • Participated in meetings to gather and analyze the requirements for new applications, data model changes, and made recommendations from ORACLE database point.  • Created Python batches - monitor errors in data loading at particular frequency.  • Coded and deployed application in test and production environments.  • Worked on CADRE code migration from Delphi to Python using pyhon Django, javascript and HTML  • Implemented complex business rules for credit card reversals using python Pandas Data structure library.  • Compiled the c code in 64 bit for the re hosting of the CADRE app.  • Worked extensively on fixing the backend code issues post reshot.  • Worked on overnight batch support post re host.  • Developed performance utilization charts, optimized and tuned SQL and designed physical databases. Assisted developers with ORACLE load utilities and SQL.  • Created BTEQ scripts to extract data from warehouse for downstream applications.  • Extensively worked on ORACLE performance optimization and brought down the queries to seconds or minutes from spool out and never ending queries by using various ORACLE optimization strategies.  • Used the Visual explain to analyze the Query plans.  • Designed and developed Python scripts for sending application based mails.  • Wrote XML synchronization code using Python and UNIX shell scripts.  • Worked editing, testing and deploying shell and python scripts for migration from ftp to Secure+ Maintained multiple levels of support for all systems batch processing  • Provided support for job scheduling, XML file transfers, and transactional processes  • Involved with production and quality assurance environment support  Environment: python, KSH, R/MATLAB, BCP, OO Python, UNIX, Windows NT, Django, Flask, Numpy Python Developer Liberty Mutual - Dover, NH March 2011 to February 2012 LUNAR is a life insurance application used - maintain the new business applications for individual life insurance. Lunar is used by the business - receive applications for new policies, apply money - the policy as per the product and Issue the policy - policy holders.  Responsibilities  • Involved in requirement analysis, database design, coding, testing, implementation and review  • Involved in creating data upload modules in python.  • Worked extensively in python and HTML /Java Script for front end with flask  • Created python batches - monitor errors in data loading at particular frequency  • Wrote routines in python - update database from XML files and vice versa  • Created many python scripts and stored procedures - avoid job processing failures and use of stale data by systems  • Wrote Python and Shell scripts - automate the verification of the information inserted in the database via the web application  • Used pyodbc/ connectivity from Python - ORACLE.  • Involved in loading of data into ORACLE from legacy systems and flat files using complex MLOAD scripts and Fast Load.  • Studied the existing python modules and wrote functional specification for migration team  • Wrote all BTEQ and UNIX scripts used in loading of legacy data  • Enterprise wide templates were created for handling SCD, Error handling etc.  • Handled scheduling of Korn Shell scripts that loaded data from flat files - ORACLE.  • Worked in data handling using UNIX scripts using mload and fast export.  • Involved in writing ORACLE SQL bulk programs and in Performance tuning activities for ORACLE SQL statements using ORACLE EXPLAIN.  • Used External Loaders like Multi Load, T Pump and Fast Load to load data into ORACLE database. Involved in analysis, development, testing, implementation and deployment.  • Involved writing BTEQ scripts for validation & testing of the sessions, data integrity between source and target databases and for report generation  • Maintained multiple levels of support for all systems batch processing  • Provided support for job scheduling, file transfers, and transactional processes  • Involved with production and quality assurance environment support  Environment: python, flask, KSH, BTEQ, MLOAD, HTML, ORACLEJavaScript, SQL, PL/SQL, OO Python, Sybase, UNIX, Windows NT Python Developer/Support Pepsi Co - Somers, NY October 2010 to February 2011 CETS is a supply chain management system used by customer service, PEPSI vendors, PEPSI accounting. CETS keep track of all the PEPSI equipment inventory. It is used - take orders from clients for the Installation of the vending machines.  Responsibilities  • Wrote python programming - error check the data and import it into the Sybase database  • Created many batches using python/KSH for data retrieval and loading from other applications and databases  • Involved in python based database work using pyodbc/.  • Integrated Sybase stored procedures with Python - created interface jobs for move orders.  • Used Autosys version control tool for concurrent and simultaneous operations  • Scheduled Sybase stored procedures using Autosys  • Developed automated registration process using python/flask scripting  • Developed mail based distribution module using python  • Created server side Sybase Stored Procedures for implementing complex business logic  • Developed Reports using SQR.  • Tuned T-Sql queries for improve the performance.  • Involved in performance tuning of Sybase stored procedures for different modules of CETS (Open Orders, Paper Install etc.).  • Involved in performance tuning of CETS ARCHIVE stored procedures.  • Created Autosys jobs as per requirement, maintained the existing scripts and administrated the Autosys entries  • Created and maintained the stored procedures, tables and queries for the application using Sybase T-SQL.  • Created Stored Procedures, Indexes, Triggers, Views, Scripts and reports in Sybase SQL.  • Wrote stored procedures in TSQL under Sybase - facilitate database querying.  • Monitored concurrent jobs of Sybase SQL applications.  • Created UNIX Korn Shell batches for data download and upload  • Used UNIX shell scripting using hash tables and array index listing for fast retrieval  • Worked on bug fixing and supported the production applications.  • Provided support on Starteam version control.  • Managed and supported the outages during urgency.  • Ensured effective and timely resolution and communication - the user during the production support.  Environment: Rapid SQL, python, KSH, pyodbc/, Sybase, StarTeam, Nexaweb, Autosys, UNIX/AIX/LINUX, Oracle10g. Python Developer/Support JPMorgan Chase - Newark, DE April 2010 to October 2010 OPICS performs accounting and settlements of trading activity for a number of lines of businesses including PIM, PAG, CIO, Max Recovery, Tax Liens and Credit and Risk Management. OPICS is a third party vendor application integrated with JPMorgan mainframe. There are a number of lines of businesses that feed OPICS. The trades are either sent in flat files or directly inserted into OPICS interface tables. The P & L and settlement operation is performed internally by OPICS. All the P & L statements, Brokers statements, transaction reports and reconciliation reports generated by OPICS are stored in a database repository. These reports are retrieved by AXSpoint application.  Responsibilities  • Created python scripts for data migration  • Designed and developed many python modules  • Developed many python scripts for server side data processing  • Coded many python routines for data retrieval, migration and manipulating  • Wrote numerous python modules for background processing.  • Used Clearcase for check-in and check-out  • Used Clearcase - team synchronization  • Developed numerous scripts - test different functional aspects of Sybase Stored Procedures.  • Designed, developed and modified Python scripts using the package & modules  • Developed Sybase Stored Procedures - extract data from database and load it into the database  • Involved in performance turning for Sybase queries  • Developed Sybase Stored procedures for the back end processing of the proposed data base design  • Used Autosys for the batch scheduling in UNIX.  • Optimized the performance of queries with modification in Sybase SQL Queries.  • Developed Sybase stored procedures for OPICS ARCHIVE process.  • Automated console with scaling in ISQL.  • Used TSQL tables, Array Structures in Sybase.  • Designed and developed Sybase TSQL scripts for data import/export  • Involved in performance tuning of Sybase stored procedures and triggers - support the next generation of SWIFT messages,  • Integrated Python with Sybase stored procedures using modules like BDI/ - create downstream feeds for OPICS.  • Used advanced Sybase TSQL techniques like cursors for data retrieval.  • Used Sybase TSQL - filer and load the data from other production databases.  • Used Sybase TSQL scripts for dynamic procedures during package creation.  • Fixed many UNIX KSH scripts for issues related - batch uploading.  • Provided 24x7 supports for application deployment.  • Analyzed production issues - ensure system availability.  • Supported compliance - all regulatory and audit requirements.  Environment:Oracle, T-SQL, Sybase, python, KSH, Autosys, Corn Tab, flask, Python, HTML, XML, UNIX, Clearcase Unix Engineer Aegis Capital Corp - New York, NY January 2008 to March 2010 The mutual fund distribution system is a complete and efficient end - end solution for distribution organization. This system is mainly concerned about integrating trades for registrar and processing the transactions. The system also provides calculations like brokerage calculation process, P & L calculation, Internal rate of return (IRR) calculation etc. The user can see different types of reports like brokerage report, family report etc.  Responsibilities  • Involved in requirement analysis, database design, coding, testing, implementation and review  • Involved in creating data upload modules in python  • Worked extensively in python and HTML /Java Script for front end with flask  • Created python batches - monitor errors in data loading at particular frequency  • Wrote routines in python - update database from flat files and vice versa  • Created many python scripts and stored procedures - avoid job processing failures and use of stale data by systems  • Wrote Python and Shell scripts - automate the verification of the information inserted in the database via the web application  • Used pyodbc/ connectivity from Python - Sybase  • Studied the existing python modules and wrote functional specification for migration team  • Wrote all Sybase and UNIX scripts used in loading of legacy data  • Handled scheduling of Korn Shell scripts that loaded data from flat files - Sybase  • Worked in data handling using UNIX scripts using KSH, BCP Used *TSQL* tables, array structures as a part of Sybase collections.  • Maintained multiple levels of support for all systems batch processing  • Provided support for job scheduling, file transfers, and transactional processes  • Involved with production and quality assurance environment support  Environment: python, flask, KSH, BCP, HTML, JavaScript, Sybase, UNIX, Oracle, Windows NT Application Developer Prudential Financial Inc - Newark, NJ February 2006 to December 2007 Fund administration system provides a front - back solution of hedge fund administration and accounting services. The application supports Calculation of the Net Asset Value including the calculation of the funds income and expense accruals. It also does the preparation of semi-annual and annual accounts.  Responsibilities  • Gathered requirements from the client for front end design and developed software requirements specification  • Created Receipts module using Sybase Stored procedures and triggers.  • Implemented Payment generation module using Sybase and Python.  • Created many Sybase Stored procedures - implement the business logic for back end support.  • Developed python scripts - implement the designed functional components like different kind of searches  • Worked in Python extensively for data extraction  • Scripted in Python and KSH deployment scripts  • Designed and implemented a Python script that would open a series of access databases  • Maintained the python application and supported with bug fixing and trouble shooting  • Creation of many database packages, functions and procedures in Sybase  • Creating backend modules for order processing using python and UNIX Korn Shell Scripts  • Created many batch scripts using python and UNIX scripting using Korn Shell and scheduled in Cron Tab  • Coded and deployed application in test and production environments  • Deployed changes in packages and code into production environment  • Coordinated with operations team during load testing and deployment of code in staging and production environments  Environment:Cron Tab, python, flask, HTML, JavaScript, BCP, UNIX, Sybase, pyodbc/ Decision Maker Tech Mahindra Limited - Pune, Maharashtra November 2004 to January 2006 Application Developer  • The decision maker application developed - maintain the employee work effort data and employee time sheet. It extensively used by HR and employees. Employee can fill up the time sheet and apply for vacation using the application  Responsibilities  • Involved in user requirement analysis, design, coding, testing and review.  • Did code walk-through with team lead/end users on regular basis.  • Involved in designing, altering and updating of database.  • Involved in Python based database work using pyodbc/.  • Created many Python scripts for data format/validation checking.  • Designed and developed many Python modules.  • Created Python batches - monitor errors in data loading at particular frequency.  • Created HTML forms and used Python as flask scripting language for online querying and reporting.  • Involved in creating data upload modules in Python.  • Designed and developed Python scripts for sending application based mails.  • Wrote synchronization code using Python and using Python and UNIX shell scripts.  • Wrote routines in Python - update database from flat files and vice versa.  • Wrote programs in C & Python for parsing trading data and moving it into Sybase.  • Used Python, C, Sybase, TCP/IP and UNIX Shell programming for system monitoring.  • Developed and enforce a Sybase SQL coding standard for all packages, procedures, functions and triggers  • Maintained *Sybase* database schema, scripts and analyzed complex data  • Coded and tuned Sybase procedures and SQL throughout the development wherever needed.  • Developed and deployed new search indexes into production.  • Automated reporting procedures used Python, Excel OLE objects, HTML, JavaScript and UNIX Shell scripts.  • Wrote Python & UNIX shell scripts - automate the SQL Batches.  • Developed many KSH and Autosys based deployment and monitoring scripts.  • Created many database functions and procedures.  • Developed many flask reports using HTML, JavaScript and XML.  • Created database triggers and data validations.  • Implemented Sybase advanced queuing techniques - interact with trading files.  • Used BCP for data uploading from flat files.  • Wrote Python routines - extract data from Sybase tables and - create flat data files.  • Used Sybase Stored procedures - implement the complex business logic.  • Created user documentation for the application developed.  • Coordinated with the testing team in preparing test plans and test cases.  • Provided hands-on training for the end users on appropriate screens.  Environment: Python, Sybase, T-SQL, flask, HTML, XML, JavaScript, KSH, Autosys, Sun Solaris. Service Operation Manager (SOM) Datamatics Ltd - Mumbai, Maharashtra January 2003 to October 2004 Junior unix engineer  • Service operation manager is integrated with the network management system like HPopenview, MOM and Remedy. It keeps track of all the devices in the organization. It is extensively used by system administrators.  Responsibilities  • Maintained and enhanced report-generating facilities for daily, weekly and monthly custom fixed income index reports for internal and external clients  • Created logical and physical database structure.  • Created many Python/flask reports.  • Created Python interface scripts for data conversion.  • Wrote Python script - manipulate text file as per end-user requirement.  • Worked in numerous automated back-end processes written using Python.  • Developed Python scripts - implement the designed functional components like different kind of searches.  • Wrote Python scripts - grasp financial data feed from website using pyodbc module - load into database.  • Wrote Python scripts - convert - test the UI pages and - review them on web server.  • Maintained Erwin/Sybase schema.  • Developed real-time Bond Index calculator for fixed-income trading.  • Developed, maintained shot and long-term fixed-income swap tracking modules.  • Generated stored procedure skeletons from Erwin/Sybase schema input.  • Performed data and domain entity conversion.  • Create multiple database objects.  • Maintained and developed monitoring scripts and loading data files into database using Python, Korn shell, and Sybase.  • Utilized data loaders and migration utilities in Python.  • Wrote stored procedures in Sybase.  • Developed many report pages using flask, HTML, XML and JavaScript for fixed income index reports.  • Provided support and developed scripts using UNIX Shell and Sybase.  Environment: Python, Sybase, flask, HTML, XML, JavaScript, KSH, Autosys, Sun Solaris Education Bachelor of Engineering in Information technology Government College of Engineering Aurangabad India - Aurangabad, Maharashtra 2001 Additional Information Technical Skills:  Programming Language python, Sybase, Oracle, ORACLE,C/C++.  RDBMS Sybase, Oracle, Oracle,ORACLE,SqlServer  Operating System UNIX, SUN Solaris, Linux, HPUX, Windows  Modeling tools TOAD, Erwin, DBArtisan, Rapid Sql  Reporting Tools SQR reports, AXSPoint Reports  Tools AXSpoint,Clearcase,Starteam,CVS  Job Scheduler Autosys, Crontab,  Web Servers Apache