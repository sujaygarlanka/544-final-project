Research Assistant Research Assistant MS in Computer Science | University of Florida | Seeking full-time Software Developer position San Jose, CA MS in Computer Science | University of Florida | Seeking full-time Software Developer position Authorized to work in the US for any employer Work Experience Research Assistant University of Florida April 2014 to July 2014 Developed Interactive Graph Analyzer for large protein chains using javascript. With PHP on the server side to manage user accounts and store graphs as JSON objects, the complete rendering and interaction is performed on the client side, in-browser, to achieve scalability of the number of requests handled by the server. Implemented faster graph centrality and clustering algorithms to help UF geneticists study the protein structures. (Current Alexa Rank = 1071). Used REST to transfer graph objects. Adopted Agile XP methodology. Used Jasmine.js for unit testing. http://bioverto.org Database Administrator Mphasis Limited, Hewlett Packard December 2010 to July 2013 System Environment: Oracle database 11g/10g/9i, Oracle RAC 10g, EM Grid Control RMan, UNIX (Solaris, HP-AIX, Linux)  Distributed environment with several clusters of hosts and persistent cloud storage.    Responsibilities:  • Perform database monitoring and tuning to ensure databases run at peak performance; troubleshooting and resolving performance issues. Time-sensitive work environment with stringent SLAs.  • Install, configure, upgrade and patch Oracle Database products.  • Ensure high availability, co-ordinate with System Admin and Network Admin teams during changes, migrations and upgrades.  • Automate backups, various reports and other administrative jobs using shell scripts. Education Master of Science in Computer Science University of Florida Bachelor of Engineering in Electronics University of Pune Skills Programming Languages: Java (proficient), C++ (proficient), C#, Scala, C, Lisp, Python |.|.|.|.| Web Development: PHP, Javascript, Bootstrap, REST-Scala integration using Spray |.|.|.|.| Database Technologies: Apache Cassandra, Redis, Oracle 11g (Oracle Certified DBA), PL/SQL |.|.|.|.| Tools: Maven, sbt, Selenium, Git and Github, Manual and Automated System Integration Testing |.|.|.|.| Miscellaneous: GPGPU programming using Cuda, OpenGL, Hadoop, Apache Zookeeper, JUnit, JasmineJS, Amazon Web Services Links http://cise.ufl.edu/~tejas/ https://www.linkedin.com/in/tejasbondre https://github.com/TejasBondre Certifications/Licenses Oracle Certified Java Programmer Present Oracle Certified Database Administrator Present Additional Information Custom MapReduce framework in Java using Cassandra and ZooKeeper: A scalable and fault-tolerant framework that implements Google’s MapReduce techniques on a cluster of servers. Used Apache Cassandra as the database and Apache ZooKeeper as the manager of the distributed system, as the lock server, as a Total Ordered concurrent distributed queue, as barrier for synchronization, as notification dispatcher, and as Configuration Manager using heartbeats for fault-detection. Achieved performance comparable to that of Hadoop.    Distributed Market with Apache ZooKeeper: A distributed application that processes concurrent requests to maintain a consistent state, powered by ZooKeeper's watches, message queues, barriers and total-order guarantees.     Twitter RESTful WebServer with Scala, Akka and Spray: Simulating Twitter server using Spray framework to handle thousands of REST requests per second, powered by Akka actors on Scala.    Bitcoin Mining: Bitcoin mining application using Akka's powerful actors and Scala's high-speed integration. Highly scalable.    Parallel Particle System with CUDA: Simulated emergence of swarm behavior using C++ with the help of GPU processing in Nvidia’s CUDA to compute the trajectories of 10 million particles, each interacting with every other, in real time. Used octrees data structures to achieve 1000 times faster 3D rendering.    Pastry Distributed HashTables: Simulation of distributed hash table to locate a resource or a target in peer to peer overlay networks based on Microsoft’s Pastry paper. Used Akka actor model with Scala for simulation.    Gossip Protocol in Distributed Systems: Determined rate of information propagation and degree of convergence in distributed systems. Tested on various possible topologies of distribution. Used Akka actor model with Scala for implementation.    Functional Graph Puzzle Solver: Programmed a generic game solver for the Japanese Slitherlink puzzles (an NP-complete graph problem) using Lisp with a completely functional approach to search solution in the finite state machine.