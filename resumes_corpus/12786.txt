Full Stack Developer Full Stack <span class="hl">Developer</span> Full Stack Developer - Charter Communication Maryland Heights, MO • Over 8 years of IT experience in Analysis, Design, Development, and implementation of software applications using Java/J2EE technologies.  • Experienced in developing front end applications using HTML, HTML5, XML, XHTML, DHTML, CSS, CSS3, Bootstrap, SAAS, JavaScript, DOM, jQuery, Ajax, JSON, and JSP.  • Experience on working with CSS Backgrounds, CSS Layouts, CSS Positioning, CSS Animations, CSS Text, CSS Borders, CSS Padding, CSS Table, Pseudo Classes, and Pseudo Elements.  • Strong experience in XML related technologies including XSD, DTD, XSLT, XPATH, DOM, SAX, JAXP, JAXB, XML-RPC and XML Beans.  • Strong Experience in JavaScript MVC design pattern such as Angular JS, Backbone JS and Ember JS, Knockout.js.  • Designed and Developed MVVM design pattern Various Angular 2.0/4.0 Components (ngModules), Services (observable/promises), Directive and Pipes.  • Proficient with Typescript ES6 new features block scope, type restrictions, decorators, arrow functions, classes, interfaces, modules (import and exports).  • Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application.  • Expertise in building server-side java script framework using Node (Express JS & HapiJS).  • Good Experience in using of Java Script build tools and task runners like Web pack for React and Angular 2.0/4.0, Grunt, Gulp for Angular 1.0, Browserify for packaging Node JS modules for browsers.  • Strong knowledge on JavaScript Unit testing with Jasmin, Karma, Protractor for Angular Mocha and Chai for react.  • Strong expertise in Object oriented concepts such as collections, Generics, file operations, multithreading, concurrent collection framework and core java concept.  • Experience in java8 features like Parallel Streams, Lambdas, functional interfaces, and filters.  • Extensive experience in developing scalable, reliable, and efficient java/j2ee enterprise applications using Spring, Struts, Servlets and JSF.  • Strong knowledge in implementing IOC and Dependency Injection features in various aspects of Spring Framework.  • Good knowledge on the Spring Modules like Spring IOC, Spring MVC, Spring DAO, Spring Batch, Spring Web Flow, Spring Security, Spring AOP and Spring Boot.  • Expertise in developing Microservices using spring boot and node is to build more physically separated modular applications which will improve scalability, availability and agility of application  • Good experience in creating sites that have Single Sign On using CAS and Spring Security.  • Developed Stub projects for WSDL and WADL using Apache CXF and implemented SOAP services using Axis-2 and Apache CXF.  • Extensive Knowledge of XML based standards and implementation of SOAP and REST web services using JAX-RS, JAX-WS and Jersey.  • Excellent experience with Relational databases like MySQL, Oracle, SQL Server, DB2 and No SQL databases like Mongo DB and Cassandra.  • Experience in writing complex SQL Queries, Stored Procedures, Triggers, Cursors, and Functions.  • Extensive experience in Deploying and Configuring Application & Web Servers such as Oracle WebLogic, IBM WebSphere, JBoss, Glassfish and Apache Tomcat.  • Solid Experience with Java based ORM frameworks such as Hibernate, JPA, Spring Data and IBATIS and worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver.  • Experienced in developing web-applications using various design patterns, including session facade, MVC, Data Access Object, Singleton and Factory Pattern.  • Good Experience on (JMS) MQ's like Apache Kafka, Rabbit MQ, IBM MQ and Active MQ for communicate between sender and listener.  • Hands on experience with build tools like ANT, Maven, Graddle.  • Expertise in testing with JUnit using tools like JMeter, Mockito, Easy Mock.  • Worked on Web Services testing using Selenium IDE, and Selenium RC Server, Selenium Grid/Web Driver Testing.  • Good knowledge on Drools Rule Engines which corresponds to validating BRMS (Business Rules Management System).  • Experience using json web tokens(jwt) to securely communicate between two json objects.  • In depth and extensive knowledge of Splunk architecture and various components. Expert in Splunk Development, Configuration and Administration and used Kibana to view and measure application events using Elastic search.  • Knowledge on implementing Spring Cloud- Netflix OSS Stack and Hystix Circuit Breaker.  • Worked with spring cloud config, Ribbon, Hystrix and Zuul API-Gateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic, resource nusage and implemented security functionality OAuth 2.0, Spring security, SSL and site minder(SSO).  • Hands on experience in implementation of PCF (Pivotal Cloud Foundry) Paas (Platform as a Service) services such as Pivotal Application Service, Pivotal Container Service, and Pivotal Functional Service to continuously deliver applications on to the cloud.  • Good knowledge in using Amazon Web Services (Amazon EC2, Amazon Simple DB, Amazon RDS, Amazon Elastic Load Balancing, Amazon SQS, and AWS Identity).  • Knowledge on kubernates to deploy on container applications.  • Experience in Build and deployment automation through tools like Jenkins, Bamboo for CD/CI.  • Knowledge on various Docker components like Docker Engine, Hub, Machine, Compose and Docker Registry. Work Experience Full Stack Developer Charter Communication - Maryland Heights, MO January 2017 to Present Description: John Deere is an American corporation that manufactures agricultural, construction, and forestry machinery, diesel engines, drive trains used in heavy equipment, and lawn care equipment. My Role is to build, develop and test the portal for Equipment Financing, which acts as Self servicing tool for the customers.    Responsibilities:  • Involved in designing and developing the web application by using HTML5, CSS3 SAAS and React.js.  • Worked with React.js Virtual DOM and React views, rendering using components.  • Constructed a responsive and cross-browser compatible client-side UI using React.js.  • Used React-Router to handle page routing and turn the application into Single Page Application.  • Implemented concept of Presentational Components and Container Components.  • Built forms with react-form library and checked validity with react-validation library and used Babel plugin tool for conversion of ECMA versions to support all type of browsers  • Integrated Redux data store allowing React components to have access to data resulting in highly maintainable code.  • Used Node Package Manager (NPM) to manage packages and libraries.  • Responsible for React UI architecture. Building components library, including Tree, Slide-View, and Table Grid.  • Used Angular 4 Reactive forms to implement complex forms and performed the validations using Form Builder.  • Created Single Page Application with the help of Angular4 Router Module and used template routing for bread crumb.  • Developed the Angular components using Typescript and ES6 Helpful operators.  • Injected Angular4 built-in http service to custom services to communicate with backend with RESTful APIs and Used Pipes to format and sort data displayed in the templates.  • Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching.  • Developed RESTful service interface using Spring Boot to the underlying Agent Services API and Implemented RESTful web services  • Created and managed microservices using Spring Boot. Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features.  • Developed Rest services by implementing JAX RS using jersey framework.  • Extensively worked on Spring REST for creating REST API's services with Spring Boot to modularize code and used Spring Data to access data from MYSQL.  • Used spring Boot properties like actuators and health checkers to enhance micro service implementations.  • Used spring transaction manager to support declarative transaction management.  • Using Swagger Framework, implementing the Restful API and Swagger gives the rich UI to test API.  • Developed REST API services using Node.JS, Express.JS, Body-Parse and other node modules to serve the web application with JSON data.  • Developed Node.JS Readable and Writable streams to process the data from the external source of the application.  • Designed and developed queries using SQL and named queries, criterion API's and create one-to- one and one-to many relationships using Hibernate and created hibernate mapping files.  • Installed, configured, and administration of NoSQL database clusters in AWS Virtual Private Cloud Network. Created architecture stack for data access with NoSQL data base Cassandra.  • Used a highly durable messaging system called Apache Kafka for asynchronous exchange of vital information between multiple business applications.  • Performs UNIT testing with Junit and for JavaScript framework using Mocha and chai.  • Used java script build tools to bundle the application through web pack.  • Installed the application on AWS EC2 instances and configured the storage on S3 buckets.  • Created AWS Lambda functions for AWS config rules using Node.js and Heavily Used Lambda function on text object methods, Context object properties using Node.js.  • Worked with Jenkins Continuous Integration and Continuous Deployment (CI/CD).  • Virtualized the servers on AWS using the Docker, created the Docker files and version control, built various containers using Docker engine and Docker Machine environments, to deploy the microservices oriented environments for scalable applications.  • Creating, managing, and performing container-based deployments using Docker images containing Middleware and applications together.  • Design and Built Generic Playbooks to remotely configure the micro-services on kubernates and Used Kubernetes as the monitoring tool for health check of the servers.  • Extensively used GIT for version controlling and regularly pushed the code to GitHub.    Environment: HTML5, CSS3, SAAS, JSON, AJAX, Bootstrap, React JS, Angular 4.0, git, Spring Boot, Spring IOC, Node JS, Express JS, NPM, Grunt, Babel, ckan, dkan, Web pack, Docker, AWS, Docker, Apache Kafka, RESTful, JAX-RS, Swagger, GIT, Jenkins, MySQL, NoSQL, Cassandra DB, Mocha, Chai. Sr. software developer Nas Insurance - Atlanta, GA July 2015 to December 2016 Description: Nas Insurance is a uniquely innovative insurance solution to address emerging risks and fill gaps in standard coverage which is in Atlanta, Georgia. I was involved in developing pages that helps customers retrieve online quotes depending on cover variances. Also worked on login field validations that help customers who are already members to retrieve their online account.    Responsibilities:  • Involved in various phases of Software Development Life Cycle (SDLC) as requirement gathering, analysis, design documentation, development, test cases, implementing and production support of the application.  • Involved in designing and developing the application using Angular 2, Bootstrap, HTML5, and CSS3.  • Implemented Routing, Imperative Routing and guards with the help of Angular2.0 route module.  • Created Typescript reusable components and services to consume REST API's using Component-based architecture provided by Angular 2.  • Good knowledge on creating services with Angular 2 @injectable property, as to make the service available for dependency injection when creating components.  • Designed dynamic client-side JavaScript codes to build web forms and simulate process for a web application, page navigation using Angular 2.  • Worked with React JS to build Bootstrap components for responsive UI Objects and linked with API data to view render the virtual DOM dynamically.  • Implemented Redux Store and React State for server-side rendering and refactoring Reducer logic using functional decomposition and Reducer Composition.  • Elegantly used React-Router techniques Axios service to retrieve data from server synchronously in the background without interfering with the display and existing page in an interactive way.  • Used Node.JS for processing the incoming data in each level and generate a document and save it to MongoDB.  • Worked with NPM commands and using Package.json for managing dependencies and dev-dependencies of Node.js applications.  • Created and consumed RESTful API using Hapi.js to provide centralized logic and reusable data retrieval build on top of Node.js.  • Developed responsive applications using Bootstrap.js, Require.js and Node.js, D3.js which allowed the same application to be optimized for both mobile and desktop resolutions.  • Developed a dashboard based on Ajax calls with Business Customers Count, Flags, Real-time graphs for Analytical Reporting using Node js.  • Used Express JS which is fast, assertive, essential and moderate web framework of Node.js that helps manage a sever and routes.  • Used popular Node.js frameworks like Express and Restify to create a Restful Mock API.  • Developed Mean Stack from scratch including Mongo DB server (Mongoose Connector) setup and Express JS server development.  • Designed and developed RESTFUL web services using Spring Boot and Jersey framework.  • Implemented JWT (JSON Web Tokens) for creating tokens to assert claims in the application and thus providing authentication of RESTful services.  • Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration.  • Extensively Implemented Spring boot, dependency Injection (DI) and aspect-oriented programming (AOP) features.  • Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest API's using Spring Rest.  • Implemented Spring Security OAuth 2.0 and OIDC Token mechanism for authentication and authorizing for websites logins using Spring Social Module.  • Implemented Single Sign On and policy-based authentication using Site Minder security framework.  • Performs UNIT testing with Jasmine and Karma.  • Used Log4j to print logging, debugging, warning and info on server console. Debugged the MAVEN scripts for building entire web application.  • Implemented Cucumber for behavioral testing of application  • Used build tools to bundle the application through Grunt and Gulp.  • Responsible for building Next generation architecture platform development built on top of Netflix OSS, Spring Cloud, and Pivotal Cloud Foundry (PCF). This framework is responsible to provide a security gateway, authentication, authorization of api's, session management in a distributed system, multi factor authentication, content management, service discovery, log aggregation & config repository  • Implemented Spring Cloud-Netflix OSS Stack along with using Ribbon for client-side load balancing, Netflix Zuul Api Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance.  • Installed Pivotal Cloud Foundry (PCF) on EC2 to manage the containers created by Pivotal Cloud Foundry PCF.  • Implemented micro services in Pivotal Cloud Foundry (PCF) and move development application from Docker containers & deploy into production Cloud Foundry environment.  • Implemented Spring Cloud- Netflix ZUUL for building microservices to communicate with each other.  Environment: HTML5, XML, CSS3, LESS, JSON, JavaScript, Angular JS, Bootstrap, Maven, Spring Boot, Hibernate, MySQL, Eclipse, RESTful, AJAX, JSON, Node JS, Express JS, AWS, Restful API, JAX-RS, Gulp, NPM, Apache Kafka, GitHub, NoSQL, MongoDB, Jasmine, karma, Selenium, Pivotal cloud Docker, Spring cloud. Sr. Java Developer Arvest Bank - Bentonville, AR April 2014 to June 2015 Description: Arvest Bank is an American multinational banking and financial services holding company which is headquartered in Lowell, AR. Arvest Bank is the largest bank in deposit, home mortgage servicing and debit cards. My Role is to build, develop and test the portal for Equipment Financing, which acts as Self servicing tool for the customers.    Responsibilities:  • Developed customer facing software for managing advertisements to grow the business using Backbone.js, JavaScript/jQuery, HTML, CSS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries.  • Enhanced user experience by designing new web features using MVC Framework like Backbone.js.  • Used Backbone.StickIt to relieve the burden of model-view synchronization in Backbone JS.  • Used jQuery to make the frontend components interact with the JavaScript functions to add dynamism to the web pages at the client side.  • Extensively used JQUERY, JSON, AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations.  • Spring MVC Framework IOC (Inversion of Control) design pattern is used to have relationships between application components.  • Invoked view components by configuring Dispatcher Servlet and View Resolver to handle incoming requests and manage the Spring MVC flow.  • Implemented Cross cutting concerns like logging and declarative transaction management using Spring AOP.  • To achieve modularity and to handle cross cutting concerns like transaction management, logging and profiling Spring AOP is used.  • Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers.  • Developed Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database, with partitions and sub-partitions.  • Implemented Quartz scheduler to execute batch programming using Spring Batch.  • Exposed Stateless session beans as RESTful web services using JAX-RS.  • Used JAX-RS (REST) for producing web services and involved in writing clients to consume the web services with Apache CXF framework.  • Developed Application to access JSON from Rest API web service from client side using JavaScript and Backbone JS.  • Worked on persistence layer using Hibernate with Oracle 10g Database.  • Build PL\SQL functions, stored procedures, views, and configured Oracle Database 10g with JDBC data source with connection pooling enabled.  • RabbitMQ is used for asynchronous messaging, decoupling applications by separating sending and receiving data over the applications.  • For testing we used JUNIT and for JavaScript unit testing Mocha and chai are the tools we used.  • Used Maven for building the application and used GIT for version control.  • Worked with Jenkins Continuous Integration and Continuous Deployment (CI/CD).  • Implemented Drools Business Logic Integration Platform which provides a unified and integrated platform for Rules, Workflow, and Event Processing.    Environment: HTML, CSS, JSON, JavaScript, jQuery, Backbone JS, Ember JS, Node JS, Bootstrap, Maven, iBATIS, Oracle, Spring MVC, Spring Batch, Spring AOP, Eclipse, RESTful, AJAX, Restful API, Gulp, NPM, bower, RabbitMQ, GitHub, NoSQL, Mongo DB, Junit, Mockito, Mocha, chai, Selenium. Sr. Java/J2EE Developer Humana Health Care - Louisville, KY September 2013 to March 2014 Description:  Humana Inc. is a for-profit American health insurance company based in Louisville, Kentucky. It markets and administers health insurance for about 11 million customers. I was involved in developing pages that helps customers retrieve online quotes depending on cover variances. Also worked on login field validations that help customers who are already members to retrieve their online account.  Responsibilities:  • Developed front end for the entire website using HTML, CSS, and JavaScript.  • Converted raw images and layouts from a graphic designer into CSS/HTML themes.  • Implemented client-side validations in registration forms, login and logout forms using Java Script.  • Extensively used JQUERY, JSON, AJAX and DOM scripting to create interactive web applications like message posting and autocomplete form validations.  • Used jQuery for interaction between JavaScript and HTML.  • Responsible for client-side validations and serve side validations in JSP.  • Involved in Enhancement of existing application utilizing JSP.  • Developed automated scripts in shell to ensure daily batch completion and Post batch activities, before releasing the report to the clients.  • All the validations are done by JSF components inbuilt validations and through JavaScript.  • Created views using components of Prime Faces in XHTML files and configured JSF framework.  • Used Prime Faces to analyze the missing features and quickly fix the bugs.  • Worked in all the modules of the application which involved front-end presentation logic developed using Tiles with Spring MVC, JSP, JSTL and java script, Business objects developed using POJOs and data access layer using Hibernate framework.  • Worked on Spring Quartz functionality for scheduling tasks such as generating monthly reports for customers and sending those mails about different policies.  • Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on.  • Protection against session fixation, clickjacking, cross site request forgery for application is implemented using Spring Security.  • Involved in integrating WebSphere Portal Server with WebSphere Process Server involving SOAP Web Services, WS-Security using Jax-WS.  • Involved in development of SOAP web services using Apache Axis 2 to extract data from databases and allowed communication between applications through SOAP Over HTTP using Apache Axis 2.  • Implemented persistence layer between the database and service layers with IBATIS ORM.  • Performed unit testing using JUNIT framework and tested Business Services.  • Experience in working with open source tools Selenium (Selenium IDE, Selenium RC, Selenium Web Driver) and preparation of automation test framework.  • Used Jenkins for continuous deployment and integration of the build and release process.  • Used Drools rules engine for defining business rules and Validations.  • Used ANT for automated build and deployment on IBM WebSphere.  • Used SVN version control to track and maintain the different version of the project.    Environment: HTML, DHTML, CSS, Bootstrap, JSON, JavaScript, jQuery, JSP, JSTL, Maven, JPA, ORACLE, SQL, PL/SQL, JSF, Spring Batch, Spring AOP, Linux, IBM WebSphere, SOAP, JAX-WS, Prime Faces, RabbitMQ, Junit, Jenkins, Selenium, SVN. Jr. Application Developer John Deere - Moline, IL August 2011 to August 2013 Description: Sales Automation is software to automate the business tasks of sales, including order processing, contact management, information sharing, inventory monitoring and control, order tracking, customer management, sales forecast analysis and employee performance evaluation.    Responsibilities:  • Part of planning sessions with team members to analyze requirements. Outlined, proposed and coded the proposed solutions.  • Worked on developing Use Cases, Class Diagrams, Sequence diagrams, and Data Models.  • Developed the web application using JSF framework with user interfaces using JSP, HTML, and CSS. Also used JSF validation framework for front-end validations  • used DOJo toolkit to construct Ajax requests and build dynamic webpages using JSP, DHTML and java scripts.  • Implemented Multithreading for handling multiple requests and for high performance.  • Development of Action Forms, Action Servlets, Action, and Validating Action Forms in Struts framework.  • Configuring Action Mappings in Struts-config.xml. Extensively involved in the development of Web Services interface to workflow system to facilitate setting up of customer' s modem.  • Client-server validations were handled using Struts Validator Framework's validate plug-in.  • Developed the bean, the business method interfaces and the DAO for the workflow Web  Services framework.  • Developed applications, which access the database with JDBC to execute queries, prepared statements, and procedures.  • Developed programs to manipulate the data and perform CRUD operations on request to the database.  • Developed SOAP web services (JAX-WS) for sending and getting data from different applications WSDL generation and exposed the service at server-side over the Internet and tested the services using JUnit.  • Involved in writing PL/SQL Stored Procedures, Functions, Triggers and Views for SQL database and Developed back end interfaces using PL/SQL packages, stored procedures, functions procedures, anonymous PL/SQL programs, Cursor management, Exception Handling in PL/SQL programs.  • Used JUNIT for unit level testing.  • Used Log4J for logging the user events.  Environment: Java, J2EE, AJAX, Struts, SOAP, pl/sql, multithreading, jsf, HTML, XML, JSP, JDBC, ANT, XML, Tomcat, JUNIT, DB2, Eclipse, GIT, Log4J, WebLogic, Dojo. Java Developer SKF Bearings - Bengaluru, Karnataka May 2010 to July 2011 Description: OPEN SESAME is a web based collaborative e-business platform connecting to all constituents of sales and distribution chain management systems with a modular  architecture. OPEN SESAME automates large businesses comprising of finished goods.  Responsibilities:  • Performed analysis for the client requirements based on the developed detailed design documents.  • Involved in developing the business components and responsible for developing the user interfaces using JSPs.  • Primarily focused on the spring components such as action Servlets, actions, Model and View Objects, View Resolver.  • Created several JSP pages as common library that included in the other pages as standard modules like Portlets.  • Developed JSP with Struts custom tags and implemented JavaScript validation of data.  • Used JavaScript for the web page validation and Struts Validator for server-side validation.  • Used EJB 3.0 Session beans using JBOSS Seam Context Management (Application, Conversation, Session scopes) and implemented Business processes such as user authentication, Transfer of Service using Session EJBs.  • Wrote the high performance multi-threaded Java code using singleton, mediator, visitor, facade, observer, template, factory and publish and subscribe design pattern.  • Used various Core Java concepts such as Exception Handling, Collection APIs to implement various features and enhancements.  • Coded JDBC calls in the Servlets to access the SQL Server database tables.  • Used SQL and PL/SQL queries to perform database operations on Web Sphere.  • Created stored procedures and database scripts to populate database tables.  • Experience deploying code on Web Sphere server.  • Extensively used XML to code configuration files.  • Used ANT to build, run and create JARs and WAR files among other uses.  • Developed test cases by using TestNG for unit testing for each module developed in test driven development.  • Used Log4j to provide central logging facility and worked on SVN as version control system, on day-to- day basis to maintain the code history.  • Followed Waterfall methodology for development process.  Environment: J2EE (JSP, Servlets), EJB, JDBC, DB2, PL/SQL, WebSphere, IBM MQ, SOAP, UML, HTML, CSS, JavaScript, CVS and Linux's, Log4j. Education Bachelor of Technology in Electronics &communication Engineering Gitam University Skills TESTING (8 years), AJAX (6 years), JAX (6 years), WEB SERVICES (6 years), JAVA (6 years), Javascript, PHP, Node, React, Angular, NET, AWS, Python, C#, Angularjs Additional Information TECHNICAL SKILLS    LANGUAGE JAVA, J2EE (SERVLETS, JSP, JDBC, JAVA BEANS, JSF, JNDI, EJB).  WEB TECHNOLOGIES HTML/DHTML, XHTML, CSS, XML, XSD, WSDL, DTD, DOM/SAX, J2EE DESIGN PATTERN  FRAMEWORKS STRUTS, SPRING, HIBERNATE, iBATIS, JSF.  IDE'S ECLIPSE, NET BEANS, BEA WEB LOGIC WORKSHOP, IBM RAD.  WEB SERVICES JAX-WS, SOAP, WSDL, APACHE AXIS, IBM MQ.  WEBSERVICE TOOLS TCP MONITOR, SOAP UI, HTTP MONITOR, SECURE CRT.  APPLICATION SERVERS BEA WEBLOGIC, IBM WAS, JBOSS, APACHE TOMCAT.  DATABASES MYSQL, ORACLE, SQL SERVER, NOSQL (mongo, Cassandra)  SCRIPTING LANGUAGE JAVASCRIPT, AJAX, Shell Script.  TOOLS  BUILD (ANT, MAVEN, MAVEN2), LOGGING(LOG4J), VERSION CONTROL  (CVS, SVN, CLEAR CASE, SURROUND),  TESTING (JIIRA, JUNIT, JMETER, JQUERY, CLEAR QUEST),  MONITORING (SPLUNK, GOMEZ), TRAFFIC ROUTING (Big F5)    OPERATING SYSTEMS WINDOWS 2000, WINDOWS XP, WINDOWS VISTA, WINDOWS 7, UNIX, LINUX, AIX.