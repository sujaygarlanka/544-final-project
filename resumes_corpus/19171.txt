Python, C/C++ developer <span class="hl">Python</span>, C/C++ <span class="hl">developer</span> Python, C/C++ developer US • Experience with virtual machine languages like Golang, Java and C# over UNIX LIKE environments (Darwin, FreeBSD, Solaris and Linux).  • Working with scripting languages like python, and Perl over UNIX LIKE environments (FreeBSD and Linux).  • Design and programing of web back end with Java application servers and any technology working upon POSIX operative systems.  • Good web front-end development experience in several template engines and JavaScript libraries to deal with asynchronous data events and Json restful.  • C/C++ programmer mostly over UNIX LIKE environments (Darwin, FreeBSD, Solaris and Linux).  • Experience upon Object Relational Mapping engines, object factories and many design patterns with compiled, interpreted and virtual machine languages.  • Experience working with open and proprietary tickets platforms.  • Good experience designing distributed APIs at SOA and TCP/IP Client-Server (Multi thread and forking process approach).  • Experience with Continuous integration and unit testing.  • Experience with relational databases and their store procedure languages in order to guaranty atomic transactions and reduce interprocess communication.  • Experience with NOSQL databases that abide with approach map - reduce.  • AIX, Solaris, BSD and Linux system administration/firewall and provisioning tools.  • Experience in kernel/user mode tool's creation over pre-silicon environments. Work Experience Python, C/C++ developer Zapopan, Jalisco, Mexico - Zapopan, Jalisco, MX January 2013 to 2018 Project Description:  The Yocto Project is an open source collaboration project that provides templates, tools and methods to help you create custom Linux-based systems for embedded products regardless of the hardware architecture. It was founded in 2010 as a collaboration among many hardware manufacturers, open-source operating systems vendors, and electronics companies to bring some order to the chaos of embedded Linux development.    Roles and Responsibilities:  • Fix and adapt several open source components created with C/C++ and python3/2 to abide with yocto project needs.  • Automation of manual execution operation by using IOT devices and virtual machine clusters and provisioning tools to simulate user interaction with real hardware.  • Global python3 maintainer.  • Creation of web interfaces to monitor and control remote hardware.  • Diagnose lack of performance and undefined behavior of several software components within the overall of yocto project by using tracing tools like strace and dtrace.  • Additionally working over pre-silicon environments to simulate and emulate pieces of graphic hardware with C/C++.    Environment  Experimental hardware, Yocto project. GDB, G++, GIT.    Client: Hypercom (Equinox - http://www.equinoxpayments.com/products/apollo/)  Project: Apollo CFD Platform developer C/C++ Level V January 2012 to January 2013 Location: Monterrey. Nuevo Leon, Mexico.    Project Description:  Apollo CFD is a cost-effective, robust and feature-rich consumer facing countertop payment device designed for small and medium-sized merchants. Apollo CFD is EMV/Smart Card, Contactless and NFC capable with advanced technology to handle all payment types. With its intuitive user interface, an array of connectivity options and a brilliant full-color touchscreen display, Apollo CFD represents a new benchmark for enhancing the payment experience at the point-of-sale.    Tasks & Responsibilities  • Design and development of serial legacy protocol to communicate legacy payment terminals and the new ones. Additionally we have created an application to simulate legacy payment terminals.  • Creation of user mode driver to control and boost card reader features.  • Creation of a kernel driver as interprocess communication among services and devices.  • Creation of user interfaces with QT  • Attending scrum meetings.  • Bug fixing of legacy User land applications (using gdb and its scripting language)    Environment  Experimental hardware, Linux kernel ARM processor. VI, Eclipse, GDB, G++, GIT Solution Architect and Technical leader Agnux January 2009 to January 2012 Location: Monterrey. Nuevo Leon, Mexico.    Project Description:  Agnux Erp is a product that satisfies the most common needs of a supply chain of small and medium companies.    Tasks & Responsibilities  • Solaris/FreeBSD/Linux System Administration and Support for customer physical and cloud virtual servers within high availability environments where Agnux solutions were deployed, it also included configuration and tailoring of other several required entities like FTP, SVN, GIT, LDAP , SMTP , IMAP , POP, DNS servers, SNMP interfaces, backup daemons and utilities, load balance utilities , monitoring stuff, VPN tunneling, HTTP and SOCK proxies, SSL CA and keys.  • Development of erp's satellite applications with python2, C++, perl, php.  • Development of user mode drivers to interact with several devices over automation pipe lines  • Mentorship to developers about J2EE and C/C++ Design patterns and structured approaches.  • ROLAP ETL, Cube Building and design with Pentaho Business Intelligence Suite (Community edition).  • Multiple Web POS and Warehouse project for franchise Restaurant Taqueria Juarez.  • Developer for AS400 electronic billing (CFD ver 2.0) of Transportes quitanilla and Transportes Roquin.    Environment  Many java application servers (Glassfish, Bea, Tomcat, Jboss), jscript, jquery, and any possible technology to be worked as common gateway interface (cgi), several dbms with store procedures, Frameworks to integrate third party libraries that abides with predetermined interfaces like spring framework, data structures and algorithms. PLSQL, PGLSQL. Unique developer Kernel technologies January 2008 to January 2009 Location: Monterrey. Nuevo Leon, Mexico.    Project Description:  Several PBX were bought by Axtel Santa catarina. Such devices could be control through serial interfaces of UNIX AIX hosts. Manufacturer has provided specifications that We land over a user mode driver and a java web front end.    Tasks & Responsibilities  • Create a user mode library with C to controI PBX actions with a Java web front end.  • Play role of sysadmin of PBX/AIX farm.  • Writing a PBX mock.    Environment  UNIX AIX, Gcc, Openssl, Java 1.6, javascript and Tomcat. Technical Lead Telefonica/Movistar Mexico - Spain I+D January 2006 to January 2008 Innovation and Development div 623)  Duration: 01/2006 - 01/2008  Project: Telephony portability  Title: Technical Lead  Location: Mexico DF    Project Description:  Creation, design and porting of its applications (from Solaris 10 to Linux Redhat 7 and 8).    Roles and Responsibilities:  • Management, configuration and startup of Virtual Environments using the paravirtualizer xen and vmware esx.  • Management, configuration and startup of Oracle 9, Mysql Clusters, NFS servers/clients, NTP servers/clients, Linux firewalls running iptables.  • Development of Store procedures by using PL SQL for ORACLE.  • Development of Korn shell scripts to process and communicate data to other platforms about telephone portability and data warehouse (Basically a primitive manner to perform ETL tasks).  • Deploy and development of monolith applications over Bea web logic and Tomcat.  • Development, extension and support of Perl CGI Web applications.  • Development of SMS protocol open source library to replace proprietary library utilized upon center of messages.  • Development of C and Python applications like middle-ware between Telefonica enterprise platforms and customer platforms.  • Support 7x24 for Enterprise SMS Systems MEX-LATAM running on RedHat Linux and SunOS.    Environment:  OS: Redhat 7 and Solaris 10. CVS, SVN, Java 1.5, javascript, applications server bea, tomcat, jboss. Education Bachelor Degree in Computer Science Universidad Valle del Bravo Skills JAVA (6 years), BILLING (3 years), ELECTRONIC BILLING (3 years), EMPLOYEE RESOURCE GROUP (3 years), ENTERPRISE RESOURCE PLANNING (3 years) Links https://github.com/pianodaemon/fact2018/tree/master/alan-jcli https://github.com/pianodaemon/fact2018/tree/master/cfdiengine/bbgum Additional Information TECHNICAL SKILLS SUMMARY    • Programming Languages: Almost any language functional, object oriented and structured with/out memory management (garbage collectors, reference counting or memory allocation by programmer)  • Operating Systems: The overall Unix like and Windows    PROJECTS    Client: Agnux  Duration: Current  Location: Zapopan, Jalisco, Mexico  Project: Electronic Billing Micro service  Title: Solution Architect and Developer of solution    Project Description:  Creation of a engine as micro service to deal with the constraints of Mexican electronic billing. Such micro service is written in python3 for being consumed by a Java legacy web application. Both platforms will share a In house TCP/IP protocol.    Roles and Responsibilities:  • Design of a tcp/ip protocol to transfers raw buffers (with utf-8 json content) with concurrency and full duplex between 2 platforms.  • Writting/Development of Java client part specification https://github.com/pianodaemon/fact2018/tree/master/alan-jcli  • Writting/Develop of Python3 server part specification https://github.com/pianodaemon/fact2018/tree/master/cfdiengine/bbgum  • Writing of socket server in python3 (It maintains a pool of processes to attend billing requests).  • Write and Apply changes to store procedures written with PLSQL.  • Write and Apply changes to html4/jquery user iterfaces.  • Write and Apply changes to PDF formats legacy format with java itext.  • Write an openssl wrapper to sign electronic billing within microservice.  • Creation of new PDF formats for several billing documents with reporlab for python3  • Porting Agnux ERP and its microservices to run within virtual private clud of AWS.  • Schedule backups/snapshots for EC2 disks and RDS databases related to Agnux ERP within AWS.  • Setting virtual AWS firewalls for Agnux ERP implementations within AWS.    Environment  Java 1.6 and sockets, Python3 and sockets with multiprocess. Glassfish, PostgreSQL 9.6, AWS