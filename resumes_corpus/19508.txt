Technical Lead/DevOps Technical Lead/DevOps Technical Lead/DevOps - Cube Technologies, CA Pasadena, CA Senior Software Architect with 14 years of experience:    • As a Certified Scrum Master, I've mentored development teams in the adoption of agile methodologies and configured the development environment to support Agile/Extreme programming practices (Backlog/Git/CI/CD).  • Worked as the Lead Architect in implementing a Reusable Component Library at Technicolor. Managing over 9 Architects, 1 QA and 1 Software Tools Engineer.  • Worked as the Technical Lead in the delivery of the next generation compute engine for the Dow Jones Company. The compute engine calculates the Dow Jones indices and distributes them around the world.  • Have extensive development experience with Java EE, Python, Spring, Hibernate, and JavaScript. I have more recently embraced Clojure and ClojureScript to deliver highly scalable solutions with quicker time to market.  • Have experience with alternative databases like AWS DynamoDB and Datomic.  • Have experience architecting and implementing Cloud Applications using Google App Engine, AWS API Gateway, AWS Dynamo DB, AWS Lambda, AWS S3, and AWS ECS.  • Have experience implementing Continuous Integration and Delivery using AWS DevOps suite including CodeStar, Codepipeline, CodeDeploy, CodeCommit, CodeBuild, and CloudFormation.  • Have extensive experience in architecting solutions to truly meet user and business needs by promoting continuous end-user feedback.  • Have extensive experience in implementing agile metrics to provide project visibility to senior executives. Work Experience Technical Lead/DevOps Cube Technologies, CA November 2016 to Present • Built a cloud toolbox composed of scripts and utilities to provide a consistent set of operations for AWS, GCP, and GitLabs. It was implemented in Go to maximize performance and scalability. The toolbox provides a more systematic easier to use cloud model that helps to control costs, and makes it easier to automate more complex use cases in DevOps and Infrastructure Management. Built on top of Red Hat OpenShift (CoreOS).  • Implemented Continuous Delivery using AWS Codepipeline and AWS CloudFormation to fully automate infrastructure provisioning in the release process.  • Implemented Continuous Integration using a hybrid model with Jenkins on premise and AWS CodeCommit, AWS Codepipeline to minimize cost.  • Prototyped restaurant ranking system using new kitchen metric standards and service metrics using the AWS API Gateway, AWS Lambda, AWS Blockchain (Hyperledger Fabric), and AWS DynamoDB. Consulting/Technical Architect ELA Law, CA October 2014 to September 2016 • Executed enterprise migration of apps and data to AWS and GCP. Including Email, File Storage, Backup/Disaster recovery, time management app, and document management system.  • Upgraded local infrastructure from the bottom up (network cabling, router, and workstations)  • Designed and implemented next generation customer/membership management system using Linux, Apache Tomcat, MySQL, Java EE/Spring, HTML5. Software Architect/Technical Lead Sony Pictures Entertainment January 2013 to June 2014 • Defined and implemented an agile development process based on Scrum and Extreme programming to improve vendor software deliveries in a globally distributed environment.  • Implemented PRISM build system using Maven, Hudson, Nexus to bring down build times from ~8hours to 2.5hours improving developer efficiency 40-80%.  • Implemented EIDR across Home Entertainment division using EIDR best practices for adaptive streaming.  • Designed and implemented the next generation order fulfillment system at Home Entertainment division.  • Lead the upgrading and re-engineering of the next generation of PRISM using Oracle 11g, Java, HTML5  • Managed/Lead a team of 20 software developers delivering solutions for the Home Entertainment division.  • Member of the technical architects team responsible for identifying technologies and practices to bring them in-house and disseminate them across the enterprise.  • Conducted code and design reviews on critical subsystems to improve software quality from inception. Python Consultant DreamWorks Animation, CA June 2012 to January 2013 • Defined and implemented the software release management process for the Platform Services Development team. Implementation tools included: Accurev, Scons, and Python.  • Implemented tools to troubleshoot and monitor a suite of enterprise services allowing identifying problematic composed and basic services.  • Developed production framework to make production tools highly reliable, robust, and resilient to production environment changes. Shell wrapper scripts were used to manage runtime dependencies and to support multiple operating system versions. Software Architect Pitayasoft - Burbank, CA August 2011 to February 2012 • As Certified Scrum Master, consulted and mentored development teams in the adoption of agile methodologies and configured the development environment to support Scrum and Extreme programming practices.  • Set up continuous integration servers, recommended branching strategies, and evaluated tools for refactoring and unit testing.  • Evaluated web frameworks to improve the agility of the development team to better meet business requirements and to more rapidly deliver solutions to the end customers.  • Optimized the replication server by adding support for different replication strategies with custom packet sizes.  • Setup Hadoop Development environment from scratch and prescribed the Hadoop Production Environment using Amazon's Elastic MapReduce. Software Architect Technicolor - Burbank, CA December 2009 to July 2011 • Lead Architect for the project, 9 architects, 1 QA, 1 software tools engineer.  • Designed and implemented Reusable Component website in which the repository communicated the status of components across the enterprise providing information in regards to reusability, intellectual property risks, and overall quality. The front-end was implemented using HTML5 and JavaScript while the backend was implemented using Java EE, Spring, and Tomcat.  • Worked on the implementation of the main Repository and Build Coordinators using Spring's Controllers and View generators. The corresponding data model was persisted in Postgres using Hibernate.  • Defined and implemented the software development environment for the CTO office.  • Set up of an LDAP server, the software configuration and change management systems, the BlackDuck intellectual property management system, Solaris Build servers, and RedHat/CentOS Build Servers.  • Set up ClearCase Multisite and defined the version control policies and procedures.  • Created repositories for the reusable components and replicated the repositories across globally distributed sites.  • Set up ClearQuest Multisite and configured a full integration with ClearCase via Unified Change Management (UCM).  • Set up BlackDuck intellectual property management system to manage open source components.  • Defined and implemented the BlackDuck use model in CodeCenter and configured the Protex scan server for the scanning of open source and internal components.  • Evaluated DLNA software stacks to use in the distribution and management of digital content.  • Defined and implemented a companywide Reusable Component Repository.  • Gathered requirements, documented the architecture of the different sub-systems via UML diagrams, and defined component reusability metrics.  • Mentored development team in the use of Agile development practices.  • Introduced Test-Driven Development (TDD), pair programming and continuous integration to software development teams.  • Defined and implemented a facade to ClearCase MultiSite using Python allowing a finer control of the continuous integration builds for the reusable components used by geographically distributed teams and a tighter integration with reusable component repository. Systems Architect/Founder Pitayasoft - Los Angeles, CA March 2008 to December 2009 • Managed software development team of 8 Software Engineers using Scrum and Extreme programming to encapsulate functionality requests in user stories and prioritize their business value.  • Designed and implemented a replication server using Java RMI to automate the transfer of software changes from multiple repositories. The server was written as standalone Java server since minimizing performance impact on the tool server, where the remote commands were to be executed, was of utmost importance.  • Implemented a rich front-end to the remote execution facilities using the Java Swing toolkit.  • Developed company website using Dreamweaver CS5.5 and WordPress. HTML and JavaScript were used as the implementation languages.  • Consulted on Configuration Management issues and Agile Development Methodologies. Senior Software Engineer/Tools and Frameworks ITG August 1998 to March 2008 • Developed a Java based log monitoring system to improve the manageability of the software product lines. JBoss was used as the application server on the backend for the parsing and processing of log messages. A Java-based rich client was developed to run on multiple platforms and to process the tickets generated by the log messages. A true success and an example of what Service-Oriented Architecture can do for the enterprise. The tool allowed improved customer satisfaction by enabling support personnel to be more proactive in detecting problems before customers noticed them while maintaining the same headcount of production personnel.  • As a member of the Tools and Frameworks group, reusable components were developed to avoid code duplication, improve time to market, and increase the overall quality of the different company products.  • SPITS Lead Developer (C/C++): SPITS was a compute engine and alarm system used by the Dow Jones Company to compute the Dow Jones Industrial Average and to generate trade alerts. Work in SPITS involved porting SPITS to Solaris 2.8, making it Y2K compliant, and improving alert performance and capacity.  • Defined software reuse metrics and implemented scripts to generate component reusability reports for the Chief Development Officer allowing for a greater level of software reusability across the enterprise by identifying components being used initially by one or two teams and promoting their use across other groups and leveraging current technology assets.  • Maintained a make based build system used companywide. The makefile system provided a unified and simple way of building software on Unix/Linux systems.  • Created merge tools to facilitate the merging of code changes in multiple branches within the version control system. This allowed software developers to more efficiently propagate new features and bug fixes to different software products versions. It also improved the ability to harvest reusable software components by making it easier to re-factor functionality. ITG - Los Angeles, CA July 1997 to March 2008 Software Developer/Test Automation Engineer ITG July 1997 to August 1998 • Maintained in-house defect tracking system for the Quality Assurance Department using Perl and HTML.  • Developed and executed Acceptance and Regression Test Plans.  • Implemented automated test scripts for portfolio management systems. Education Bachelor of Science in Computer Science Loyola Marymount University - Los Angeles, CA Skills Amazon dynamodb (2 years), Aws (4 years), C (9 years), Clearcase (1 year), Dynamodb. (2 years), frameworks (9 years), Gcp (4 years), Html5. (5 years), Integration (4 years), Integrator (4 years), Java (10+ years), Javascript (3 years), Jboss (9 years), Mysql (2 years), Openshift (2 years), Python (2 years), software development (3 years), Solaris (10+ years), Structured software (3 years), Unix (9 years) Links http://www.linkedin.com/in/salcobian Additional Information Technical Skills    Programming Languages: Java EE, Python, HTML5, JavaScript, Go, Swift, C/C++, Perl.  Database Systems: MySQL, Datomic, AWS DynamoDB, Oracle, PostgreSQL.  Frameworks: GWT, Spring, Django, Om Next, TensorFlow, JAX-RS, JAX-WS, JPA/Hibernate.  IDE: Emacs, Eclipse, NetBeans.  Build Utilities: Maven, Leiningen, Ant, GNU make, Sunmake, Clearmake.  Continuous Integration: Jenkins, Hudson, AWS CodePipeline.  Test Suites: JUnit, PyUnit, Selenium, Test.Check.  Software Development Processes: Extreme Programming, Scrum, Rational Unified Process.  Tools: Git, Subversion, JIRA, Sparx System Architect, Kubernetes, Docker, ClearCase.    Operating Systems: Ubuntu, CentoOS, RedHat, Solaris, MacOS X, Windows.  Technologies: Enterprise Service Bus (JBoss Fuse), Cloud Computing (AWS, GCP), AWS IoT,  Application Security (SSL, Certificates, Encryption), OpenShift, CoreOS, Etcd,Terraform, Ansible, SOA, REST, Microservices, Design Patterns, UX Modeling, Business Intelligence (BIRT), Big Data (Hadoop), GitLabs, Network Security, Continuous Integration and Delivery, Unified Modeling Language (UML).