Sr. Python Developer Sr. <span class="hl">Python</span> <span class="hl">Developer</span> Sr. Python Developer - Bank of America Charlotte, NC • 7+ Years of experience in Analysis, Design, Development, Management and Implementation of various stand-alone, client-server enterprise applications.  • Experience of software development in Python (libraries used: libraries- Beautiful Soup, NumPy, SciPy, matplotlib, python-twitter, OpenCV, Pandas data frame, network, urllib2, MySQL dB for database connectivity) and IDEs sublime text, Spyder, PyCharm, emacs.  • Experienced in WAMP (Windows, Apache, MYSQL, Python/PHP) and LAMP (Linux, Apache, MySQL, Python/PHP) Architecture. Knowledge in various front-end tools like HTML, DHTML, CSS, JavaScript, XML, jQuery, Angular JS, and AJAX.  • Proficient in Front end development experience using HTML, XML, CSS, jQuery, JSON and JavaScript, CSS,  • Experienced in design patterns such as MVC using Django, Flask and deploying application on Apache tomcat server, containerizing applications using Docker.  • Strong expertise in development of web-based applications using Python, Java, HTML, XML, KML, Angular JS, CSS, DHTML, JavaScript, JSON and jQuery.  • Responsible for design and development of Web Pages using PHP, HTML, JOOMLA, CSS including Ajax controls and XML.  • Responsible for designing, developing, testing, deploying and maintaining the web application. Experience with Design, code, and debug operations, reporting, data analysis and web applications utilizing Python.  • Experience in Setup hosting on AWS EC2 instance and used Amazon SES for email delivery and hands-on experience on SCM tools like GIT, containers like Docker etc.  • Backend applications using Python/Flask/Django and SQL/ PostgreSQL. Hands-on experience in writing and reviewing requirements, architecture documents, test plans, design documents, quality analysis and audits.  • Familiar with JSON based REST Web services and Amazon Web services (AWS) and Responsible for setting up Python REST API framework and spring frame work using Django  • Good experience in developing web applications implementing MVT architecture using Django, Flask, web application frameworks, with good understanding of Django ORM and SQL Alchemy.  • Experience in AWS Cloud services such as EC2, S3, EBS, VPC, ELB, Route53, Cloud Watch, Security Groups, Cloud Trail, IAM, Cloud Front, Snowball, RDS and Glacier.  • Responsible for writing Python code to simplify lists in Python with list comprehension and Python OOP. Worked with POSTMAN for API testing. Developed REST APIs and created User Model for application.  • Expertise in test automation and continuous delivery of web applications, client server applications, web services/REST APIs Testing, with Python.  • Having working Knowledge in DevOps Environment as an automation engineer on various technologies/ applications like GIT, SVN, Puppet, Chef, Docker, AWS, etc.  • Have good knowledge on NoSQL databases like Mongo DB and SQL databases like MySQL, PostgreSQL, SQLite3.  • Good experience in software development using Python and using its libraries and modules like NumPy, Pandas, SciPy Pickle, Jupiter, SciPy, Python-twitter, Matplotlib, urllib2 for data analytics and rapid development.  • Consumed REST based Microservices with Rest template based on RESTful APIs and designed, developed and tested HTML, CSS, jQuery that meets accessibility and web browser standards for car dealerships websites.  • Experienced in NoSQL technologies like MongoDB, Redis and relational databases like Oracle, SQLite, PostgreSQL and MySQL databases.  • Good knowledge in various phases of SDLC Requirement Analysis, Design, Development and Testing on various Development and Enhancement Projects.  • Experienced in various types of testing such as Unit testing, Integration testing, User acceptance testing, Functional testing.  • Experienced in installing, configuring, modifying, testing and deploying applications with Apache. Experience in cross browser and cross-device compatibility check and thoroughly performed unit testing using Jasmine, Mocha, JUnit and Karma.  • Good experience in Amazon Web Services (AWS) environment and good knowledge of AWS services like Elastic Compute Cloud (EC2), Elastic Load-balancers, Elastic Container Service (Docker Containers), S3, Elastic Beanstalk, Cloud Front, Elastic Filesystem, RDS, DMS, VPC, Route53, CloudWatch, CloudTrail, CloudFormation, IAM.  • Experienced in implementing Microservices, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/WSDL) using Top Down and Bottom Up approach.  • Experience in Implementation of MVC/ MVW architecture using Servlet, Django, and RESTful, SOAP web service and SOAPUI.  • Hands-on experience in exposing REST based services through DataPower including various message formats including XML, JSON.  • Hands on with tools Git/GitHub, Ansible, Artifactory, Jenkins, OpenStack, Balance, Node-Proxy, VMWare, and Open Source software to build automated testing and delivery pipelines. Working Knowledge of Pandas, NumPy, SciPy. Good working knowledge of Deep Learning Python libraries.  • Familiar with Python modules like NumPy, Matplotlib, Pickle, Pandas, SciPy, PyTables, PyQt, etc., for generating complex graphical data, creation of histograms, etc. Experienced in developing web-based applications using Python, DJANGO, HTML, DHTML, JavaScript, AWS and jQuery.  • Extensively worked with automation tools like Jenkins for continuous integration and continuous delivery (CI/CD) and to implement the End-to-End Automation  • Experience in developing web services (WSDL, SOAP and REST) and consuming web services with python programming language. Organized data exchange and integration with customers and third-party systems using CSV, XLS, XML, DBF and REST.  • Experienced in working with SQL Alchemy in connecting with databases like MongoDB, Oracle and MySQL. Good knowledge on NoSQL databases such as MongoDB, Elasticsearch and Dynamo DB, Oracle DB.  • Authorized to work in the US for any employer Authorized to work in the US for any employer Work Experience Sr. Python Developer Bank of America - Charlotte, NC January 2017 to Present • Developed automated testing framework for command-line based tests on Linux using Objected Oriented Perl and for selenium-based tests using Python.  • Created a Python/Django based web application using Python scripting for data processing, MySQL for the database, and HTML/CSS/jQuery and High Charts for data visualization of the served pages.  • Involved in development of Python APIs to dump the array structures in the Processor at the failure point for debugging.  • Achieved business process automation via applications developed using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash.  • Created a Python/Django based web application using Python scripting for data processing, MySQL for the database, and HTML/CSS/jQuery and High Charts for data visualization of the served pages  • Using Chef, deployed and configured Elasticsearch, Log stash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and CloudWatch.  • Created Terraform scripts for EC2 instances, Elastic Load balancers and S3 buckets. Implemented Terraform to manage the AWS infrastructure and managed servers using configuration management tools like Chef and Ansible.  • Designed and managed build and release methodologies using Wit be Tool. Designed and managed API system deployment using fast http server and Amazon AWS architecture.  • Used Apache CouchDB (NoSQL) in AWS Linux instance in parallel to RDS MySQL to store and analyze job market info  • Implemented programming automations using Jenkins and Ansible on Unix/Linux based OS over cloud like Docker.  • Build an AWS and REDIS server for storing the data and performed defect analysis and interaction with Business Users during UAT/SIT. Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2.  • Involved in CI/CD pipeline for deploying to dev, QA and prod environments using Jenkins, Bamboo and Docker.  • Designed, configured, and deployed Amazon Web Services (AWS) for applications utilizing the AWS stack (Including EC2, Route53, S3, RDS, Cloud Formation, Cloud Watch, SQS, IAM), focusing on high-availability, fault tolerance, and auto-scaling.  • Build servers using AWS: Importing volumes, launching EC2, RDS, creating security groups, auto-scaling, load balancers (ELBs) in the defined virtual private connection.  • Created network architecture on AWS VPC, subnets, Internet Gateway, Route. Perform S3 buckets creation, configured the storage on S3 buckets, policies and the IAM role-based policies.  • AWS Import/Export accelerates moving large amounts of data into and out of AWS using portable storage devices for transport.  • Worked on creating and documenting POC for helping migrate the current application to micro service architecture. The architecture included Docker as the container technology with Kubernetes and worked on with REST API.  • Automated the continuous integration and deployments using Jenkins, Docker, Ansible and AWS Cloud Templates. Created Docker images, upload/download in and out from the Docker Hub.  • Designed, developed, implemented, and maintained solutions for using Docker, Jenkins, Git, and Puppet for Microservices and continuous deployment.  • Worked on NoSQL technologies like MongoDB, Cassandra and relational databases like Oracle, SQLite, PostgreSQL, Dynamo DB and MySQL database.  • Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CI/CD pipelines.  • Development of code in Python and move developed code into Company's Source control Bitbucket and Deploy into Company's Sever using CI/CD procedures like Jenkins on Scrum-basis.  • Containerized and Deployed the ETL and REST services on AWS ECS through the CI/CD Jenkins pipe  • Organized data exchange and integration with customers and third-party systems using CSV, XLS, XML, DBF, JSON, REST, and SOAP.  • Developed and maintained parsing modules, which read CSV, XML and JSON data from files and other REST services, processed the data. Extensively used Django micro service framework for simple request and response.  • Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers.  • Wrote and executed various MYSQL database queries from python using Python-MySQL connector and MySQL dB package  • Involved in development of Web Services using REST for sending and getting data from the external interface in the JSON format.  • Wrote and executed various MYSQL database queries from python using Python-MySQL connector and MySQL dB package.  • Created Restful back-end service deployed on Li bode cloud VPS's using Flask web framework and SQL Alchemy ORM for data persistence.  • Created UI using JavaScript and HTML5. Designed and developed data management system using MySQL. Build SQL queries for performing various CRUD operations like create, update, read and delete.  • Installed Wit be, Python, Jira, test Rail as part of server setups. Built AWS server for deployment and data processing. Implemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub, Nexus, Maven and AWS AMI's.  • Involved in entire lifecycle of the projects including Design and Deployment, Testing and Implementation and support. Maintaining the scripts using the version Control.  • Involved in Web application penetration testing process, web crawling process to detect and exploit SQL Injections Vulnerabilities.  • Wrote automate Python Script for testing program to store machine detection alarm when Pump experience overloading to Amazon cloud.  • Developed UI using CSS, HTML, JavaScript, AngularJS, jQuery and JSON. Developed dynamic webpages through HTML5, CSS, JavaScript and AJAX.  • Extracted the actual data of HTML format and predicted raw data; interpreted and stored predicted one in well-organized JSON files. Python Developer Netflix - Los Gatos, CA October 2015 to December 2017 • Consumed REST based Microservices with Rest template based on RESTful APIs and designed, developed and tested HTML, CSS, jQuery that meets accessibility and web browser standards for car dealerships websites.  • Track record of increasing responsibility in the business software design, Microservices, systems analysis/development and full lifecycle project management.  • Implemented the Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers.  • Worked with container-based deployments using Docker, working with Docker images, Docker Hub and Docker registries and Kubernetes  • Consumed external APIs and wrote RESTful API using Django REST Framework and Angular. Equally comfortable working within the Django ORM or writing native SQL in SQL Server.  • Created Restful API's to integrate and enhance functionalities of the application. Also Utilized Restful API in communicating with third parties.  • Worked on creating the Docker containers and Docker consoles for managing the application life cycle. Setup Docker on Linux and configured Jenkins to run under Docker host  • Developed a module using Spring-REST consumed by the IVR Service to obtain the claim registration details from LDAP. Implementation of front end JSP/JSF and backing beans  • Developed multithreaded web services using Cherrypie & bottlePy framework and leveraging queuing architectures with RabbitMQ for scalability, performance and building also involving Beautiful Soap, NumPy, SciPy, Matplotlib, python-twitter, Pandas Data frame, urlib2 libraries.  • Using Python included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks.  • Worked on migration of Splunk to AWS (cloud) instances. Involved in standardizing Splunk forwarded deployment, configuration and maintenance across UNIX and Windows platforms.  • Used data structures like directories, tuples, object-oriented class-based inheritance features for making complex algorithms. Used SOAP and RESTful API for information extraction.  • Designed and maintained databases using Python and developed Python-based API (RESTful Web Service) using Flask, SQL Alchemy, and PostgreSQL.  • Worked on Atlassian tools like Bamboo, Jira, and confluence. Installed and configured configuration tool such as Chef Server/workstation and nodes via CLI tools to AWS nodes.  • Automated builds using Maven and scheduled automated nightly builds using Jenkins. Built Jenkins pipeline to drive all microservices builds out to the Docker registry and then deployed to Kubernetes.  • Worked on various environment Python, MYSQL, Apache, CSS, git, DHTML, HTML, JavaScript, Shell Scripts.  • Worked on front end frame works like CSS Bootstrap for development of Web applications. Launched Kubernetes to provide a platform for automating deployment, scaling and operations of application containers across clusters of hosts.  • Installed Jenkins/Plugins for GIT Repository, Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CI/CD Process  • Configure AWS VPC with public and private subnets, configured Routing tables, Internet gateway, ACL's, Security groups  • End to End solution for hosting the web application on AWS cloud with integration to S3 buckets. Managing AWS Infra and automation with CLI, API.  • Created a Python/Django based web application using Python scripting for data processing, MySQL for the database, and HTML/CSS/jQuery and High Charts for data visualization of the served pages  • Develop the existing application to enhance the features using the Django Framework and improve the performance using SOAP Web services.  • Worked on project deployment using Heroku/Jenkins and using web services like Amazon Web Services (AWS) EC2 and AWS S3.  • Maintained web servers Tomcat and Apache HTTP Web servers in UNIX and wrote SQL scripts in Ab-initio for Data analysis.  • Build custom transformations using AWS Glue, Lambda and Kinesis, helped reduce costs in ETL tool & on-premise infrastructure.  • Used Terraform for managing the infrastructure through the terminal sessions and executing scripts in creating alarms and notifications for EC2 instances using AWS Cloud Watch. Wrote Ansible Playbooks for various applications and deploying them in AWS using Terraform.  • Built web-services using SOAP that allowed integrating the business application with the legacy applications and facilitates for future applications.  • Managed, developed, and designed a dashboard control panel for customers and Administrators using Django, HTML, CSS, JavaScript, Bootstrap, jQuery and REST API calls. Python Developer EA Sports - Redwood City, CA July 2013 to June 2015 • Wrote with object-oriented Python, SQL, Beautiful Soup, httplib2, Jinja2, HTML/CSS, Bootstrap, jQuery, Linux, Sublime Text, GIT.  • Developed features in an Agile environment using Python, Django, HTML, CSS, Bootstrap.  • Worked on NoSQL databases such as MongoDB, Elasticsearch and Oracle DB.  • Build client pages using HTML, JSP, XML to interact with users and the business logic is implemented using Servlets and Java Beans.  • Build numerous Lambda functions using python and automated the process using the event created.  • Developed administrative interfaces with the technologies of JSP, JSF, Ember.js, backbone.js AJAX.  • Involved in the complete end-to-end CI/CD process, building and deploying the application on Apache servers using Jenkins, Deploy and Release.  • Involved in the CI/CD pipeline management for managing the weekly releases. Worked on packages like socket, REST API, Django.  • Implemented Bash, Perl, Python scripting to Automate many day-to-day tasks. Designed and developed carrier selection and product selection web pages using HTML, Struts, Servlets.  • Worked with CI/CD to deploy web application and run test build using Jenkins, Bamboo.  • Implemented REST API's in Python using micro-framework like SQL Alchemy in the backend for management of data center resources on which OpenStack would be deployed.  • Used GitHub for Python source code version control, Jenkins for automating the build Docker containers, and deploying in Mesos, Aws S3  • Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format.  • Developed Microservices by creating REST APIs and used them to access data from different suppliers and to gather network traffic data from servers.  • Used Python and Django for XML, JSON processing, data exchange and business logic implementation. Built database Model, Views and API's using Python for interactive web-based solutions.  • Developed Simple Object Access Protocol (SOAP) based web services for different applications called User Service and other applications using Representational State Transfer (REST) based Web services.  • Involved in Developing a Restful API'S service using Python Flask framework. Worked on a resulting report of the application and Tableau reports. Deployed production site using Apache Servers with mod Python and AWS.  • Developed Python based API (RESTful Web Service) to track the events and perform analysis using Django.  • Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format. Used REST and SOAPUI for testing web service for server-side changes.  • Deployed and tested different modules in Docker containers and GIT. Used multiple containers and managed the load balancing between all the containers using NGINX.  • Worked in Installing Jenkins/Plugins for GIT Repository, Setup SCM Polling for Immediate Build with Maven and Maven Repository and Deployment of apps using custom modules through Puppet as a CI/CD Process  • Build servers using AWS, importing volumes, launching EC2, creating security groups, auto-scaling, load balancers (ELBs) in the defined virtual private connection. Migrated applications to the AWS cloud.  • Developed the back-end web services using Python and Django REST framework. Performing Functional testing, regression testing, integration testing, and communication testing.  • Configured the Django admin site, dashboard and created a custom Django dashboard for end users with custom look and feel. Used Django APIs for database access. Education Master's in Information Technology University of Arkansas - Fayetteville, AR September 2011 to February 2013 Skills MYSQL, Javascript, CSS, ASP, Android, Git, Jquery, PHP, HTML 5