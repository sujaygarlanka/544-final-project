Software Developer (Angular 6-7/ Web API) Software <span class="hl">Developer</span> (Angular 6-7/<span class="hl">Web</span> API) Philadelphia, PA Authorized to work in the US for any employer Work Experience Software Developer (Angular 6-7/ Web API) Atlantic Home Loans, Inc - Parsippany, NJ August 2018 to Present ·        Working in Agile Methodologies for rapid development and regular adaption to the varying requirements and continuous delivery of the working software.  ·        Created Angular components, modules, and services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout, such as employing Web API   ·        Implemented routing using RouterModule to enable easy navigation throughout the project and to assist in the authentication  ·        Used HTML, CSS3, Bootstrap, Typescript at the front-end to provide design, styling, and logic for the project  ·        Implemented .Net Security features of Authentication and Authorization.  ·        Enable CORS to allow communication between the front-end Angular project and the back-end Web API functionality  ·        Employed RESTful WEB API services at the back-end that allows the project to retrieve and manipulate data from the back-end Software Developer (Angular 6/ Web API) QualCare, Inc - Piscataway, NJ February 2018 to August 2018 ·        Involve in all the phases of Software Development Life Cycle (SDLC) including Analysis, Design, Programming, Testing and Deployment.  ·        Worked with Bootstrap framework and Angular2+ to Design Single Page Application  ·        Used HTML5, CSS3 and Typescript and Angular material at the front-end to provide design, styling, and logic for the project  ·        Created Angular Components, Modules, Directives and Services to separate and decouple the different features of the project and to allow certain functionalities to be replicated throughout, such as employing WEB API  ·        Used Observable from the RXJS library in the service layer to enable subscription in the component  ·        Applied Route Guard for securing routes by using canActivate, canDeactivate interfaces  ·        Implemented CRUD operations using $http service to call Web API methods.   ·        Enable CORS to allow communication between the front-end Angular project and the back-end WEB API functionality Software Developer (MVC/ENTITY) Bolt on technology, Inc - Southampton, MA November 2016 to February 2018 ·        Involved in the Full-Stack development of Web applications using the latest of technologies for the different tiers of an application.  ·        Used HTML5, CSS3, Bootstrap and C# at the front end to provide design, styling, and logic for the project  ·        Employed Layout page and multiple partial views combine the view as a single view when launched  ·        Implemented searching and filtering of patient using JavaScript and Ajax. Users can search by name, id, and age without refreshing the page.  ·        Application development using MVC (Model View Controller) based framework which provides a strong separation of concerns between the code and also encourages the reusability of components between packages and also sometimes between applications.   ·        Developed an application that combines the concepts of ASP.NET MVC and Onion Architecture  ·        Repository Pattern is used to build this project by combining service-oriented application. Most notably, the service employs an autocomplete feature and units of works to provide the functionality to the rest of the project  ·        Developing infrastructure framework using Inversion of controls, Dependency Injection Unity Software Developer (MVC /WCF) The Neat Company, Inc - Philadelphia, PA November 2015 to November 2016 ·        Developed an application that combines the concepts of ASP.NET MVC and N-tier Architecture  ·        Used HTML5, CSS3, and C# at the front end to provide design, styling, and logic for the project  ·        Employed JavaScript, jQuery, and AJAX to enable searching and filtering of jobs without need to reload the page. The functionality is connected to the front-end through WCF  ·        Application development using MVC (Model View Controller) based framework which provides a strong separation of concerns between the code and reusability of components.   ·        Added routing and Authentication for easy navigability and security through a username and password coupled with Form Validation  ·        Effectively used Session and Cookies for users to validate and to make a timeout for the connectivity with the database.  ·        Used Filter at both global and controller level for exception handling  ·        Demonstrated create, read, update and delete (CRUD) functionalities for hire requests  ·        Entity Framework Database first was used to allow the program to connect with the database  ·        Enable CORS to allow communication between the MVC project and the WCF functionality  ·        Get and post actions are used to retrieve and update data from WCF in the form of XML and JSON. Software Developer ( Web forms/ MVC/ WCF) SMA Laboratory, Inc - Trevose, PA June 2014 to November 2015 ·        Rewrite an application the utilizes the concepts from ASP.NET Web Forms to MVC  ·        Used HTML, CSS3 and C# at the front-end to rewrite design, styling, logic for the project introduced to object-oriented programming (OOP) through C#  ·        Modified patient insurance information by adding Pop up window, and added a validation using jQuery to an intranet MVC application for new patient orders.   ·         Modified multiple stored procedures to obtain appropriate data from tables about patient information and patient orders using SQL server.   ·        Implemented searching and filtering of patient using JavaScript and Ajax. Users can search by name, id, and age without refreshing the page.  ·        Added create, read, update and delete (CRUD) functionality for new patients to an intranet MVC application.   ·        Modified Data-table form adding more columns, by using Pop up window for search patient diagnoses.   ·        Employed N-Tier architecture that included Presentation, Business and Data Access Layers using C#.Net, ASP.NET, MVC and SQL.  ·        An ADO.NET Connection string was used to allow the program to connect with the database  ·        Implemented Stored Procedures, Views, Indexes and User Defined Functions to retrieve the data from the central database SQL Server 2012.  ·        Exposure to all stages of SDLC (Software Development Life Cycle), Software Test Life Cycle (STLC), and Waterfall methodology Education Master's in Diploma in Computer Software American Advanced Institute of Technology - Philadelphia, PA March 2012 to May 2014 Skills ASP, CSS, HTML 5, Javascript