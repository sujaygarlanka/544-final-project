Sr. Python Developer Sr. <span class="hl">Python</span> <span class="hl">Developer</span> Sr. Python Developer - NORC at University of Chicago Chicago, IL Work Experience Sr. Python Developer NORC at University of Chicago May 2016 to Present Description: "ICODE" is a data standardizing application of survey information developed in NORC. The project is sponsored by multiple federal agencies. It required a significant amount of manual review and coding to transform data into a commonly-formatted, researchable database. The idea is to make it easier to use the data collected by finding and analyzing the data needed, save datasets, or generate custom extracts to analyze in statistical program. collaborated closely with research experts to design and execute social science research projects that involved new and advanced data collection and analysis methodologies and computational technologies, such as social media analytics, natural language processing, machine learning, and web application development. Develop systems to extract social media, online web sources information from both structured and unstructured data sources to make predictions and optimizations. Performing statistical analyses, often using machine learning (including clustering, decision trees, and SVM), and natural language processing, for pattern recognition, to gain new insights, generate structure out of unstructured data. Implement solutions to facilitate data analysis and extraction, with a variety of databases (SQL Server, MySQL, PostgreSQL, NoSQL, Apache Solr) to perform complex analyses, text analytics, web development, and create data visualizations. Handling capabilities of the Data Enclave to securely host the data and assistance with dissemination of the survey data.    Responsibilities:  • Production support for the multiple projects based on the single codebase "ICODE"  • Responsible for configuration, creating builds and deployments.  • Responsible for software testing using Selenium and Unit testing, Robot testing framework.  • Used Numpy, Pandas for statistical Numerical analysis.  • Used open source enterprise search platform Apache Solr for searching and indexing and Celery for task queuing.  • Used Stash to resolve and coding the work on python.  • Used several python libraries like wxPython, numPY, Pandas and matPlotLib.  • Developed various algorithms for generating several data patterns.  • Used JIRA for bug tracking and issue tracking and resolving assigned tickets quickly and efficiently.  • Added several options to the application to choose particular algorithm for data and address generation.  • Implemented Integration test cases.  • Rewrite existing Python/Django modules to deliver certain format of data.  • Used Django Database API's to access database objects.  • Wrote python scripts to parse XML documents and load the data in database.  • Anticipated potential parts of failure (database, communication points, file system errors).  • Developed the project in Linux environment and migrated to PostgresSQL database.  • Used Agile Methodology and SCRUM Process.  • Maintained the versions using GIT, Stash, Bitbucket and sending the release notes for each release.  • Supported the issues seen in the tool across all the teams for several projects.  • Build all database mapping classes using Django models.  • Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval.    Environment: Python 2.7, PyQT, PyQuery, MVW, HTML5, CSS3, DOM, Angular.js, Shell Scripting, JSON, Rest, Apache Web Server, Django 1.10/1.9/1.6, SQL, UNIX, Windows, PostgreSQL, and python libraries such as Numpy, Pandas, IPython, sqlalchemy. Sr. Python Developer JPMorgan - New York, NY February 2015 to April 2016 Description: Dovetail Payment Processing System (DPS) is a 3rd party vendor from whom JP Morgan & Chase Bank has purchased the Dovetail Application (DT) in order to provide a single platform for all types of payments - Urgent & non-urgent, single and Bulk, High Value and Low Value. This application is called iPAY (International Payment system) that processes payments for all their international customers. iPAY mechanism enables their customers to initiate, receive Payments and acknowledgments across the globe to/from any other person in any country that has this service provided by JP Morgan & Chase. This Application uses various interfaces in order to process the payments from the "Initiator" (who initiated the Transaction) to the "Receiver" (who receives the Transaction).    Responsibilities:  • Gathered all requirement for developing and analyzing requirement of projects.  • Developed entire frontend and backend modules using Python on Django including Tastypie Web Framework using Git.  • Developed Merge jobs in Python to extract and load data into MySQL database.  • Successfully migrated the Django database from SQLite to MySQL to PostgreSQL with complete data integrity.  • Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework.  • Dynamic implementation of SQL server work on website using SQL developer tool.  • Designed front end using UI, HTML, Bootstrap, Node JS, underscore JS, Angular JS CSS, and JavaScript.  • Involved in the Complete Software development life cycle (SDLC) to develop the application.  • Used Numpy for Numerical analysis.  • Followed AGILE development methodology to develop the application.  • Used and customized apache server to for checking our developed project.  • Used Test driven approach (TDD) for developing services required for the application.  • Implemented Integration test cases.  • Used Git to resolve and coding the work on python and portlet.  • Used several python libraries like wxPython, numPY and matPlotLib.  • Was involved in environment, code installation as well as the SVN implementation.  • Build all database mapping classes using Django models and Apache Cassandra.  • Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval.    Environment: Python 3.3, PyQT, PyQuery, MVW, HTML5, CSS3, DOM, Angular.js, Shell Scripting, JSON, Rest, Apache Web Server, Django, SQL, UNIX, Windows, PostgreSQL, and python libraries such as Numpy, IPython, sqlalchemy, Django Tastypie. Sr. Python Developer Merck & Co., Inc August 2013 to February 2015 Description: Product.com website provide healthcare professionals with excellent information on products and services, including innovations and solutions that improve quality of life and satisfy customer needs, Patients with information on cutting-edge science, breakthrough medicines that address significant unmet needs, and thus have the potential to become important medical advances.    Responsibilities:  • Django Framework was used in developing web applications to implement the model view control architecture.  • Created entire application using Python, Django, MySQL and Linux.  • Developed the presentation layer using HTML, CSS, JavaScript, JQuery and AJAX.  • Used JQuery libraries for all client side JavaScript manipulations.  • Exposure on Multi-Threading factory to distribute learning process back-testing and the into various worker processes.  • Performed efficient delivery of code based on principles of Test Driven Development (TDD) and continuous integration to keep in line with Agile Software Methodology principles.  • Lock mechanisms were implemented and the functionality of multithreading has been used.  • Developed a fully automated continuous integration system using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash.  • Managed, developed, and designed a dashboard control panel for customers and Administrators using Django, OracleDB, PostgreSQL, and VMWare API calls.  • Extensively used python modules such as requests, urllib, urllib2 for web crawling.  • Implemented configuration changes for data models.  • Used Pandas library for statistics Analysis & Numpy for Numerical analysis.  • Managed large datasets using Panda data frames and MySQL.  • Handled potential points of failure through error handling and communication of failure.  • Anticipated potential parts of failure (database, communication points, file system errors).  • Actively worked as a part of team with managers and other staff to meet the goals of the project in the stipulated time.  • Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser.  • Responsible for user validations on client side as well as server side.  • Automated the existing scripts for performance calculations using Numpy and sqlalchemy.  • Interacted with QA to develop test plans from high-level design documentation.    Environment: Python 2.7, Django 1.8, CSS, HTML, JavaScript, JQuery, webbapp2, AJAX, MYSQL, Linux, Heroku, GIT, urllib, urllib2, OracleDB, PostgreSQL, and VMWare API. Python Developer US BANK - Los Angeles, CA October 2011 to August 2013 Description: US Bank is one of the top 10 banks in technology in the U.S. The web-banking module of US Bank manages the design and testing of the content, workflows and User Interface. It provides for clients account information: Account(s) summaries, Account(s) details, Monthly Statements, Balance Transfers between accounts, accrued interest, Loan application, ATM locations and Credit Card services.    Responsibilities:  • Worked on server side applications with Django using Python programming.  • Used python libraries like Beautiful Soup and matplotlib.  • Utilized standard Python modules such as csv, robotparser, itertools and pickle for development.  • Worked on Python Open Stack APIs and used Numpy for Numerical analysis.  • Used Ajax and JQuery for transmitting JSON data objects between frontend and controllers.  • Implemented user interface guidelines and standards throughout the development and maintenance of the website using the HTML, CSS, JavaScript and JQuery.  • Implemented AJAX for dynamic functionality of a webpages for front end applications.  • Worked on front end frame works like CSS Bootstrap for responsive webpages.  • Developed and tested many features for dashboard, created using Bootstrap, CSS, and JavaScript.  • Developed Wrapper in Python for instantiating multi-threaded application.  • Developed views and templates with Python and Django's view controller and templating language to create a user-friendly website interface.  • Managed datasets using Panda data frames and MySQL, queried MYSQL database queries from python using Python-MySQL connector and MySQLdb package to retrieve information.  • Developed various algorithms for generating several data patterns.  • Used JIRA for bug tracking and issue tracking.  • Added several options to the application to choose particular algorithm for data and address generation.  • Developed the project in Linux environment.  • Used Agile Methodology and SCRUM Process.  • Maintained the versions using GIT and sending the release notes for each release.  • Supported the issues seen in the tool across all the teams for several projects.    Environment: Python 2.4, Django, CSS, HTML, BOOTSTRAP, JavaScript, JQuery, AJAX, MYSQL, Linux, Heroku, GIT. Python Developer CITI Bank - Hyderabad, Andhra Pradesh November 2009 to September 2011 Description: This Project aims to help the employees of CITI Bank to refer candidates for open positions in the organization. Through this application admin can post new referral schemes for open positions in the organization and accordingly the employees can refer candidates and can get the benefit of cash rewards or gifts that are available under a particular referral scheme. This project also has various reports, which helps the admin to do a detailed analysis as per his criteria.    Responsibilities:  • Design, develop, test, deploy and maintain the website.  • Developed entire frontend and backend modules using Python on Django Web Framework.  • Designed and developed the UI of the website using HTML, AJAX, CSS and JavaScript.  • Designed and developed datacenter management system using MySQL.  • Rewrite existing Python/Django modules to deliver certain format of data.  • Used Django Database API's to access database objects.  • Wrote python scripts to parse XML documents and load the data in database.  • Generated property list for every application dynamically using python.  • Handled all the client side validation using JavaScript.  • Creating unit test/regression test framework for working/new code  • Using Subversion version control tool to coordinate team-development.  • Responsible for debugging and troubleshooting the web application.    Environment: Python, MYSQL, Apache, CSS, ORACLE, DHTML, HTML, JavaScript, Shell Scripts. Python developer All state Insurance - Bangalore, Karnataka December 2007 to November 2009 Description: All State insurance Agency Compensation System Rewrite (ACSR) portal is being developed for its Exclusive Insurance Agents, Financial Agents where the agent can get a snapshot view of their insurance transactions, commissions accrued, bonuses and allowances etc., This project has different modules My Compensation, Transaction Summary, Commissions, Statement Archive, new Products.    Responsibilities:  • Developed entire frontend and backend modules using Python  • Worked with team of developers on python applications for RISK management.  • Designed and developed the UI of the website using HTML, AJAX, CSS and JavaScript  • Made Django web based apps for Insurance premium calculations.  • Generated property list for every application dynamically using Python.  • Creating unit test/regression test framework for working/new code.  • Using Subversion git tool to coordinate team-development.  • Responsible for debugging and troubleshooting the web application  • Designed and developed data management system using MySQL.  • Rewrite existing Java, C++ application in Python.  • Designed the architecture of the hardware environments and methodology of the code.    Environment: Python, Windows, MySQL, Java Script, Version Controls and python libraries. Skills DJANGO (9 years), MYSQL (9 years), PYTHON (9 years), HTML (8 years), JAVASCRIPT (8 years), DATABASE (7 years), AJAX (7 years) Additional Information Technical Skills:  Programming Languages Python 3.3/2.7, Django 1.10/1.9/1.8, Flask, Java, C++, Shell Script, SQL, Java/J2EE, PyJamas, Jython, IronPython, Cpython.  Web Technologies AJAX, JavaScript, HTML, DHTML, XHTML, XML, JSON, Jquery, Angular Js. Selenium, SAS, AWS.  Database MySQL, SQL Server, PostgresSQL, NoSQL, Oracle 11g.  Operating systems Windows 7, 8.1, 10, Win XP, Linux, OS X.  Methodologies Agile, V Model, Waterfall, Hybrid.  IDE Pycharm, Eclipse, Pydev, IDLE, Sublime.