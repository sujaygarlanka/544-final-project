Sr . Full Stack Java Developer Sr . Full Stack <span class="hl">Java</span> <span class="hl">Developer</span> Sr. Full Stack Java Developer - Anthem Mason, OH • Around 10 years of heavy experience in all phases of Software Development Life Cycle (SDLC) including analysis, design, coding.  • Experience in Pair Programming, Test Driven Development, Waterfall model and Agile methodologies like SCRUM  • Expertise experience in estimations, analysis, design, development, testing, maintenance, performance tuning and deployment of internet, e-commerce and client-server applications using Java, Servlets, JSP, JavaBeans, JDBC, Spring, Hibernate, AJAX, JavaScript.  • Experience with different IDE's like Eclipse, Net Beans, IntelliJ.  • Good knowledge and experience in Core and J2EE design patterns like Singleton, Abstract Factory, Builder, MVC2, Business Delegate, DAO etc.  • Expertise in various open source frameworks like Angular JS, Node JS, Struts 2.0/1.2, Spring 2.5/3.0, Spring MVC, IoC, Web and ORM Technology like Hibernate 3.0, JPA, EJB3.0, IBatis, MyBatis, JQuery.  • Expertise in Distributed and Web environments, focused in JAVA Technologies - Java collections, Threads, J2SE, JDBC, Struts, Spring, Hibernate Framework.  • Expertise in Spring Security Modules and Authentication.  • Expertise in Web-Development technologies like Servlets, JSP, JSTL, HTML5, JSON, JavaScript, CSS3, XML, XSL/XSLT, AJAX, JQuery.  • Good OOAD skills and data modeling using UML (Use-cases, Class diagrams, Sequence diagrams etc.). Used UML tools like STARUML.  • Extensive knowledge of XML-based standards and protocols (such as WSDL and SOAP), Service Oriented Architecture (SOA), development of XSD schemas and implementing both SOAP and REST web services.  • Extensively experienced in Middle Tier Development using Servlets, JSPs, and EJB (3.0).  • Experience in using DOM4J, JAXB, JAXP parsing and XML Bean to process, validate, parse and extract data from XML files.  • Extensive experience with Web/Application servers likes Apache Tomcat, Jetty, JBoss, Oracle Web Logic Servers, Web Sphere AS and building the applications using ANT, Maven, and WEB 2.0 build tool.  • Expertise in various open source frameworks and tools like Struts, spring, hibernate.  • Extensive experience in using IDE's Eclipse, My Eclipse, Eclipse Galileo and RAD.  • Experience in writing SQL Queries, Triggers, and Stored procedures for database transactions.  • Experience in working different operations system environments with java in Windows, UNIX, and Linux.  • Experience in working with the Columnar NoSQL Database like HBase, Cassandra to manage extremely large data sets.  • Experience to maintain the source using version controlling tools Visual Source safe, and Rational Clear Case.  • Good knowledge of Cloud Foundry and Spring Boot applications  • Expertise in SDLC that encompass with proven analytical and problem solving skills and experience working with agile methodologies.  • Proven aptitude on learning and working on emergency technologies.  • Extensive experience in deploying, managing and developing with MongoDB clusters.  • Effective Communication and Inter-Personal skills technical design, implementation deployment, and support of the fixed Income Trading Platform and Fixed Income Trading suite of applications and Multi Trading. Authorized to work in the US for any employer Work Experience Sr . Full Stack Java Developer Anthem - Mason, OH, US June 2016 to Present Responsibilities:  • Involved in complete development of 'Agile (SCRUM) Development Methodology' and tested the application in each iteration.  • Involved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development and testing.  • Built Spring boot based Java Microservices to support enterprise web application  • Implemented Micro Services using Spring Boot and AngularJS.  • Used Amazon AWS (EC2/S3/EBS) for prototyping and subsequent evaluation.  • Experience with PCF and AWS cloud technologies.  • Developed an AWS lambda function to send a request for internal service end points through API Gateway using apache Http Client.  • Enhanced user experience by designing new web features using MVC Framework like Express.js, Require.js, React.js and Node.js.  • Backend Integration testing of Microservices: thrift backend as well as API services  • Created a Single Page Application (SPA) using Angular2 as framework, to bind data with specific views and to synchronize data with server.  • Used JavaScript, JQuery, AngularJS, Node JS and AJAX technologies for front end user input validations and Restful web service calls.  • Wrote Python Scripts to parse XML document and load the data into Database  • Developed spring boot application with Microservices and deployed it into AWS using EC2 instances.  • Designed front-end presentation logic using JSP, HTML5, CSS3 and Strut tags.  • Implemented AJAX for asynchronous communication with server providing better user experience.  • Implemented Spring Security for authentication and authorization.  • Implemented Business Logic using Java, spring and Hibernate.  • Implemented Representational state transfer (REST) Web services for distributed systems using Jersey framework to retrieve data from client side.  • Utilize Apache Sling API in order to securely manage data in the underlying Jackrabbit JCR repository  • Used MongoDB as data storage and utilized aspects like replica sets, sharding and clever document design to make service extensible scale and feature wise.  • Used Accurev, Git with TFS Server for version control and Gradle for deployment.  • Created logical and physical data models putting to practice, concepts of normalization and RDBMS.  • Involved in Bug fixing of various modules that were raised by the testing teams in the application during integration testing phase.  • Developed unit testing framework using Junit test cases for continuous integration testing and used JTest tool for performance testing.  • Migrating oracle data model to Cassandra to achieve and reduce the SLA from 10 minutes to 2 seconds and also improve user experience by using Kafka and Cassandra.  • Configured development environment using Web Sphere application server for developer's integration testing.  • Used Maven building tool for creating EAR file to be deployed in application servers.  • Experience in Selenium Web Driver automation tool with TestNG using Java.  • To keep track of issues and tasks on individuals used JIRA ticketing system.  • Create and configured the new Jenkins slave nodes and distributed the jobs between all Jenkins minions.  • Achieved the continuous Integration (CI) and continuous deployment (CD) in Jenkins brew master instance, which reduces the time for the deployment of Microservices.    Environment: Java, J2EE, Agile, Kanban, JSP, Servlet, Strut, React Js, Node JS, JavaScript, AngularJS, JQuery, AJAX, Web Sphere , Spring MVC, Spring Batch, Spring Boot, Spring Security, Microservices, Hibernate, Oracle, MongoDB , Git, RESTful Web Services, AWS, AXIS, HTML5, CSS, Jenkins, Maven, JAX-B, Junit, JIRA, Bit bucket, Beyond Compare, IP Switch, ORACLE SQL Developer Tool. sr.Full Stack Java Developer Caterpillar - Peoria, IL, US August 2014 to May 2016 Responsibilities:  • Responsible for designing and developing Manage Purchase Order Web Service and presentation layer with Spring MVC.  • Responsible for Requirement gathering, coding, testing and documentation.  • Architected and deployed Java based web product matching framework that matches products across multiple retailers.  • Responsible for developing and maintaining all the entity and session beans.  • Extensively worked on Drools Rules Engine and Expectation Engine for writing Business Rules Validation.  • Designed and developed the messaging framework for communication between workflow manager and other Enterprise Applications over Java class and MQ-Series using JMS.  • Designed and integrated the full-scale Spring/Hibernate persistence solution with the application architectures.  • Worked on generating the web services classes by using Service Oriented Architecture SOA, WSDL, UDDI, and SOAP.  • Developed and implemented the MVC Architectural Pattern using Spring Framework including JSP, Servlets and Action classes.  • Worked on Angular JS 1.2.0 version for client-side JavaScript MVC framework for the development of dynamic web applications.  • Worked on Node.js v0.11.10 version of Node JS framework for server-side JavaScript framework  • Downloaded data from the Amazon Cloud Database for detailed display by the app.  • Worked with the development team to create appropriate cloud solutions for client needs.  • Implemented database layer using EJB 3.0 and Java Persistence API(JPA) in maintenance projects  • Responsible for developing Use case diagrams, Class diagrams, Sequence diagrams and process flow diagrams for the modules using UML and Rational Rose.  • Involved in Preparation of the technical design documents and involved in identifying and implementation of different J2EE design patterns like Singleton and DAO etc.  • Developed the presentation layer using JSP, JSTL, HTML, JSON, XHTML, CSS and client validations using JavaScript.  • Worked on MongoDB database concepts such as locking, indexes, sharing, replication, schema design.  • Using Apache Camel frame work provided concrete implementations of all the widely used Enterprise Integration Patterns (EIPs) and connectivity to a great variety of transports and APIs.  • Contemporary applications rely on relational databases, NoSQL databases and messaging infrastructure for achieving the internet scale. Cloud Foundry exposes MySQL, Postgre SQL, MongoDB, RabbitMQ and Redis as services that offer the database and messaging capabilities  • Involved in designing and development of web interface using JSP, Servlets, JavaScript and JDBC for administering and managing users and clients.  • Developed the application using My Eclipse 8.5 and used eclipse standard/plug-in features for editing, debugging, compiling, and formatting and build automation.  • Handling user requests such as code enhancements, bug fixes.  • Designed reports per the need of the user  • Created stored procedures, triggers and functions using SQL Plus to meet user requirements.  • Used Log4j for logging errors, messages and performance l.  • Integrated with MDM for managing user data, login and registration information are retrieved from MDM and synced with E commerce database.    Environment: Java, J2ee, Java beans, Servlets, JMS, JSP, Drools, Angular 1.2.0, Node.js v0.11.10, Servlets, GWT, Hibernate, EJB, JPA, Spring, Java Script, JDBC, UNIX, HTML, XHTML, XSLT, JSON, SOAP, WSDL, Eclipse, Web Services, MySQL, SQL Plus, LDAP, Log4j. sr.Full Stack Java Developer International Software systems - Greenbelt, MD, US May 2012 to July 2014 Responsibilities:  • Implemented Micro Service Architecture using Mongo DB, Hapi JS, Angular 4 and Node JS stack and developed Single Page Applications (SPA).  • Designed the front-end using web technologies likeHTML5, CSS3 and Twitter Bootstrap framework and Angular 4for creating grid layout, responsive screen sizes and devices.  • Developed reusable Angular 4components which are compatible with latest versions of typescript and angular CLI.  • Configured various routes, directives for grid, pagination, conditional validations, templating, dynamic loading, lazy loading, Shadow DOM, ngrx store.  • Created services to consume RESTAPI's using Component based architecture provided by Angular4. Made use of AngularUI grid to display tree-based grids  • Converted the code base to use modern ECMAScript (ES6 / ES7) used Babel, Typescript and Web pack as a module loader and used along with Angular CLI.  • Developed Angular views to hook up models to the DOM and synchronize data with server as a SPA.  • Made use of Angular4 Observables to make HTTP Requests and leveraged its functions to loop around results.  • Built-in AJAX HTTP Service with observables is used extensively for making quick and incremental updates to UI of the application.  • Developed server-side proxy using Node JS (Hapi JS) for an event-driven, non-blocking I/O model to make an efficient application while keeping it lightweight.  • Used NodeJS with Hapi JS server to interact with the Rest services and database, hosted on multiple load balanced cloud instances.  • Made use of authentication and authorization techniques available with Hapi JS and used its tools like web packs to avoid boiler plate code.  • Utilized auto configurable documentation functionality provided by Hapi JS to configure the Open API specification-Swagger using Hapi-swaggered and Hapi-swaggered-ui.  • Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for Angular 4 code.  • Pushed new features live after passing tests implemented with Karma Test Runner.  • Testing for Node JS is done using Mocha and chai.  • Unit testing of web services is done using Spock framework by extending Groovy syntax.  • Configured JBOSS Application server and used Oracle database to write complex PL/SQL queries.  • Designed dynamic schema through MongoDB by incorporating rich queries syntaxes and achieved data (collections) distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding.  • Mongoose Connector is used for implementing ODM framework for Mongo DB.  • For dependency management, used the built in NPM package manager to configure the right versions of the packages.  • Used Jenkins CI/CD tool for continuous integrating and deploying application on servers.  • Configured Docker container service and build pipe line. Handled all the port mapping/binding things that happen with Dockers and Containers.  • Used RabbitMQ for transport of data in Queue in between components of the application.  • Configured Kibana data visualization plugin for Elasticsearch, Logstash and created bar, line and scatter plots, pie charts and maps on top of large chunks of data.  • Used Redis configuration with node server along with Cat box for caching the responses.  • Implemented OAUTH2.0 authentication and authorization framework to provide the security to rest web services.  • Installed, configured, and administered NoSQL database clusters in AWS Virtual Private Cloud Network for available data on cloud.  • Implemented AWS solutions using E2C, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups, Optimized volumes and EC2 instances and created monitors, alarms and notifications for EC2 hosts using Cloud Watch.  • Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka.  • Configured Kubernetes in the application for automating deployment, scaling, and management of applications.  • Configured DynaTrace to measure and monitor the performance of application.    Environment: HTML5, CSS3, Twitter Bootstrap, Angular4, Typescript, Angular CLI, NGRX, ECMA(ES6/ES7), Babel, Typescript, Web Pack, DOM, HTTP, Ajax, Node JS, Hapi JS, REST, Mongo DB, Oracle, Redis, Swagger, Karma, Jasmine, Mocha, Chai, Spock, Groovy, JBoss, ODM, Mongoose Connector, Kibana, Elastic Search, Logstash, NPM, Jenkins, Docker, Redis, AWS, Netflix Zuul, Eureka, Kubernetes, Dyna Trace, Rabbit MQ, Cat box, AWS. Java Developer JPMorgan Chase - San Mateo, CA, US October 2010 to April 2012 Responsibilities:  • Worked on resolving issues for the Fortify scan results on multiple subsystems.  • Worked and developed web pages using JSP and Spring MVC Framework.  • Actively worked in requirement gathering for all the activities and actively carried out assignments in Agile- scrum work environments.  • Involved in the development of the UI using JSP, HTML, CSS, XML, XSL, JavaScript, AJAX, SAX and DOM Parsers.  • Developed Hibernate components and DAO Classes for business logic processing and database operations.  • Created UML Diagrams (Class and Sequence flow) during Design Phase using Rational Rose.  • As part of ULLD2 worked on the removal of the loan data points for the loan application through Create New Loan, Loan Pipeline, Evaluate Loans, Contract and Loan Allocation of single family selling system.  • Involved in Quarterly Releases and Light enhancements to selling system.  • Worked on enhancement requirements for the modules like Contract Pipeline, Create Contracts, View Contract Pipeline, and Default Settlement Parameters.  • Integrated with the back-end code (JSP) using AngularJS, JSON and AJAX to get and post the data to backend servers.  • Developed server-side services using Java5.0, Spring 2.5, Web Services (SOAP)  • Provided Junit test cases for the application to support the Test Driven Development (TDD).  • Used and worked with the Maven for building the web application.  • Consumed Web Services for the usage of Rules module in the application development.    Environment: Java, J2EE, Spring Core, Spring MVC, Hibernate, XML, Web logic Server, DB2, Eclipse, Maven, Clear Case, Clear Quest, Rational Rose, DB Visualizer, UNIX and HP Quality Center. Java Developer Global Tele Systems - Hyderabad, ANDHRA PRADESH, IN June 2008 to September 2010 Responsibilities:  • Created web pages according to client's guidelines and standards throughout the development and maintenance of the website using HTML, CSS and JavaScript.  • Worked on CSS to change the styles to be used in future web layouts and debugging the error issues with CSS.  • Involved in High Level Design Document (HLD) preparation.  • Agile methodology is used for development of the application.  • Designed web pages using HTML and CSS and Implemented functionality in JavaScript.  • Involved in designing and implementing UI for Self-Service Application using JQuery Ajax framework and widget-based JavaScript programming model.  • Designed and developed User Interface Web Forms using Face CSS and Adobe Creative Suite  • Developed user interface using HTML, JavaScript, JQuery and CSS.  • Used J2EE design patterns like Factory pattern & Singleton Pattern.  • Involved in bug fixing and resolving issues with the QA and production environment during production support.  • Responsible for coding SQL Statements and Stored procedures for back end communication using JDBC  • Worked on UML diagrams like Class Diagram, Sequence Diagram required for implementing the production flow.  • Front-end validations are done using JavaScript.  • Developed HTML prototypes and ready XHTML documents with CSS style sheets.  • Created Stored Procedure, Trigger for database access and events.  • Experience in installing, configuring and deploying application on Web Logic Server.  • Used SQL and PL/SQL queries to perform database operations on Web Sphere.  • Used ANT to build, run and create JARs and WAR files among other uses.  • Implemented JDBC for database connectivity with MySQL Server.  • Participated in Java training sessions.  • Involved in analysis for Reporting framework.  • Used My Eclipse as an IDE for development.  • SVN is used as a tool for version control.  • Gained more technical skills in application design and development of Application services in real time project environment.    Environment: Java, JavaScript, JQuery, Ajax, UML, SQL, Stored Procedures, UML, HTML, CSS, JSP, Servlets, Web Services, WSDL, SOAP. Education Bachelor's Skills ECLIPSE, J2EE, JAVA, HIBERNATE, INTELLIJ IDEA Additional Information Technical Skills:  Languages Java/J2EE, SQL, PL/SQL, HTML, DHTML, JavaScript, Perl, UML, XML, XSL, XSLT, JQuery  Java Frameworks Servlets (3.x), JDBC (4.x), JSTL Java Server Pages (JSP 2.x), JSF, JMS, JPA.  Web Technologies HTML5, CSS3, JAVASCRIPT, AngularJS, AJAX, Backbone.js, JQuery, SOAP and Restful), Node.js.  Frameworks Struts (2.x.x), Spring (3.x/4.x), Hibernate (3.x/ 4.x), Apache Camel (2.x), Swing, Apache CXF, Apache Karaf.  Servers Tomcat (8.x/ 9.x), Web Logic (9.x), Web Sphere (6.x), Red Hat JBoss Fuse, Glassfish Server (4.x).  Databases Oracle 10g/11g/12c, MSSQL, MySQL (5/6), IBM DB2, MongoDB (3.x), Cassandra (3.x).  Tools Ant (1.x, Gradle (3.x), Maven (3.x), Log4j, Git (1.x/2.x), SVN (1.x), CVS (1.x.x)), Junit (4.x), Selenium (3.x/ 4.x) Mockito), Jenkins, Hudson and Bamboo.  IDE Eclipse Luna(M6), Mars(M7), Neon(RC3), IntelliJ IDEA(15.x), Net Beans(8.x), RAD(7.x)  Platforms Windows (7/ 8/10), Windows Server 2008/12, Ubuntu (15.04), Red Hat Enterprise Linux.