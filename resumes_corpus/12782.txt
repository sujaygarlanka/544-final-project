Sr. Full Stack Java Developer Sr. Full Stack <span class="hl">Java</span> <span class="hl">Developer</span> Sr. Full Stack Java Developer - Thermo Fisher Scientific Columbus, OH • 8+years of IT experience in analysis, design, development, documentation, implementing and testing of software systems in Java, J2EE and Internet technologies.  • Expertise in Object Oriented Programming and development of n-tier component-based enterprise web applications.  • Involved in the Software Development Life Cycle SDLC phases which include Analysis, Design, Implementation, Testing and Maintenance.  • Strong hands on experience in developing the Enterprise and Web applications on n-tier Architecture using Java/J2EE, Spring, JSP, Hibernate, Servlets, EJBs, Struts, JNDI, Web services, XML, and JDBC.  • Good knowledge of spring's IOC, AOP, Spring MVC and spring's integration with Hibernate and Struts technologies.  • Experience in frameworks like Spring MVC/IOC/ORM/JDBC/AOP/Context/Security and Struts MVC, architecture, interceptors, action mappings and resource bundles and JSF.  • Used a Microservices architecture, with Spring Boot-based services interacting through a combination of REST and RabbitMQ or Apache Kafka message brokers  • Experience writing angular.js code for developing Single page applications (SPA), used several in built language core directives, expressions and modules.  • Experience with features of Angular 2, 4 such as directives, dependency injection, modules and routing.  • Extensive experience in developing Web interfaces using HTML5, CSS3, Bootstrap, SASS, LESS, JavaScript, JQuery, Angular-JS, react js and Backbone-JS.  • Experience in dynamic web development using JQuery, AJAX, Java Script, XML and CSS.  • Strong Experience on AWS platform and its dimensions of scalability including VPC, EC2, ELB, S3, and EBS.  • Good knowledge on Amazon Web Services (AWS), Amazon Cloud Services like Elastic Compute Cloud (EC2), Simple Storage Service(S3), Amazon Simple DB, Amazon Cloud Watch, SNS, SQS, LAMBDA and experienced in building highly scalable java applications using various architectures.  • Used Apache Kafka in cluster as messaging system between the APIs and Microservices.  • Experience in developing and consuming Web Services using WSDL, SOAP, HTTP, and UDDI. Has good knowledge in RESTful web services.  • Excellent Relational Database understanding and experience with Oracle, SQL Server and MySQL.  • Generated DDL scripts and wrote DML scripts for creation of database objects in Oracle database.  • Composed and executed MongoDB scripts to insert and update NoSQL database; automating data changes and reporting.  • Developed and deployed applications onto various SDLC based environments using the industry standard techniques of Continuous Integration and Continuous Deployment in Jenkins, which reduces the time for the deployment of Microservices.  • Have been involved in building and deployment of the applications by using build tools like ANT, Maven etc.  • Hands-on experience in using Eclipse, SLF4j, Log4j, JUnit, Mockito, TestNG for building, logging, testing JTest for Performance Testing and Clear Case, Microsoft Visual Source Safe, CVS and SVN for version control.  • Excellent Client interaction skills and proven experience in working independently as well as in a team. Strongly initiative, creative and able to learn new technologies. Ability to deal with people, ability to grasp things fast. Strong sense of team player. Work Experience Sr. Full Stack Java Developer Thermo Fisher Scientific - Carlsbad, CA June 2017 to Present Description: Thermo Fisher Cart & Checkout this project involves migrating to micro services, from the existing Comergent system to customers which increases flexibility and performance of Tablet and Desktop Applications.    Responsibilities:  • Involved in the implementation of design using vital phases of the Software development life cycle SDLC that includes Development, Testing, Implementation and Maintenance Support.  • Used Agile Scrum methodology for iterative incremental software development  • Implemented Java 1.8 features like Lambda expressions, Java Optional, Stream API for Bulk data operations on Collections which would increase the performance of the Application  • Used Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build, test and deploy micro services.  • Implemented Microservices with Spring Cloud provided library services like Netflix Eureka Naming Server, Netflix Ribbon and Feign Client as a Rest client to map response to the client bean.  • Applied J2EE design patterns like Singleton, Data Transfer Object DTO, Data and Business Object VO during the development of components.  • Design roles and groups for users and resources using AWS Identity Access Management (IAM).  • Used Visio to prepare Flow Diagram, Class Diagram and Sequence Diagram.  • Implemented Spring MVC flow to interact with different modules and extensively used Spring AOP and Dependency injection during various modules of project.  • Used Spring Data JPA as ORM tool for data related functionalities, persistence layer and implemented transactions  • Involved in creating POJO Objects and mapped using Spring Data JPA Annotations.  • Implement Lombok API annotations to generate boilerplate code for POJO objects.  • Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices.  • Composed and executed MongoDB scripts to insert and update NoSQL database; automating data changes and reporting.  • Responsible for Configuring Apache Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring.  • Extensively used the Java collection Framework Classes for Holding the Application objects.  • Designed Frontend with in object-oriented JavaScript framework like Angular.JS, Node.js. Used building rich internet applications, backbone JS Require JS to optimize in-browser use and to load the module and to improve the Speed.  • Built Web pages that are more user-interactive using AJAX, JavaScript, and ReactJS.  • Participated in development of a well responsive single page application using ReactJS framework and JavaScript in conjunction with HTML5, CSS3 standards, with front end UI team.  • Designed and developed the UI using spring view component, JSP, HTML5, CSS 3.0, JQuery and AngularJS.  • Implemented AngularJS controllers, custom directives, filters to maintain each view data. Implemented Angular Service calls using Angular Factory.  • Planned, constructed and iterated upon a contacts management single-page application (SPA) and custom REST API using AngularJS, MongoDB, Node.js  • Built custom Angular 4 Directives and Services for single-page web application for agile-based team.  • Implemented reactive Angular 4 components using RXJS.  • Developed service infrastructure components in Angular2/Typescript for a unified web UI initiative  • Involved in writing automated test scripts using java and executed it through Selenium Cucumber.  • Used Splunk Enterprise to retrieve the logs and to understand the flow of application in PRD servers and extensively worked in identifying the issues production servers during production support.  • Used Gigya for authenticating users and implement identity authentication.  • Implemented AWS solutions using EC2, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups, optimized  • Responsive web design (RWD) is developed using frameworks like Angular2.0, typescript and MVC frameworks and Bootstrap  • Managed servers on the AWS platform instances using Puppet, Chef, Ansible, Configuration management.  • Developed and published Java Web Services PoS Services so that other systems can use the service using Web Services.  • Worked on creating Microservices, API, and created Docker Files for different Microservices. Worked on Swagger API and auto-generated documentation for all REST calls.  • Used Zipkin to trouble shoot problems in micro-services architectures.  • Created advance SQL scripts in PL/SQL Developer to facilitate the data in/out flow in Oracle.  • Experience in storing sever data into S3 and have in-depth knowledge on various S3 features like versioning, lifecycle management, logging, events etc.  • Used JBoss server to deploy the application.  • Extensively involved in a Docker deployment pipeline for custom application images in the cloud using Jenkins.  • Used the Docker container system with the Kubernetes integration.  • Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework. And used Code coverage plug-ins like SonarQube to improve the coverage and quality of code, Implemented Jasmine and Karma frameworks for UI test cases.  • Logging framework Log4J is used with Sl4j annotations to log messages. Used Gradle for integration and building of the project.  • Used Stash repository for Git version control, JIRA tracking tool for assigning and defect management.    Environment: Java 1.8, J2EE ,Spring 4, Spring JPA, Spring boot 1.1.5, Spring cloud, Spring Security, Hibernate, JavaScript , Angular 2/4, ReactJS, HTML 5.0/4.0, CSS, Ajax, Jquery, Swagger API, Lombok API, JBoss, Eclipse, Kubernetes, Docker, Gradle, Stash, log4j, Junit, XML, Web Services, SOAP, WSDL, JAX-RS, Splunk, Apache Kafka, MongoDB, Windows XP, Design Patterns, AWS, WebLogic10.2, SQL, PL/SQL, TOAD, Oracle 10g, DB2, Docker, Maven, Jenkins, Cobertura, Sonar, WinSCP, Putty, Log4J, JUnit, Mockito, Jersey, JSON, XML, Selenium Cucumber, EXT JS, Express JS 4.x, NodeJS, Typescript, ES7. Sr. Full Stack Developer Capital One - Chicago, IL April 2015 to May 2017 Description: CLIP- this workflow implemented through Empath itself is a capital one agent servicing application. It is designed as progressive web application technology to deliver the seamless experience to the users for increase the credit limit, enhancing the workflow using Omnius framework, Node.js, vue.js which increases the flexibility and performance of the application.    Responsibilities:  • Involved in various phases of project development following Agile Software Development Methodology and Test Driven Development (TDD) to build the application.  • Implemented Java 1.8 features like Lambda expressions, Java Optional, Stream API for Bulk data operations on Collections which would increase the performance of the Application  • Used Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers and leveraging AWS to build, test and deploy micro services.  • Extensively used Spring IOC, configured Application Context files and performed database object mapping using Hibernate annotations.  • Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s and Spring Boot for Microservices.  • Extensively used the Java collection Framework Classes for Holding the Application objects.  • Involved in implementing the changes in user interfaces using HTML5, CSS3, JavaScript, Angular JS, and AJAX.  • Used AngularJS to create Single Page Applications (SPA) which can bind data to specific views and synchronize data with server.  • Implemented the Project structure based on spring MVC pattern using Spring Boot and Hibernate.  • Used Hibernate Framework for object relational mapping and persistence.  • Developed application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.  • Implemented Spring MVC architecture using spring, JSP &Java beans to migrate from Struts Framework.  • Developed different modules using Java, Apache Camel, spring and Hibernate.  • Involved in development of services based architecture utilizing open source technologies like Hibernate ORM with JPA Annotations and Spring MVC Framework.  • Developed the REST based Microservices using spring Boot.  • Used Spring Inversion of Control and Transaction Management for processing batch files  • Developed and tested features in an AGILE environment using Angular 2 and Typescript.  • Worked on Angular 2.0 by consuming RESTful web services & Used Angular 2.0 forms like Template Driven forms and Modern Driven (Reactive) forms.  • Developed user interface by using the React JS, Flux for SPA development.  • Implemented react JS code to handle cross browser compatibility issues in Mozilla, IE 7, 8, 9, Safari and FF.  • Used React-Router to turn application into Single Page Application  • Worked in using React JS components, Forms, Events, Keys, Router, Animations and Flux concept.  • Worked on migrating Persistence layer from simple DAO to Spring/Hibernate.  • Developed web layer using springs framework and to manage the project in MVC pattern.  • Designed and Developed Representational state transfer (REST) based services and Simple Object Access Protocol (SOAP) based services as part of the requirement.  • Worked on creating business logic in controllers, directives and routers, developed routing through webpages and achieved single page application  • Designed and Developed new User Interactive Web pages with the help of HTML/HTML5, CSS/CSS3, SASS/LESS, JavaScript, Angular JS, Bootstrap and AJAX.  • Used JavaScript, AngularJS, and AJAX technologies for front end user input validations and Restful web service calls.  • Built custom Angular 4 Directives and Services for single-page web application for agile-based team.  • Used multiple in-built directives in AngularJS & Node.js such as filters, rootscope, child scope, modal, template, and state in the application development.  • Used AngularJS framework for building web-apps and is highly efficient in integrating with Restful services.  • Used AngularJS for Custom Directives, Custom Filters and Node.JS for back-end support with APIs.  • Created angular modules to separate various functionalities. The code was kept DRY by Injecting other services and modules as dependencies.  • Added new services to interact with REST API using AngularJS.  • Responsive web design (RWD) is developed using frameworks like Angular4.0, typescript and MVC frameworks and Bootstrap, Vue.js, Rush, Learna.  • Created application on Spring Batch framework and Multithreading to improve performance.  • Used Multithreading for faster and parallel processing of documents.  • Used Hibernate as persistence framework for DAO layer to access the Oracle11g database.  • Used Java Message Service (JMS) for reliable and allowed asynchronous exchange of important information and set up a scheduler for spring batch jobs.  • Defined XML documents for input and output sources of Web Services. Created schema documents for XML validation and developed XML schemas.  • Configured local Maven repositories and multi-component Ant projects with Nexus repositories and scheduled projects in Jenkins for continuous integration/continuous deployment (CI/CD).  • Used Tomcat server running for the application development and deployment and JIRA for issue tracking.  • Used log4j with Splunk Logging for logging error/debug messages and managing them.  • Implemented AWS solutions using EC2, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups.  • Setup AWS VPC's for dev, staging and Prod environments.  • Implemented a continuous delivery pipeline with Docker, Jenkins and GitHub and AWS AMI's.  • Managed servers on the AWS platform instances using Puppet, Chef, and Configuration management.  • Actively involved in code reviews and bug fixing using Clear Quest as bug tracking tool.  • Worked in TDD environment used MOCKITO to develop test cases for java bean components and test them through JUnit framework. And used Code coverage plug-ins like SonarQube to improve the coverage and quality of code, Implemented Jasmine and Karma frameworks for UI test cases.  • Implemented Test Driven Development (TDD) for developing and testing the application.  • Used GIT for Source Control and Version Management of all codes and resources.  Environment: Java 1.7/1.8, Scala, J2EE, Spring Framework 4.0, Spring MVC, Spring IOC, Spring Boot, Hibernate 4.3, REST Web Services, HTML5, CSS3, JavaScript, Angular 2.0/4.0, Angular JS, NodeJS, ReactJS, Bootstrap, AJAX, JSON, Apache Tomcat 8.0, Apache Maven, Postman 2.0, JUnit, Log4j, GIT, JIRA, Jenkins, Oracle 11g, Windows. Sr. Full Stack Java Developer GAP- CA October 2013 to March 2015 Description: GAP Inc. is an American multinational Clothing retailer offering clothing, accessories and personal care for men, women, children and babies. The Project is about GAP member's portal that has various modules for customers. The users need to register, login to use the secure website. The user can place orders, check the order status, manage their profiles online, find the location, check the products, set the notification regarding new products, maintains the reward points and also the system contains admin tool for managing user's and order information through customer service. The complete application is developed using Java, J2EE technologies, spring, Hibernate, RESTFUL Web Services and Deployed on WebSphere Application Server on Linux.    Responsibilities:  • Involved in Full Software Development Life Cycle (SDLC) from Requirement gathering, design, development, testing and documentation.  • Used Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration.  • Design common framework for REST API consumption using Spring Rest Templates.  • Developed RESTFUL Web Services which are consumed by several clients like Mobile, Tablet, as well Web.  • Design application using Spring MVC, JSP, JSTL and AJAX on the presentation layer, the business layer is built using spring and the persistent layer uses Hibernate.  • Extensively used Spring IOC, configured Application Context files and performed database object mapping using Hibernate annotations.  • Utilized Angular.JS framework to bind HTML5 template (views) to JavaScript object (models).  • Worked with Angular.JS applications for customer facing software using modern JavaScript development techniques and responsive design methodology.  • Used Spring AOP to handle transactions session aspects and to implement security.  • Used Spring MVC Spring Security Spring ORM modules to integrate with MongoDB to implement the persistence layer with JPA/Hibernate.  • Worked on designing data models in Cassandra and working with Cassandra Query Language.  • Involved in migrating data from Oracle 11g to Cassandra.  • Involved in Ecommerce project Development using Spring Web Flow and Hybris and developed front-end UI with Backbone.js, jQuery, CSS3, Dojo and AJAX.  • Responsible for designing the User Interface by coding in HTML5, CSS3, AngularJS, Bootstrap to build this SPA Single Page Application.  • Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals.  • Built the reusable service components using Angular 2 services with Object Oriented JavaScript, JQuery, HTML, CSS3 based on the visual designs.  • Utilized React.JS & REDUX for rendering and deployment of end setting web pages.  • Modularized front-end CSS and JS code with Sass. Built a real-time mouse/click user analytics web service with Node.JS.  • Created sites to organize client contracts and to summarize monthly financial data using Ember.js, D3.js and MySQL.  • Worked on AWS, High Availability Practices and deploying backup/restore infrastructure.  • Developed API for using AWS Lambda to manage the servers and run the code in the AWS.  • Implemented the function to send and receive AMQP messages on Rabbit MQ synchronously and asynchronously and send JMS message to Apache Active MQ on the edge device.  • Developing scripts for build, deployment, maintenance and related tasks using Jenkins, Docker and Maven.  • Setup Servers (JBoss, Apache and UNIX) and deployed application in Dev, ST and UAT Environment.  • Worked in a test-driven development environment, used JUnit and Mockito for backend test cases, and Karma and Jasmine for the frontend test cases.  • Worked with the business analysts to gather requirements, create the JIRAS and plan the sprints.  Environment: Java 8.0, Design Patterns, WebLogic10.2, Java 1.8, J2EE Servlet, jQuery, Struts, Spring 4.0.6, Spring Boot, Spring Security, Spring Core, Spring MVC, Microservices, Hibernate, RESTful API, Web Services, SOAP, WSDL, UDDI, JAX-RS, JSON, React.JS, HTML, AJAX, JavaScript, XML, Angular.JS, NodeJS, MongoDB, SQL, PL/SQL, Ember.JS, TOAD, Oracle 10g/11g, MQ, Maven, Jenkins, Log4J, JUnit, Mockito, Karma, Jasmine, JIRA. Java Developer Telcordia India Labs, Chennai July 2012 to August 2013 Description: Developed a web based application which enables customers and Customer Service Representatives of our client to access the account information of its end users on-line. This application can be used to view the account details such as plan details, the services, and profile information of the end users. The Customer representatives of our client can view all these information as well as perform additional administrative tasks.    Responsibilities:  • Developed single page responsive Web UI using HTML5, AngularJS, Bootstrap, CSS3, JavaScript, jQuery.  • Developed views controller and model components implementing JavaScript MVC.  • Developed Java Beans and Custom Tag Libraries providing client-side validations in JavaScript and providing interactive front-end GUI using AJAX.  • Designed and developed Prototype module using Angular.js and Ext.js, implemented Pagination, and Data grid added additional functionality for Data grid.  • Used Spring Core Annotations for Dependency Injection Spring DI and Spring MVC for REST API s.  • Used Oracle as database and involved in the development of PL/SQL backend implementation.  • Created web application prototype using jQuery and Angular.JS.  • Responsible for Node.js RESTful API developing, as a middleware system to call SOAP web service.  • Implemented SOA to develop SOAP Based Web services using JAX-WS implementation and Apache CXF, Apache Axis 2 Framework.  • The middleware interaction used JMS/IBM WebSphere MQ series for transferring messages between different components using the JMS/Mail API Framework.  • Used issue tracking tool JIRA for bug fixing and life cycle traceability.  • Designed SOAP based web service for handling asynchronous AJAX requests.    Environment: Java 1.7, JSF 1.2 Spring 4, Spring DI, Spring MVC, Spring REST, Spring Core, Hibernate, JSP, JMS MDB, AJAX, JBoss, JPA 2.0, Java Beans, XML, Jenkins, HTML5 JavaScript jQuery, AJAX, Jira, CSS3 XSL, Oracle 11g, SQL PL/SQL MySQL Angular.JS, Node.js, CVS, UML, Maven, SOAP. Java Developer Convergys - IN March 2011 to June 2012 Description: This project involves development and support to e-Commerce including both online banking and dotcom operations. Worked on migrating Account Balance History functionality from legacy application where the screen provides a historical snapshot user transaction as recorded. User can see how and why the balance changed over time, and when a change may have triggered a fee. A total of 93 days of transaction history available in the screen. Pagination controls have been provided to the user to navigate across the pages if user has many transactions.    Responsibilities:  • Involved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.  • Developed components for categorizing reports, creating reports, login authentication and authorization and report criteria generation for reporting using UML class diagram.  • Developed the application using Spring MVC Architecture.  • Developed the Presentation layer using JSP, HTML and used AJAX/ jQuery based rich client for improved customer experience.  • Developed the Business layer using spring (IOC, AOP), DTO, and JTA.  • Developed the Persistence layer DAO using Spring JDBC for all modules which has POJO classes with CRUD operations.  • Developed the application using industry standard design patterns like Singleton, Business Delegate Factory Pattern for better maintenance of code and re-usability.  • Maintained Cross Browser compatibility & implement Responsive Web Design using Twitter Bootstrap, custom media queries, etc.  • Involved in writing stored procedures, triggers, cursors and views.  • Developed SQL, PL/SQL with Stored Procedures to interact with Persistent database using Oracle 10g.  • Developed Web services to allow communication through SOAP over HTTP using CXF.  • Worked with executed unit test cases by using JUNIT for accuracy of code and logging with log4j.  Environment: Java 1.6, J2EE 1.6, HTML, CSS, AJAX, jQuery, JavaScript 1.7, JSP 2.1, Spring 3.0, Spring JDBC, Spring Web, Web Services/SOA, JAX-WS 2.0, XML 1.0, UML 2.0, JUNIT, Oracle WebLogic Application Server, Eclipse Indigo 3.7, Maven 2.0, SVN, SoapUI, Oracle 10g, JIRA, Bootstrap. Programmer Analyst/ Java Developer Idea Labs - Hyderabad, Telangana March 2010 to February 2011 Description: Developed a Prototype for a Retail Chain, which is a complete ERP solution getting all the modules integrated to a single system that directly connects all the modules, like Retail outlet, Central Repository, Procurement Department to a single System. Adding a new technology to the software that is RFID (Radio Frequency Identification), this replaces the barcodes.    Responsibilities:  • Followed agile methodology (SCRUM) for developing this project, with each SPRINT lasting for 2-3 weeks. Involved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC)  • Designed project related documents using Visual Paradigm (Unified Modeling Language tool) which includes Use case, Class and Sequence diagrams.  • Worked on Rally dev for defining user stories, tasks and defects.  • Wrote spring rest controller calls for web application data interactions using jQuery.  • Implemented Struts framework based on the Model View Controller design paradigm.  • Implemented Spring-Struts integration.  • Implemented various XML technologies like XML schemas, JAXB parsers and XMLBean  • Used Struts MVC Framework to flow the process.  • Implemented service method and SQL queries, PL/SQL to interact with Oracle DBMS  • Developed unit test cases using Mockito framework for testing accuracy of code and logging is done using SLF4j + Log4j.  • Deployed the application on a WebLogic server on a UNIX platform.  • Used Maven 2.0 for create the project archetype and build the interface modules for create war and ear files.  Environment: Java 1.6, J2EE 1.6, HTML, CSS, AJAX, jQuery, JavaScript 1.7, JSP 2.1, Struts MVC, XML 1.0, UML 2.0, Mockito framework(JUNIT), Log4j, SLF4j, Apache Tomcat Server, Eclipse Indigo 3.7, Maven 2.0, SVN, UNIX, Oracle 10g, MySQL, MJIRA. Education Bachelor's Skills ECLIPSE, EJB, J2EE, JAVA, HIBERNATE Additional Information Technical Skills:  Web Languages Core Java, J2EE (JSP, JSF, Servlets, Struts 2.0, Spring Web Flow, JSP Tag Libraries, EJB 3.0, JMS, JDBC, JNDI, JavaScript, SQL  Frameworks  Spring MVC, Spring Security (LDAP), Spring Core, Spring Webflow, Spring DAO, Spring ORM, Spring Boot, Spring Cloud, Struts, Hibernate, JSF, Spring Data    Methodology OOAD, OOPS, UML, RUP, Autosys, J2EE Design Patterns  Scripting Language Java Script, CSS, AngularJS, PHP  Web Technologies HTML, DHTML, JavaScript, CSS, AJAX, JSON, JQUERY, AngularJS  Database Oracle11g/10g/9i, MySQL 5.x SQL, PL/SQL, TOAD and SQLServer  Operating System DOS, Windows, UNIX, Red Hat  IDE Tools  Eclipse, RSA, JBuilder, Oracle ADF, Web Logic, Enterprised Architect, Rational Rose, LDAP, RUP Methodology, Clear Case/Clear Quest, Red Hat JBOSS Developer Studio    Web Services SOAP, WSDL, UDDI, SOAP UI, RESTful  Version Control SVN, IBM Clear case, CVS  Tools RAD, Eclipse, Edit Plus, Apache Ant, log4j, JUnit, Visio, ANT, Maven  Web/App. Servers Websphere Application Server 8.0, Apache Tomcat, SunOne Application Server, Web Logic 7.1/8.x, JBoss 4.x/5.x  Other  MS Office Suite, MS FrontPage, Toad, SQL Developer, Microsoft VSS, Test Director, Dreamweaver, putty, GEMS, SOAP UI, C++, Oracle ATG, Drools