Full Stack Developer Full Stack <span class="hl">Developer</span> Full Stack Developer - Nabors Industries Inc Houston, TX • Over 4 years of IT experience in all phases of Software Development Life Cycle and Maintenance of web based and client server multi-tier applications/architectures using Java/J2EE technologies.  • Good experience in implementing Java web compliant applications using spring, springboot and hibernate framework.  • Experienced in implementing .NET web compliant API’s using .NET Core and Dapper framework.  • Strong background in object-oriented programming concepts.  • Experience in designing POJO classes using Hibernate Annotations using JPA API  • Experience in design and implementation of our REST APIs.  • Experience in UI technologies like HTML5, AngularJS, Angular, JavaScript, Typescript, CSS, Bootstrap and AJAX.  • Expertise with Ajax Calls to Jackson framework to direct call java methods and Play routing for restful web services.  • Strong experience in various IDEs like Eclipse, WebStorm, Visual Studio, Notepad++, IntelliJ and VSCode.  • Experience in implementing web applications using JBoss and Apache.  • Experience with versioning tools like VSTS, GIT and TFS.  • Worked independently in many of my academic projects and was able to manage priorities and tasks before the deadline. Sponsorship required to work in the US Work Experience Full Stack Developer Nabors Industries Inc July 2017 to Present Project: RigCLOUD/WITSML  Description: The RigCLOUD platform is the oil and gas industry’s next-generation cloud platform uniquely designed for       developing and hosting any software, analytics programs or other applications at the rig site. Its capabilities include: High-frequency data collection, Data integration, Streaming data analytics, Hosting of drilling applications, Process automation, Remote access, Remote operations, Open systems integration.  Responsibilities:  ·        Designed and Implemented RealTime Server that will establish sessions with each Oil Rig and start storing live data in Oracle DB and MapR streams.  ·        Implemented MapR producer that will create Topics and Queues as soon as the Oil Rig starts session. When the RealTime server starts receiving the data, MapR producer publishes the same to Topics and MapR clients will start consuming data.  ·        One of the MapR client includes StreamBase that will generate alerts depending upon the data and communicates the same to business users.  ·        Implemented ASP.NET Core Well, Log and RCApplications API’s to provide well, log and RigCLOUD applications information to RealTime Server.  ·        Implemented a Security API that will act as a security layer between user and the Cloud API’s to prevent unauthorized access to the Cloud API’s.  ·        Implemented Database Schema for RigCLOUD’s Datacenter, using SQL and Oracle database. Implemented SQL procedures, Triggers, Sequences and Database configuration scripts for the same.  ·        Implemented Trajectory, Rig, Message, Tags and Aggregates API’s using ASP.NET Core and Dapper. These API’s will be used by WITSML Studio to persist and fetch data from datacenter. These API’s are done to implement microservices architecture and improve response time by distributing the computation logic to different processes.  ·        Encoded the data in Protobuff and MessagePack  format before transmitting it via satellite to reduce the bandwidth consumption.  ·        Implemented all the API’s in OpenAPI-Specifications and Implemented Swagger in all the API’s to ease the use for end user.  ·        Implemented API testing suits in SoapUI and JMeter to test the functionality and performance of API’s.  ·        Implemented Steeltoe in all API’s to send health, metrics and performance information to RigCLOUD Admin.  ·        Implemented RigCLOUD Admin server to which all Cloud API’s Send health and metrics information. This server is used to monitor all the Cloud API’s.  ·        Implemented AutoFac Interception AOP module to log the elapsed time for each method during run time.  ·        Implemented Redis Caching and Cache Invalidation to improve the API performance.  ·        Implemented Eureka server. This will act as service registry server to all the API’s  ·        Deployed and hosted all the API’s and applications on IIS server in Development environment.  ·        Implemented Shell scripts for each application to run, stop and monitor in the hosted environment.  ·        Deployed all the .Net Core API’s, SpringBoot servres and Java Applications in Microsoft Azure Cloud.  ·        Implemented API’s using Spring Boot and Apache Solr to improve search box response time by indexing table columns.  Software Developer Tietronix August 2016 to December 2016 Project: Automation of Virtual Tour Creation  Description: Our team has created a WPF application which lets the user drag and drop the thumbnail images on to a grid layout. After dropping all the images in their respective positions and clicking the process button the application creates a tour file. This file when opened in the virtual tour viewer will take the user through the 360-degree tour of the property.    Responsibilities:  • Participated in all the phases of the web site and desktop application development life cycle involving analysis, design, development, testing and deployment of the project.  • Developed and maintained a website for the project.  • Developed a front-end UI using XAML, which lets the user drag and drop images on the grid.  • Designed and implemented business methods, which will let the user select a folder of images and convert them into thumbnails.  • Designed and implemented methods, which read the image patterns from the grid and create a text file which contains the relationship among those images.  • This file is then fed to the Virtual tour viewer which shows the virtual tour of the property by reading the text file.  • Solved memory leak problem in the application by weak referencing instead of strong referencing and virtualization.  • Using VSTS as configuration control system, Visual Studio for development environment and MVVM Design pattern for the application.    Environment/Tools: Visual Studio, VSTS, MVVM, C#, ASP.NET, XAML, WPF, NCTech Immersive studio, Iris 360. Programmer Analyst/ Full Stack Java Developer Cognizant Technology Solutions September 2013 to July 2015 Project-1: Car Tracker  Description: The APIs of this application ingests the live data from moving cars like fuel capacity, RPM, geographical location etc and stores in the database. This data is then used to generate alerts and send it back to the car. This application also has a UI which lets the user to track the car and view the history of alerts etc.  Responsibilities:  • Implemented the Graphic User Interface GUI by coding in HTML5, CSS, Bootstrap, JavaScript, AngularJS.  • Designed and documented REST/HTTP APIs, including JSON data formats and API versioning strategy.  • Implemented corresponding service to handle the request from front-end pages like adding new cars and car readings.  • Developed single page applications (SPAs) using AngularJS to improve page performance and consumed REST web services.  • Used JSON objects effectively for efficient client-side coding.  • Involved in Core Java coding by using Java APIs such as Collections, Multithreading, Exception Handling, Generics, Enumeration, and Java I/O to fulfill the implementation of business logic.  • Developed server-side logic using Spring MVC, Hibernate, and JPA by writing configurations.  • Built DAO package as well as DAO IMPL package to implement the data access logic, and using Hibernate Annotation to do the data mapping.  • Wrote Hibernate configuration files to enable the data transactions between POJO and Database.  • Wrote JUnit test case for back-end logic implementation development.  Environment/Tools: HTML, CSS, HTTP, JavaScript, SQL, JPQL, Agile, XML, web services, Java, J2EE, Spring MVC, Hibernate3, JPA, JSON, Jackson, Maven, RESTful APIs, AngularJS, MVW, WebStorm, Node.js, npm, bower, gulp, GitHub, JUnit.    Project-2: ACE-GTK migration  Description: This project consists of 4 different modules interacting with each other; those are ABI, GTI, TSI, MIB. The main scope of the project was to replace TSI having UNIX server with GTK having Windows server. The ABI system consists of shell scripts, which were used to run batch jobs for MIB. Since the SQL loader was not compatible with windows DB, these shell scripts were programmed again into ETL scripts  Responsibilities:  • Conducting meetings with clients of both the systems for understanding the customer records and its attributes.  • Used Control-M Scheduler to Schedule Start of the Day SOD and End of the Day EOD job.  • SOD creates a Child Data space of Master Data space where feed files are loaded.  • Configured job schedule so that job is kicked off at the appropriate time.  • Involved in batch processing using Spring Batch framework to validate feed files and load data into corresponding AIB database tables.  • EOD merges Child Data space with Master Data space and ensures single version and governance of master data.  • Documented how Spring Batch is useful for the current project.  • Worked with Mocking while running the Junit test cases for batch processing.  • Validated if every job is doing what it is supposed to do after replacing TSI UNIX server application with GTK Windows server desktop application.  Environment/Tools: Shell Scripts, JSP, servlets, JDBC, Oracle, SQL, Web Sphere Application Server, TFS, Spring Batch, maven    Project-3: TNO- Tariff Restructure (Transportation Network Optimization)  Description: The main aim of this job is to take the approved Freight Bills from AIB database and depending upon the category of the freight bill, data should be updated into the freight bill tables of corresponding MIB database tables.  Responsibilities:  • Responsible for collecting data from archive documents, analyzed requirements and documented Technical Design document for project modules.  • Involved in batch processing using Spring Batch framework to extract data from AIB database and load into corresponding MIB tables.  • Involved in writing program specification and coding business methods. These methods are then called using JDBC.  • Extracted the xml document from AIB database and pushed the document into Message Queues.  • Coordinated with the Database team to add a freight bill table into the MIB database.  • XML documents will be read from Message Queues by FEPA job and values from freight bill will be updated into MIB database using Spring Batch job.  • Developing Junit test cases using HSQL DB  • Using Apache Ant as build management system, TFS as configuration control system and IBM Rational Software Architect as development environment.  • Coordinated with application maintenance team for scheduling and running jobs.  • Experience and knowledge in cryptography, encryption and encoding algorithms.  Environment/Tools: Rational Software Architect, Oracle 11g, PL/SQL, Spring Batch, TFS, MS-Visio. JSP, servlets, JDBC, Web Sphere Application Server, maven Education Masters of Science in Computer Science in Computer Science University of Houston - Houston, TX May 2017 engineering Sreenidhi Institute of Science & Technology - Hyderabad, Telangana May 2013 Skills database (2 years), Java (2 years), JSON (2 years), Junit (2 years), Maven (2 years), Angular, Javascript, Jquery, spring boot (2 years), spring security (2 years), .Net Core (2 years), Angular 6, dapper (2 years), Apache Solr (2 years), Gradle (2 years) Links https://www.linkedin.com/in/irfansk66/,https://github.com/irfansk66 Additional Information Technical Skills:  • Programming Languages - C, C++, C#, Java, SQL, PHP  • Frameworks - Spring MVC, Spring Batch, ASP.NET, Hibernate, WPF, MVVM, MVW  • Database - Oracle, MySQL  • UI Web Technologies - XML, HTML/HTML5, XAML, CSS/CSS3, Bootstrap, JavaScript, AngularJS, Node.js, AJAX, JSON, Bower, npm and Gulp  • Developer Tools - Eclipse, Visual Studio, NetBeans, IntelliJ, WebStorm, VSCode  • Web Services - REST, JAX-RS, JERSY, Jackson  • Application Servers - Tomcat, Web sphere Application Server, JBoss.  • Unit Testing Frameworks - Junit    • Operating Systems - Windows, Linux, Kali Linux  • Build Tools - Ant, Maven, Jenkins, Gulp, Bower  • Version Control - TFS, VSTS, Git