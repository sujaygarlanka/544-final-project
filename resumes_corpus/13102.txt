Senior Java Fullstack Developer Senior <span class="hl">Java</span> Fullstack <span class="hl">Developer</span> Senior Java Fullstack Developer - Medecision Wayne, PA • 8 years of IT experience in analysis, design, development, documentation, implementing and testing of web using Java and J2EE, Springs Framework, Struts Framework, Hibernate, Web Services (SOAP, Restful), JavaScript, HTML, CSS, AngularJS, AJAX and XML.  • Solid background in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, Java Beans, Executor Services, Thread pools.  • Experience in working with open source frameworks like Spring, Struts and ORM frameworks like Hibernate and Spring JPA.  • Extensive experience using JSF, Servlets, JSP, JDBC, JMS, JSTL and JNDI.  • SDLC: Software development experience in object oriented programming, design and development of Multi-Tier distributed, Enterprise applications.  • Experienced with hands on development in various Spring components like Spring MVC, AOP, Spring IOC, Spring JDBC, Spring JPA, Spring Securities and Spring Batch, Spring Boot, Spring Microservices, and swagger apis.  • Expertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD, and JDeveloper.  • Experience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers.  • Expert in frontend technologies such as HTML,HTML5, CSS, JavaScript, JQuery, Angular JS, AJAX, JSTL and JSON.  • Expertise in XML and related technologies like XSL, XSLT and parsers like JAXP (SAX, DOM) and JAXB.  • Possess work experience with middleware technologies like MQ-Series, Oracle Fusion (BPEL and OSB), Apache CAMEL.  • Experience in NodeJS, implementing NodeJS callbacks, NodeJS web server, NodeJS Restful apis.  • Experience in defining integration using Apache Camel routes and Message channels.  • Experience in defining CAMEL content based switches for flow deviation.  • Proficient in OOAD Technologies developing Use Cases, Activity diagrams, Sequence Diagrams and Class diagrams using case tools like Microsoft Visio and Rational Rose.  • Good experience in working with Spring Boot, Spring Microservice, discovery server like Netflix Eureka Server.  • Experience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries. Experience in writing SQL and PL/SQL programming.  • Involved in building and deploying Apache ANT/ MAVEN scripts, debugging through logging frameworks like log4j, automated build tool with Jenkins.  • Expert in Various Agile methodologies like SCRUM, Test Driven Development, Incremental & Iteration methodology and Pair Programming as well as implementing Waterfall model. To track the progress of Agile process used JIRA.  • Experience in web services technologies like REST, SOAP, WSDL, JMS and Service Oriented Architecture (SOA).  • Experience in developing web application using test driven methodologies (TDD) and Junit as a testing framework..  • Experience in writing test cases using Mockito, PowerMock. Used MockMVC to write integration test cases.  • Experience in working with AWS (Amazon Web Services), EC2, RDS, Dynamo DB, S3, Cloud Formation Templates.  • Experience in dealing with CI/CD tools like Jenkins, Git Stash, Ansible, Chef, Dockers.  • Experienced in working with different operating systems Windows, UNIX, and LINUX.  • Expertise in various version control tools such as SVN, CVS, Git and Clear Case.  • Experienced in performance dealing and server scaling using tools like Wily Interscope, JProfiler, JMeter, VisualVM. Authorized to work in the US for any employer Work Experience Senior Java Fullstack Developer Medecision - Wayne, PA August 2016 to Present Medecision is leader in Health Management, having server side web application for their different health care providers. Customer will choose different health care benefits out of the plan options available. The services will enable them to manage health insurance products, features, benefits and benefit values and attributes. Client interacts through web interface with web services written at back end to fetch data from database and select their plan benefits.  Responsibilities:  • Developed the application using Agile Methodology.  • Implemented customized authentication in Spring Security to verify user-role and secure the user pages, such as login, admin/user operations, trading, portfolio etc.  • Involved in developing the applications using Spring Framework for Dependency Injection.  • Developed back-end logic with Core Java using technologies including Collection Framework, Multi-Threading.  • Developed UI using HTML, CSS, JSP, JSON and JQuery to make Ajax calls.  • Developed single page applications, components using Angular JS directives.  • Wrote backend scripts that performed maintenance tasks on the contract data using JDBC.  • Used Spring IOC for dynamic bean injection.  • Spring AOP to modularize cross-cutting concerns in aspects.  • Developed Stored Procedures and Triggers on Oracle Database.  • Configured Spring based Microservices and Springboot.  • Implemented and Consumed REST and SOAP Web Services.  • Used Apache tomcat as a web server and WebLogic as an application server to deploy various components of application.  • Developing the application using Spring MVC Architecture with Hibernate as ORM framework.  • Used Hibernate Cache for query to improve the application performance.  • Implemented search functionality, filtering, pagination using Hibernate Criteria Query interfaces.  • Deployed AJAX call for asynchronous data retrieval from back-end.  • Used Maven to build and deploy the application in the server.  • Used SVN software configuration management and version control.  • Used Log4j for logging purposes.  • Developed test classes in JUnit for implementing unit testing.  • Designed use cases, sequence and class diagrams, activities, states, objects and components. Used UML (MS Visio) for software design.  Environment: Java 1.7, Java Swing, Servlets, JSP, JSTL, Spring 3.0, Spring ORM, Springboot, Microservices, REST/SOAP Web Services, Hibernate 3.0, Apache Tomcat Server, WebLogic, Eclipse, Log4J, Ajax, Oracle10g, PL/SQL, JQuery, AngularJS, NodeJS, JSON, SVN, XML, XSTL, XSD, SOAP, Amazon Web Services, Maven, Junit, PowerMock. Java Fullstack Developer WFS, FL May 2015 to July 2016 World Fuel Service is a leading global fuel logistics company, principally engaged in the marketing, sale and distribution of Aviation, Marine and Land fuel products and related services on a worldwide basis. Customers value its competitive fuel prices, trade credit availability, fuel price risk management, logistical support, fuel quality control and fuel management.  Responsibilities:  • Involved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications from Business Analyst.  • Followed the Agile methodology to implement the application.  • Designed and developed Application based on Spring framework using MVC design patterns.  • Used Spring IOC, AOP, Spring Boot to implement middle tier.  • Responsible for writing/reviewing server side code using Spring JDBC and DAO module of spring for executing stored procedures and SQL queries.  • Worked with Core Java for business logic.  • Involved in developing persistent layer using Hibernate framework and Spring JPA repositories.  • Used Java Executor services to provide asynchronous implementation flow. Used Cached Thread pools to scale thread usage.  • Designed integration of various modules using Apache CAMEL EIP (Enterprise integration pattern).  • Created Content based switches and Message channels to provide routing and error handling in CAMEL.  • Developed single page applications, components using Angular JS (Angular modules, controllers, Route providers)  • Published and consumed Web Services using REST and deployed it on WebSphere Application Server.  • Implemented microservices using Springboot, spring based microservices, and enabled discovery using Netflix eureka server  • Used swagger to provide documents for REST apis  • Used Jenkins, Git Stash, Ansible like CI/CD tools to make daily builds and deploys.  • Used JSON for validation, documentation data required by a given application.  • Used AWS Infrastructure and features of AWS like S3, EC2, RDS, ELB to host the portal.  • Created Quality and Production instances using AWS Console and CLI tool of AWS. Used Putty and WinSCP to login.  • Used Log4j to capture the log that includes runtime exceptions.  • Created Web application using NodeJS, and Restful Services, and MongoDB.  • Tested server side with Mocha for NodeJS.  • Built scripts using MAVEN that compiles the code, pre-compiles the JSP's, built an EAR file and deployed the application on the WebSphere application server.  • Used Git repository hosted on cloud platform.  • Developed the application using EclipseSTS.  • Developed JUnit test cases using Junit and Mockito for unit test of all developed modules.  • Wrote SQL queries for Oracle Database.  • Participated in and contributed to design reviews and code reviews.  Environment: Java 1.7, J2EE, Servlet/filters, JSP, JSTL, Spring IOC, Spring AOP, Spring MVC, Springboot, Microservices, Spring REST, Spring Security, Hibernate 3.0, NodeJS, Ajax, HTML5, JQuery Angular JS, XSD, XML, Apache Camel, AWS, EC2, Elastic Load Balancing, S3, IBM WebSphere, WebSphere liberty, Tomcat, Netflix Eureka, IBM MQ, Eclipse STS, Oracle 11g, MAVEN, JUnit, Log4J, Jenkins, JProfiler, JMeter, Git, Ansible, Chef, JIRA, JUnit, Mockito, XML Spy, Fiddler. Java/J2EE Developer Farmers Insurance - Sacramento, CA February 2013 to April 2015 Multicar Insurance is a web based project designed and developed for insurance agents. The agents will issue policy through this application for their customers. Eligibility of the customers is decided based on the past records which are automatically populated by the program. If the customer is an existing customer, then the existing rules apply. If the customer is a new customer, then future business rules will apply. Agents can check the status of their customers and their current policy rules. Once policy number is auto generated, then the policy details are issued to the customer.  Responsibilities:  • Participated in requirement gathering and framework implementation sessions through Agile TDD methodology.  • Designed and developed Application based on Spring framework using MVC.  • UI Layer implemented with Struts, Struts validation, JSF, JQuery, JavaScript, AJAX, CSS and HTML.  • Extensively used Core Java such as Exceptions and Collections.  • Used AngularJS as the development framework to build a single-page application.  • Added security features to the application using HTTPS and also password security features.  • Created DAO classes for invoking stored procedures/queries to retrieve from Oracle database.  • Used Maven framework to develop automated build scripts.  • Employed Hibernate as a persistence mechanism to implement object relational mapping.  • Used SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition.  • Developed PL/SQL scripts for data conversion.  • Worked on Eclipse for development and deployment of application in Web Logic Application Server.  • Used Log4j for application logging and debugging.  • Used Jira to access and track the bugs or defects.  • Used GIT as source control tool.  • Used JUnit to implement test cases to test modules.  Environment: Java 1.5, Spring 3.0, JSF 2.0, JIRA, Log4j, AngularJS, XSD, Maven, Hibernate 3.0, Servlets, SOAP UI, SOAP Web service, Web Logic Application Server, Oracle 11g, PL/SQL, Rational Rose, Git, WSDL, JAXB, HTML, CSS, JUnit, JIRA Java/J2EE Developer Jefferson Bank - San Antonio, TX October 2011 to January 2013 Jefferson Bank provides funds or loans to people with small business requirements. Applicants get their loans sanctioned based on their credit history. The applicant information is maintained in a database along with the details of the loan for repayment. This data is filtered into different categories based on parameters like type of account, loan amount, due date. The filtered data is used for statistics for generating reports.  Responsibilities:  • Used Spring MVC framework to develop the application and its architecture.  • Used spring dependency injection to inject all the required dependency in application.  • Being in project I have developed screens, Controller classes, business services and DAO layer respective to the module assigned to me.  • Developed Graphical User Interfaces using HTML, CSS, bootstrap and JSP's for user interaction.  • Developed webpages using UI frameworks bootstrap, Angular JS.  • Created set of classes using DAO pattern to decouple the business logic and data.  • Implemented Hibernate in the data access object layer to access and update information in the Oracle Database.  • Used various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs to implement various features and enhancements.  • Wrote test cases in JUnit for unit testing of classes.  • Interfaced with the Oracle back-end database using Hibernate Framework and XML config files.  • Created DHTML pages, used JavaScript for client-side validations and AJAX, AngularJS to create interactive front-end GUI.  • Consumed Web Services for transferring data between different applications.  • Used Soap Web services to retrieve credit history of the applicants.  • Involved in coding, maintaining, and administering Servlets and JSP components to be deployed on a WebLogic Application server and Apache Tomcat application server.  • Wrote PL/SQL queries, stored procedures, and triggers to perform back-end database operations.  • Built scripts using Ant to build the J2EE application.  • Used Eclipse IDE for developing code modules in the development environment.  • Performed connectivity with Oracle database using JDBC.  • Implemented the logging mechanism using Log4j framework.  • Used SVN version control to track and maintain the different version of the application.  • Mentored few people in team and have reviewed design, code and test cases written by them.  Environment: Java/J2EE 1.5, JSP, Servlets, Spring 2.0, Hibernate, WebLogic Application Server, XML Web service, Oracle 10g, HTML, DHTML, Bootstrap, XML, XSLT, Eclipse3.0, AJAX, JavaScript, Windows XP, JUnit3.8, Log4j, CSS, SVN. Java Developer Synopsys - Bengaluru, Karnataka February 2010 to August 2011 The objective of APM (Advanced Patient Management) is to develop a web based system to monitor the patient condition by the physician by using Latitude devices and to eliminate many office visits by a patient. In-home remote follow-up can increase patient satisfaction and improving physician workflow. The combination of device data with meaningful external sensors can provide an effective means to help manage patient health.  Responsibilities:  • Involved in the development of various front-end modules.  • Worked in deadline driven environment.  • Developing Java script modules for client side validations.  • Developed core Java backend tools.  • Developed custom tag libraries for formatting contents in JSPs.  • Developed and deployed EJBs on the server.  • Involved in the production support for the application.  • Developed various server side components using various J2EE technologies.  • Involved in the development of different user interface screens using JavaScript, CSS, and HTML.  • Developed presentation modules using Struts framework.  • Developed various controller components using Struts framework.  • Extensively used JDBC to access the database objects.  • Extensively involved in coding of various design patterns.  Environment: Java 1.4, J2EE, Servlets, JSP, Struts, MVC, EJB, Java Beans, SQL, PL/SQL, Design Patterns, JDBC, JBOSS, Log4J, Apache ANT, JavaScript, CSS, HTML, XML, DB2, Stored Procedures, Windows. J2EE Developer Indus Software - IN July 2008 to January 2010 Online Banking System with Advanced Security is a web-based application that allows secure online banking transactions for  Clients banking operations. The application was developed over J2EE Platform with Oracle as the back end database. This Application helps customers to check account balance, transfer funds, view transaction history, view transaction status.  Responsibilities:  • Involved in analysis, design and development of application and developed specifications which include Use Cases, Class Diagrams, Sequence Diagrams and Activity Diagrams.  • Developed server side applications using Servlets, JSP, EJBs and JDBC.  • Used JMS for communicating various clients and its components.  • Used Web Services-WSDL and SOAP.  • Deployed applications on WebLogic Server.  • Extensively configured the build files to different Environments  • Developed Session Beans which encapsulates the workflow logic  • Used Entity Beans to persist the data into database and also used Message Driven Beans MDB to notify the bean state.  • Developed EJB components for middle tier component implementation and business logic implementation.  • Used Struts the MVC framework for building web applications.  • Developed web pages by using HTML, CSS, JavaScript.  • Developed PL/SQL database scripts and written Stored Procedures and Triggers.  • Created User guide and application support document.  • Used CVS for the concurrent development in the team and for code repository.  • Involved in regression testing, evaluating the response times, and resolving the connection pooling issues.  Environment: Struts 1.x, Unix Shell Scripting, Java 1.4, JDBC, Servlets, JSP, EJBs, Oracle 8i, WebLogic Server 10.3, MDB, HTML, Rational Rose, CVS, PL/SQL, WSDL, SOAP, Eclipse. Education Bachelor of Technology in Computer Science JNTU Skills JAVA (9 years), MODEL VIEW CONTROLLER (9 years), MODEL-VIEW-CONTROLLER (9 years), MVC (9 years), SQL (9 years), Java 1.7, Java Swing, Servlets, JSP, JSTL, Spring 3.0, Spring ORM, Springboot, Microservices, REST/SOAP Web Services, Hibernate 3.0, Apache Tomcat Server, WebLogic, Eclipse, Log4J, Ajax, Oracle10g, PL/SQL, JQuery, AngularJS, NodeJS, JSON, SVN, XML, XSTL, XSD, SOAP, Amazon Web Services, Maven, Junit, PowerMock. Additional Information TECHNICAL SKILLS  Programming Languages JAVA, J2EE, SQL, PL/SQL, C, C++  J2EE Technologies EJB, Servlets, JSP, JSTL, JDBC, JSF, RMI, JNDI, JMS  Web Technologies HTML, DHTML, AngularJS, JQuery, XML, XSLT, CSS, JSON, JSON-DTD, AJAX, Bootstrap, NodeJS, ReactJS  IDE IBM RAD, RSA, Eclipse, MyEclipse, NetBeans, JBuilder, IntelliJ  Application/Web Server IBM WebSphere, Oracle WebLogic, JBoss, Apache Tomcat and Glassfish  Databases Oracle 9i/10g/11g/12c, SQL, MySQL, DB2, Mongo DB  XML Technologies XML, XSLT, XPATH, SAX, DOM, JDOM, AXIS, JAXB  Web Services SOAP, REST, JAX-WS, JAX-RPC, JAX-RS  Methodologies RUP (Rational Unified Process), Agile, Waterfall, SCRUM, Rapid Application Development.  Operating Systems Windows, Linux, UNIX  Application Frameworks  Struts 1.x/2.x, Spring (Dependency Injection, Spring MVC, Factory Pattern, Core, Spring Context, Spring DAO, Spring IOC, Spring JDBC, Spring Security, Spring Boot, Spring Batch, Spring with Hibernate)    ORM Frameworks JPA, Hibernate, Spring JPA, DAO  OO Modeling Rational Rose, MS Visio  Version Control Clear Case, SVN (Apache Subversion), CVS, Git  Other Tools ANT, Maven, Log4j, Jenkins, Junit, JIRA, Selenium  Cloud Computing AWS (Amazon Web Services), EC2, RDS, DynamoDB, S3  Micro services Swagger, Pivotal Cloud Foundry, Spring Micro Services, Springboot, Netflix Eureka