Sr. JAVA/J2EE FULL STACK DEVELOPER Sr.<span class="hl">JAVA</span>/J2EE FULL STACK <span class="hl">DEVELOPER</span> Software Engineer - Quest Diagnostics Mason, OH Work Experience Sr. JAVA/J2EE FULL STACK DEVELOPER Quest Diagnostics - Mason, OH January 2018 to Present Responsibilities:  Production Support: Jan 2019-till date  * Tests and debugs computer programs  * Perform miscellaneous support activities as requested by Management  * Maintains relationships with other departments  * Provide Level 2 support to internal business users  * Perform in-depth research and identify sources of production issues surrounding the Ariba suite of applications  * Perform daily health checks of the application, job schedules and infrastructure supporting the application  * Work closely with business in managing day to day issues, resolve user queries.  * Writes and maintains documentation to describe program development, logic, coding, testing, changes, and corrections  * End-end Incident tracking and client follow-up, including post mortem  * Modifies existing programs to conform to system changes or to make improvements in the existing program  * Utilizes any special programming techniques necessary to achieve the most effective program  * Monitors performance of programs after implementation  * Advises and works with user departments to resolve specific problems or make changes in programs, computer applications, capabilities, alternative programming approaches, limitations, etc  * Cross-trains as back-up for development and maintenance  Developing:  * Attending daily SCRUM meetings.  * Involved in various phases of the Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, and testing.  * Developed data replication mechanism using Spring Batch to replicate bulk data from csv to application database.  * Re-write the Tapestry into GWT using Java.  * Created new pages in GWT for Admin manage Users page.  * Using Spring Modules, MVC for Some of the Microservices.  * Developed and implemented the software release management for their release of web applications.  * Managed Maven project dependencies by creating parent-child relationships between projects.  * Used Shell/Perl scripts to automate the deployment process.  * Strong experience in Spring Framework such as Spring MVC, IOC, AOP and Spring JDBC.  * Strong hands-on experience with Spring IO, Spring Boot.  * Implementing Java EE design patterns such as MVC, Singleton, Session Facade, DAO, DTO and Business Delegate in the development of Multi-Tier distributed Enterprise Applications.  * Core Java-Multithreading, collections, Servlets and JDBC.  * Configuring and deploying applications on Tomcat 7.0 server  * Involved in planning, design and requirements gathering sessions at the start of every sprint.  * Writing code on a daily basis in JAVA to contribute to the development of the project.  * Developing the UI layer for the application using GWT, HTML, CSS, JavaScript and jQuery.  * Working with advanced frameworks such as spring, hibernate which are used in the project.  * Developing SOAP and REST based web services.  * Hands on experience with build and deployment tools including Ant / Maven, logging and Debugging Using Slf4 and Log4j, unit and integration testing using JUnit.  * Use-Case design, Class and Sequence diagrams using UML.  * Fixing defects identified during QA, UAT and production.  * Perform peer level code reviews to maintain quality of code.  * Building application with React JS, Redux, Require JS, in MVC architecture.  * Working with Apache tomcat, Web logic application server setup and deploying applications.  Environment: HTML5, CSS, Bootstrap, Rest Webservices, Core Java, Microservices, GWT, Tapestry, Spring Boot, Spring core, Spring Security, Hibernate, JMS, JUnit, Jenkins, Apache Maven, Junit, Swagger, Oracle. Microservices Backend Developer Vanguard, Malvern July 2017 to January 2018 Responsibilities:  * Consumed Restful web services using Spring REST Template.  * Used Dependency Injection (DI) or Inversion of Control (IOC) In order to develop code for obtaining bean references in spring framework using annotations.  * Built REST web service by building Vertex Server in the back-end to handle requests sent from the front-end jQuery Ajax calls  * Worked on Spring Batch processing to run the jobs daily, weekly for returning the data from unique formats into databases of SQL, ORACLE.  * Designed & developed the business components using Java 8, Java EE 7, RESTful API (JAX-RS) with Spring, Hibernate, JPA, Servlets, JSP, JSTL, JavaBeans, Design Patterns, PL/SQL, XML, XSD, JSON technologies.  * Used Apache Maven as the software build tool, Log4J for logging errors and messages  * Worked with MySQL Database and created SQL Queries to perform CRUD operations on each DB Transaction.  * Created Hibernate mappings using Core Java (OOPS, Class, Multithreading, Collections) and used iBatis Transaction Management, iBatis Batch Transactions, iBatis cache concepts.  * Responsible for Building applications using React.js which allowed us to render pages on both the client and server using the same codebase.  * Created the Application using React.JS and Node.js libraries NPM, gulp directories to generate desired view and flux to root the URL's properly.  * For client-side view rendering services, used MockitoReact typically used various predefined Redux libraries.  * Designed the Front-end screens using JSP, Servlets, HTML and JavaScript, Angular JS  * Familiar with Gulp or Grunt task runner to manage project, npm and Bower package manager to install libraries at client side  * Deployed the application in Apache Tomcat.  * Used GIT, SVN as version control and JIRA for bug fixes.  * Involved in creating JUnit based unit test cases as the mocking technique for the objects under test.  * Developed unit test cases for UI using Karma, Jasmine and end to end functional testing using Protractor.  * Used Jenkins for maintaining the build.  Environment: Java 1.8, jQuery, JavaScript, Spring boot, Hibernate, Spring MVC, Spring AOP, JDBC, JSON, Ajax, AngularJS, HTML5, CSS3, SOAP and RESTful Web Services, Maven, Gradle, Core Java, MySQL database, Amazon Dynamo DB, Jenkins, Docker, Agile Scrum, Tomcat server, Vertex, Eclipse IDE, GIT, JUnit, JIRA, Karma, Jasmine, Protractor, TFS, AWS JAVA/UI Developer GE Digital - New Orleans, LA November 2016 to June 2017 Responsibilities:  • Involved in complete development of 'Agile Development Methodology/SCRUM', developed and tested the application during various iterations.  • Involved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, testing, and monitoring.  • Used Maven as build tool and deploying the application.  • Developed the User Interface using spring framework, jQuery and Ajax.  • Developed screens using Angular JS, CSS3 and html5.  • Implemented routing logic and navigation from screen to screen and implemented login functionality on the client side in Angular JS.  • Developed complete solutions in SOA and create process flowsand integrate web services.  • Design and develop financial web applications using Perl, HTML, JavaScript, CSS and SQL.  • Developed reusable and interoperable modules based on SOA architecture in enterprise applications.  • Code analysis (shell scripting and Perl files) for financial processes.  • Execute parallel browser testing on various machines using Selenium Grid and performed cross browser testing.  • Used spring frame work AOP features and JDBC module features to the database for few applications. Also, used the Spring IOC feature to get hibernate session factory and resolve other bean dependencies.  • Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO and PO.  • Used XML/XSLT for transforming common XML format and SAML for Single Sign-On.  • Designed configuration XML Schema for the application.  • J2EE deployment on WebLogic/JBOSS servers - QA & Staging  • Developed various Java beans for performance of business processes and effectively involved in Impact analysis.  • Developed application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.    Environment: Java, Hibernate, spring (AOP, Dependency Injection), XML, Tortoise SVN, Spring MVC, J2EE, JUnit, Maven, Web Sphere, UML, SOA, SOAP, Log4J, Oracle, JavaScript, AJAX, JIRA and RAD. Java/Devops Engineer Verizon - Waltham, MA March 2016 to November 2016 Responsibilities:  * Created use cases, class diagrams, activity diagrams and collaboration diagrams using UML tool.  * The application was developed in J2EE using an MVC based architecture.  * Experience with Core Java component Collection, Inheritance, Multithreading, Garbage collection, and Exception Handling.  * Used Spring MVC framework and various in-house custom tag libraries for the presentation layer.  * Integrated the application with Spring Framework for implementing Dependency Injection and provide an abstraction between the presentation layer and persistence layer.  * Implemented AngularJS service such as $http and UI-router handle AJAX calls to communicate with the Spring MVC controllers and request JSON data from the database layer.  * Performed test Driven Development for the application.  * This Angular Application performed Karma and Jasmine for the unit testing  * Wrote and executed various MYSQL database queries from Python using Python-MySQL connector and MYSQLDB package.  * Wrote prepared statements and called Stored Procedures using callable statements in MySQL.  * Used Hibernate for Database Persistence to perform actions like insert, update, retrieve.  * Used spring core for dependency injections.  * For processing the solution and service, message queue (Rabbit MQ) was implemented.  * Developed Spring Batch application for batch processing using spring.  * Used JavaScript for client-side validations.  * Deployed applications on Tomcat Application server.  * Performed web services testing and debugging using the REST CXF framework.  * For continuous integration testing, Jenkins is used.  * Involved in unit testing using JUnit, system testing and creation of various test scripts.  * Wrote test cases to Test Driven Development (TDD) pattern.  * Built scripts using Maven that compiles the code, pre-compiles the JSPs, built a WAR file and deployed the application on the application server.  * Worked on the project development to complete testing and sending it to the production environment.  Environment: JSP, Core Java, Servlets, Spring Core, Spring MVC, WSDL, SOAP-based Web Services, Apache Axis 2, CXF, Hibernate, MySQL, AngularJS, XML, XSLT, PL/SQL, MySQL, CSS, Eclipse, UML, HTML, Maven, Tomcat server, JUnit, Log4J, SVN. Education Master's in Computer Science in Computer Science Northwestern University 2015 Bachelors of Engineering in Information Technology in Information Technology JNT University 2011 Skills Eclipse, Ejb, J2ee, Java, Hibernate, MVC, Spring, Java J2Ee Additional Information TECHNICAL SKILLS:  Languages: Java, JavaScript, SQL/PL-SQL, C, C++.  Operating Systems: Windows, Unix, Linux, MS-DOS  Java/J2EEEnterprise Technologies: JDBC, Swing, JSP, Servlets, EJB, JSTL, JMS, Spring, Struts, JSF, JPA, Log4j, and LDAP.  J2EE Web Services: SOAP, REST, WSDL, JAX-RS, JAX-RPC, JAXP, JAXB,  Client-Side Programming: HTML5/HTML, CSS/CSS, DHTML, AJAX, JQUERY, JSON  JavaScript Frameworks: AngularJS, node.js, Backbone.js, React.js, Requier.js, Ext JS,ES6  XML Technologies: XML, XSL, XSLT, DTD, XML Schema, SAX, DOM.  Database: Oracle, SQL Server, MySQL, MongoDB, Cassandra, MS SQL  Web and Application Servers: Apache Tomcat, IBM WebSphere, Oracle WebLogic, Sun Glass fish, JBoss.  Methodologies: SDLC, OOAD, Agile.  Tools & IDEs:  Apache ANT, MAVEN, Net beans, Eclipse, RAD, Eclipse IDE, Edit Plus, Brackets, Microsoft Visual Studio, WebStorm, npm, bower, Grunt and Gulp, Webpack.    Testing Tools: JUnit, Selenium, Mockito and Power Mock  Version Control: Clear Case, CVS, SVN, GIT  Continuous Integration Tools: Jenkins, Quick Build, Bamboo  JavaScript Unit Testing Tools: Jasmine along with Karma, protractor.  ESB products Apache Camel, Mule, JBoss fuse.  ORM frameworks: Hibernate, JPA, IBatis, Spring JDBC Template, JDBC