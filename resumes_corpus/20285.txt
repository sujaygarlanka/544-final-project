Team Lead LT-Drive Integration with ICE-Sim (Java) (Jan, 2019 – Present) Team Lead LT-Drive Integration with ICE-Sim (Java) (Jan, 2019 – Present) CAE Simulation/Engine Performance Simulation Engineer & Application Developer-GT - Suite at Ford Motor Dearborn, MI Engineer with interest in AI, Deep Learning and image recognition. Work Experience Team Lead LT-Drive Integration with ICE-Sim (Java) (Jan, 2019 – Present) Ford Motor Company - Dearborn January 2019 to Present § Integrate existing legacy LT-Drive code in Visual Basic with Ford’s Internal Combustion Engine Simulation application framework based on Java.  § Use Test Driven Development to ensure compliance with SonarQube code standards and use Git as a revision control tool and to collaborate with fellow developers. CAE Simulation/Engine Performance Simulation Engineer & Application Developer-GT Suite at Ford Motor - Dearborn, MI 2018 to Present * Employed mathematical models to optimize performance of IC engines.  * Coded these models in MATLAB and FORTRAN programming languages.  * Co-ordinated with the research and IT teams to ensure on schedule deployment of the models. LT-Drive (Light Train Driveline) Application Development, Ford Motor Company(June,2017-Present) Ford M - Dearborn Present § Understand business requirements by interacting with the research team on a regular basis.   § Utilize Rally tool for project planning and tracking.   § Add functionalities to the LT-Drive engineering analysis tool to estimate performance and optimize designs of modern truck drivelines.   § Use SAE Engineering Design manual as a reference guideline for driveline design and governing equations and methodologies.   § Code these methodologies in Visual Basic legacy computer programming language and test the functionality based on available data.   § Follow Agile Methodology of project management to ensure smooth progress and timely deployment of functionalities.   § Package the final version of the code for release to Ford Motor Company researchers and engineer worldwide.  VAC-VMC (Virtual Aluminium Casting-Virtual Manganese Casting) GUI Ford Motor Company - Dearborn Present § Use C++ and Qt development tools for building GUI for VAC-VMC module of the manufacturing engineering tools suite of Ford Motor Company.   §  Interact with researchers and engineers to understand their requirements.   § Based on my engineering knowledge and software development experience, recommend solutions to user’s needs.   § Follow Agile methodology of project management for continuous development and deployment of the tool.   § Plan and track progress of the project using Rally tool.  Team Lead LT-Drive Integration with ICE-Sim (Java) (Jan, 2019 – Present) Ford Motor Compnay - Dearborn Present § Integrate existing legacy LT-Drive code in Visual Basic with Ford’s Internal Combustion Engine Simulation application framework based on Java.  § Use Test Driven Development to ensure compliance with SonarQube code standards and use Git as a revision control tool and to collaborate with fellow developers. Master's Thesis North Carolina State University Applied Aerodynamics Laboratory - Raleigh, NC May 2015 to September 2016 § A Vortex-Lattice method based on Weissinger’s formulation (Weissinger’s Lifting Line Theory) was coded in FORTRAN and MATLAB to simulate inviscid fluid flow around a wing.  § Propeller slipstream flow data, obtained from XFOIL and XROTOR airfoil and propeller analysis tools respectively was input to the above inviscid code to mimic the effect of a propeller upstream of the wing.    § Comparison of results from these simulations with existing CFD and experimental data showed several orders of magnitude reduction in simulation times with a reasonably accurate agreement in the results.  § Preliminary wind tunnel tests were also conducted on a wing model with a separate propeller setup.  § The propeller setup consisted of a mount which was designed using Creo CAD tool and was fabricated in the NCSU specialty trades fabrication shop by the technicians.  § A factor of safety was assigned to the propeller mount while minimizing the surface area and modifying the design to ease the fabrication process.  § Based on the results from the preliminary wind tunnel runs, a modification to the design of the propeller mount was proposed to lower the turbulence in the slipstream induced by the mount. Boeing student project Boeing Student Project 2011 to 2012 Boeing Student Project (Oct, 2011 - April, 2012, Kharagpur, India)                                                                                            § Won the Boeing Student Project for the year 2011-2012 at IIT Kharagpur to design an autonomous MAV.  § Used XFOIL and XFLR5 analysis tools to select an appropriate airfoil shape for the MAV.  § Used Autodesk Inventor to design 3D CAD models for the initial design phase visualization and evaluation.  § Used a new blue XPS foam to build the MAV and used Hot-Wire cutting method to fabricate the MAV within the stipulated design criteria.  § Achieved substantial weight reduction and considerable flight endurance improvement. Behavioral Cloning (As part of Self-Driving Car Engineer Nano-degree, Udacity, 2018) Used Keras and LeNet architecture to clone the driving behavior on a simulated car.  Extended Kalman Filter with Sensor Fusion (As part of Self-Driving Car Engineer Nano-degree, Udacity, 2018) Coded an Extended Kalman Filter in C++ to track an object around a car using RADAR and LIDAR sensor data.   Image recognition on MNIST and Traffic Sign images using Convolutional Neural Networks (As part of Self-Driving Car Engineer Nano-degree, Udacity, 2018) Using TensorFlow implemented LeNet architecture to recognize images from both MNIST digits and traffic sings.  Lane recognition using OpenCV and Python (As part of Self-Driving Car Engineer Nano-degree, Udacity, 2018) Used OpenCV in Python to recognize lane lines in a video from a camera mounted on a car.  Computational Fluid Dynamics NCSU CFD Simulation Study Using Finite Volume and Finite Element Methods (Aug, 2014 – May, 2015, Raleigh, NC)       § Programmed CFD codes in FORTRAN, MATLAB and C++ (from scratch) to solve steady Compressible Euler equations for 2D unstructured meshes at transonic speeds using Finite Element Methods (DG (P0) and flux reconstruction methods) and steady Incompressible Navier-Stokes equations at subsonic speeds for 2D and 3D structured meshes using Finite Volume (Projection and Artificial Compressibility) Methods.   Facebook PyTorch Challenge(2018) § Used PyTorch as part of the Facebook PyTorch challenge and designed an image classifier based on pretrained VGG16 network.   § Coded MLP algorithms for MNIST digits classification.   § Used LSTM to predict sentiment of movie reviews using PyTorch.  Coded a real Self-Driving Car (Carla) (Self-Driving Car Engineer Nano-degree, Udacity, 2019) § As a part of the Udacity’s Self-driving Car Engineer Nano-degree’s final capstone project coded a real self-driving car, Carla.  § Used ROS (Robotic Operating System) to code the necessary nodes for waypoint following, steering and throttle control and traffic light detector and classifier.   § Implemented a PID controller for steering and throttle and used pre-trained SSD model for traffic light detection. Education Master of Science in Mechanical Engineering North Carolina State University 2014 to 2016 B.Tech. in Aerospace Engineering Indian Institute of Technology Kharagpur 2010 to 2014 Skills ANSYS (Less than 1 year), CAE (Less than 1 year), CFD (Less than 1 year), DYNAMOMETER (Less than 1 year), ENGINEER (Less than 1 year) Links https://github.com/ToORAGe https://www.linkedin.com/in/nvkulasekhar/ Additional Information SKILLS                                                                                                                                     § AI Tools: TensorFLow, Keras, OpenCV,PyTorch.  § CAD Tools: SolidWorks, AutoCAD, Autodesk Inventor, Creo/Pro-E, SketchUp.  § CAE Tools: ANSYS, Star-CCM+, SolidWorks Simulation, ANSYS-Workbench, GT-Suite, FLUENT, CFD, Gambit, OpemFOAM(beginner).  § Coding Languages: C/C++, FORTRAN, MATLAB, Python(Jupyter/IPython), Visual Basic, CUDA.  § Visualization Tools: Tecplot, gnuplot, ParaView, CFD-Post.  § Airfoil/Wing Analysis Tools: PROFOIL/MFOIL, XFOIL, XFLR5, AVL, XROTOR.  § Others: MS Office suite, ROS, Git, Accurev, GitHub, SVN, LaTeX, Windows XP/7/8/10 and Linux OS, BOM, Microsoft Visual Studio, Agile Methodology, Qt.     COURSES   Self-Driving Car Engineer Nano-degree, Bayes Filter, Particle Filter, Deep Learning, Localization, Trajectory generation, Motion Planning, A star, Dynamic Programming, Hybrid A star(A*), Recursive Neural Networks(RNN), Convolutional Neural Networks(CNN), Artificial Intelligence(AI), Neural Networks, Computational Fluid Dynamics, Numerical simulation methods, Airfoil Theory, Wing Theory, Blade Element Momentum Theory, Compressible Fluid Flow, Engineering Drawing and Computer Graphics, Wind Tunnel Design and Testing, Aircraft Stability and Control, Strength of Materials, Structural Analysis, Applied Aerodynamics, Thermodynamics, Intellectual Property management, Low Speed Aerodynamics, High Speed Aerodynamics, Finite Element Analysis (FEA), Aircraft Design and Optimization, and Turbulence (Statistical Analysis); 2 Wind Tunnel (Aerodynamics) and 1 Propulsion experimental lab courses, Numerical and Discrete Optimization. 