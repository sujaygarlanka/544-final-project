Senior Python Developer Senior <span class="hl">Python</span> <span class="hl">Developer</span> Work Experience Senior Python Developer Charlotte, NC August 2017 to Present Responsibilities:  • Involved in development of Python based Web Services using REST for sending and getting data from the external interface in the JSON format and perform analysis using Django, PostgreSQL.  • Executed various MySQL database queries from python using Python-MySQL connector and MySQL dB package.  • Created and tested many features for dashboard using python and JavaScript.  • Deployed many Python bugfixes of the two main applications that are main source of data for both customers and internal customer service team.  • Created project designs using MVC architecture components.  • Developed a fully automated continuous integration system using Git, Jenkins, MySQL and custom tools developed in Python and Bash  • Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git.  • Designed and developed Python/Django framework for REST Services.  • Developed web applications, RESTful web services and APIs using Python Django; good knowledge of web services with protocols SOAP, REST.  • Developed Ruby/ Python scripts to monitor health of Mongo databases and perform ad-hoc backups using Mongo dump and Mongo restore.  • Develop consumer-based features and applications using Python, Django, HTML, Behavior Driven Development (BDD) and pair-based programming.  • Developed the application using the Test-Driven methodology and designed the unit tests using Python Unit test framework.  • Managed datasets using Panda data frames and MYSQL. Queried the database queries using Python.  • Develop consumer-based features and applications using Python and Django in test driven Development and pair-based programming.  • Developed and tested many features for dashboard using Python, Bootstrap, CSS, JavaScript and jQuery.  • Used Python based GUI components for the front-end functionality such as selection criteria.  • Developed views and templates with python and Django view controller and templating language to create a user-friendly Website interface.  • Wrote and executed various MYSQL database queries from python using Python-MySQL connector and MySQL dB package.  • Developed Views and Templates with Python and Website interface is created using Django's view controller and template.  • Created Python scripts to automate AWS services which include web servers, ELB, Cloud front distribution, databases, security groups and application configuration.  • Developed Restful Microservices using Django and deployed on AWS servers using EBS and EC2.  • Python Unit test library was used for the purpose of testing many programs on Python and other codes.    Environment: Python, Django, HTML5/CSS, UNIX, MySQL, MS SQL Server 2013, T-SQL, Eclipse, Linux, Shell Scripting, RESTful, MVC, Unix/Linux, VMware, Ansible, MAVEN, C, GIT, Jenkins, Chef, Docker, ANT, Apache. Senior Python Developer Panasonic - Irvine, CA July 2016 to August 2017 Responsibilities:  • Involved in building database Model, APIs and Views utilizing Python, in order to build an interactive web-based solution  • Developed entire frontend and backend modules using Python on Django Web Framework.  • Designed and developed the UI of the website using HTML, XHTML, AJAX, CSS and JavaScript.  • Developed Python batch processors to consume and produce various feeds.  • Wrote Python code to simplify lists in Python with list comprehension and Python OOP. Worked with POSTMAN for API testing. Developed REST APIs and created User Model for application.  • Wrote Python code embedded with JSON and XML to produce HTTP GET request, parsing HTML data from websites.  • Wrote and executed various MYSQL database queries from python using Python-MySQL connector and MySQL dB package.  • Involved in building database Model, APIs, and Views utilizing Python technologies to build web-based applications.  • Wrote code to support model-view-controller (MVC) pattern of Python Django framework in developing several modules for the application.  • Generated Python Django Forms to record data of online users. Used Python and Django creating graphics, XML processing, data exchange and business logic implementation.  • Installed Veritas Cluster Server on Solaris, with Oracle agent. Used Python scripts to update content in the database and manipulate files.  • Worked on Amazon Web Services (AWS) infrastructure with automation and configuration management tools such as Chef and Puppet. Worked on Python Open stack API's.  • Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content.  • Developed entire frontend and backend modules using Python on Django including Web Framework using Git.  • Developed Views and Templates with Python and Website interface is created using Django's view controller and template.  • Performed Python scripting using the module to select daily .xlsx files and then to read and connect those files onto Access. From there, data would be filtered and manipulated to be appended onto a master inventory table    Tools used: HTML, CSS, JavaScript, MySQL, Agile methodology, SQL programming, Python programming, R Programming, Rest, Angular, GitHub, HTML5/CSS, PostgreSQL, Amazon Web Service (AWS), EC2, EBS, Microsoft Visual Code, Linux, Shell Scripting, JIRA. Python Programmer Zenith American Solutions - Dallas, TX April 2015 to July 2016 Responsibilities:  • Designed and developed the UI of the website using HTML, AJAX, CSS and JavaScript.  • Used Python and Django to interface with the jQuery UI and manage the storage and deletion of content.  • Worked on Machine Learning models and Computer Vision applications involving extensive use of Python programming.  • Implemented Model View Control architecture in developing web applications using Django frame work.  • Worked on Python OpenStack APIs and used NumPy for Numerical analysis.  • Involved in the design and maintenance of the databases using Python and Python based API using SQL and PostgreSQL.  • Builds SQL, NOSQL queries implementing functions, packages, views, triggers, and tables.  • Using Amazon SQS to queue up work to run asynchronously on distributed Amazon EC2 nodes.  • Developed views and templates with Python and Django's view controller and templating language to create a user-friendly website interface.  • Used Test driven approach for developing the application and Implemented the unit tests using Python Unit test framework.  • Cleaned data and processed third party spending data into maneuverable deliverables within specific formats with Excel macros and python libraries.  • Collaborated with other developers on best practices, code reviews, internal tools, and process improvements.  • Worked on projects involving writing and as well as reading data from CSV and excel file formats using Python  • Translated and refactored various old C codes into Python scripts based on various metrics such as efficiency, throughput, and functionality of each project.  • Created various RESTful web services with Django MVT, MySQL, and MongoDB.  • Worked with databases such as MongoDB touching concepts not limited to locking, transactions, indexes, sharing, replication, and schema design.  • Involved in the development of various Python APIs which work both in Linux as well as Windows, and maintaining them using the Revision Control GIT Repository System  • Several queries were written using SQL for the manipulation of the data from the database, and the database was created using MYSQL  • Worked with Python to manipulate data for data loading and extraction utilizing various Python libraries like SciPy, NumPy and pandas for the data analysis  • Restful web services using Python REST API Framework Implemented the application using Python Spring IOC (Inversion of Control), Django Framework and handled the security using Python Spring Security.  Environment: Python, Django Web Framework, HTML, CSS, Oracle, NoSQL, JavaScript, jQuery, Sublime Text, Jira, GIT, PyBuilder, unit test, Firebug, Toad, Web Services. Python Developer Juniper Networks - Los Angeles, CA May 2013 to March 2015 Responsibilities:  • Developed Python with Django for the backend development and front-end application using Angular and PostgreSQL for the database.  • Used Django/ Python web-framework to develop application.  • Implemented various Validation Controls for form validation and implemented custom validation controls using Object Oriented JavaScript.  • Wrote Python code to simplify lists in Python with list comprehension and Python OOP. Worked with POSTMAN for API testing. Developed REST APIs and created User Model for application.  • Developed views and templates with Python and Django's view controller and templating language to create a user-friendly website interface.  • Developed and tested many features for dashboard using Python, Bootstrap, CSS, and JavaScript.  • Carried out various mathematical operations for calculation purpose using Python libraries NumPy and Pandas.  • Built some frameworks which allow writing scripts in python, which will send and receive data over serial port to communicate with device firmware.  • Involved in building database Model and Views utilizing Python, to build an interactive web-based solution.  • Experience in using Python to check for errors in Python code, tries to enforce coding standards and get details about code complexity.  • Developed Network modules, Socket programming and Web server hosting capabilities of Python for some applications (ex. IoT devices)  • Analyzed various logs that are been generated and used various Python libraries to predict/forecast next occurrence of event with various Python libraries.  • Wrote Python scripts to parse JSON documents and load the data in database and used python scripts to update content in the database and manipulate files.  • Build back-end application with Python / Django, Worked on Dockers, RabbitMQ, Celery, and Jenkins.  • Developed Python classes and used decorated methods to create the dependency graphs for the business logic and core applications that are pre-built using C.  • Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of Python code using a web browser.    Environment: Python 2.7, NumPy, Dockers, Pandas, JSON, Oracle DB, MySQL, DB2, PL/SQL, Linux, HTML, XHTML, CSS, AJAX, JavaScript, Apache Web Server, Django 1.4