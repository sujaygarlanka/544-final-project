Java Developer <span class="hl">Java</span> <span class="hl">Developer</span> Java Developer - Tesla • Over 5+ years of IT experience in all phases of Software Development Life Cycle (SDLC) such as Planning, Analysis, Design, Implementation, Testing and Maintenance of Web Based, Client-Server and N-tier Architectures in domains like Telecom, Insurance etc. Wide knowledge and proven experience in web development and maintenance. A self-starter, quick learner and capable of working independently to achieve milestones and deadlines. Adept at prioritizing, tracking and completing tasks to accomplish project goals.  • Proficient in designing and developing software applications with the JDK, J2EE, EJB, Annotations, Java, JSP, Servlets, Java Beans, JNDI, AJAX, JMS, ORM, JNDI, Web services, JDBC, JAXP, RMI, XML, JavaScript, JQuery, CSS, Web Services (SOAP & RESTful).  • Worked on Java 8 upgrade using new library for refactoring, lambda, functional interfaces, streams -parallel processing and aggregations.  • Proficient in working on various Spring modules (Spring Core, Spring IOC, Spring MVC, Spring DAO, Spring Boot and AOP, Batch, cloud, security) along with Hibernate and JPA as the back-end ORM tool for implementation of persistence layer and mapping of POJOs.  • Expertise in a fast-paced Agile Development Environment including Test-Driven Development (TDD) and Scrum and SAF. (Scaled Agile Framework)  • Proficient in Java/J2EE Design Patterns including singleton, Factory, Model View Controller (MVC), Data Access Object (DAO), and Business Delegate. Well versed with core Java concepts like collections, multithreading, serialization, Java beans.  • Expertise using Spring Boot, which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration.  • Expertise as a User Interface/Front End Developer in developing web applications using HTML, XML, CSS, Java Script, JQuery, AJAX, AngularJS.  • Proficient in developing JEE based Web Services to expose useful functionality to web users through SOAP, describing them using WSDL, registering them using UDDI for easy availability to potential users and consuming using Axis2, Apache CXF and JAX-WS.  • Expertise in using different modules like Spring Core Container Module, Spring Application Context Module, Spring MVC Framework module, Spring AOP Module, Spring ORM Module etc. in Spring Framework.  • Proficient in Object-Oriented Analysis and Design (OOAD), ERD documentation, UML artifacts modeling with Rational Rose and Enterprise Architect. Applied the requirements engineering, analysis, and design disciplines of the RUP to J2EE projects.  • Expertise in writing numerous test cases using JUnit framework with JPROB integration.  • Implemented various levels of application and services using Spring-Framework, EJB3 Struts and ORM tools like Hibernate, IBatis, and MyBatis for fast pace and efficient code generation.  • Expertise working with databases such as Oracle, MS-SQL Server, MySQL and using PL/SQL to write stored procedures, functions and triggers for different Data Models.  • Expertise in database related work primarily creating complex stored procedures, Views, Triggers, Functions, using PL/SQL.  • Expertise in Configuration Management, setting up company Version policies, build schedule using Gitbash and Tortoise git.  • Expertise working on Application servers and Web servers like WebSphere, WebLogic, JBoss and Apache Tomcat.  • Strong experience on Hibernate and in using Hibernate Connection Pooling, HQL, Collections, Hibernate Caching etc.  • Implemented XML and related technologies like XSL, XSTL, XPATH and parsers like JAXP (SAX, DOM) and JAXB.  • Experience in spring framework (MVC) and Struts (MVC Architecture, interceptors, action mappings and resource bundles).  • Good knowledge in deploying applications on web servers like Apache Tomcat, Glassfish and IBM WebSphere.  • Hands on experiences with Core Java with Multithreading, Concurrency, File Handling I/O, Generics, Data Structures and Collections and Garbage Collection. Work Experience Java Developer Tesla - Palo Alto, CA October 2018 to Present • Involved in various phases of Software Development Life Cycle (SDLC) of the application like Requirement gathering, Analysis, Design and implement the design in Agile (Scrum) methodology.  • Developed single page applications, components using AngularJS directives, controllers, view and routing, service modules.  • Worked on IDEs such as Eclipse, RAD, IntelliJ, STS and JBuilder for developing, deploying and debugging the applications.  • Developed Cloud Compatible Micro Services using Spring Boot, java and related web technologies  • Good Knowledge in Apache kafka message implementations and their integrations with the systems as well as creating VM's and creating instances for every virtual machine.  • Involved in writing the J-Unit test cases dor DMaap-MR-Client and checking the code coverage in sonar.  • Good knowledge in Java 1.8 (including Lambda Expressions, Java Stream API, Default and Static Methods in Interfaces.  • Implemented Java 1.8 features including Lambda, advanced map and for Each functions and Streams as well as developed AWS Lambda function to send a request for internal service end points through API Gateway using apache HTTP Client.  • Implemented the various services using Micro services architecture in which the services work independently.  • Used Spring framework AOP features and JDBC module features to persist the data to the database for few applications.  • Developed the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO.  • Integrated, modulated as well as deployed of the various modules over Service Oriented Architecture (SOA) using JMS, Restful Webservices and Micro Services using Spring Boot.  • Involved in designing and developing the JSON, XML Objects with MySQL and NoSQL database like MongoDB.  • Used Spring Security and OAuth2.0 for Authentication and Authorization of the application.  • Developed various helper classes following Core Java, Multithreading programming and Collection classes.  • Performed deployment of applications on WebSphere Application Server.  • Responsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins  • Developed test cases using JUnit and developed the build scripts using Maven.  • Actively used the defect tracking tool JIRA to create and track the defects during QA phase of the project.  • Used GIT and Tortoise git to maintain the version of the files and Eclipse as IDE, took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.  • Worked on Mongo dB database concepts such as locking, transactions, indexes, replication and schema design.  • Configured mongo-connector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster.    Environment: Java8, Agile, AWS, Microservices, ActiveMQ, Core Java, Multithreading, HTML5, CSS3, JavaScript, Bootstrap, AngularJS, Spring AOP, Spring JDBC, Spring DAO, Spring Security, OAuth2.0, Spring Boot, MySQL, MongoDB, Hibernate, SOA, RESTful Webservices, WebSphere Application Server, UNIX, Junit, Jenkins, JIRA, IntelliJ IDE, Maven, GIT. Java Developer Amazon - Seattle, WA August 2017 to September 2018 Actively involves in various phases of Software Development Life Cycle (SDLC) such as Design, Analysis, Development and Testing.  Actively participated in the daily SCRUM meetings with our team to produce quality deliverables within time.  • Worked on various XML technologies i.e., writing DTD, Schema, Namespaces, XSL, Xpath, XQuery, XHTML and SAX, DOM, JDOM parsers.  • Implemented Micro Services based Cloud Architecture using Spring Boot.  • Involved in using Java like Collections, Exception Handling, Multi-Threading, Serialization and Java 1.8 features like Lambda expressions, Stream API, and Method references.  • Designed and developed Microservices business components and RESTful service endpoints using spring boot.  • Implemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.  • Implemented first-hand the best/worst practices for integrating Micro Services into existing system architecture.  • Micro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features.  • Used Pivotal Cloud Foundry to deploy Micro Service applications.  • Designed and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions, Spring JDBC, Couch Base.  • Implemented Batch jobs using Spring Batch created various item readers, item writers and item processors.  • Involved in support for end to operations support for OSS/BSS (Business Support System) identify gaps and propose solutions and manage issue resolution.  • Extensively worked on Drools Rules Engine for writing business rules validation and externalization of parameters.  • Validations are done using SoapUI and Ready API testing tool framework in different environments.  • Developed user interface using JSP, JSP Tag libraries, third party libraries and Java Script to simplify the complexities of the application  • Used Couchbase Server is specialized to provide low-latency data management for large -scale interactive Web Applications.  • Designed services to store and retrieve user data using MongoDB database and communicated with remote servers using REST enabled Web Services on Jersey framework.  • Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs using Jenkins, SVN, JUnit and Maven.  • Deployed the application on to Apache Tomcat Server. Written JUnit Test cases for perform unit testing and tested web services with REST Client.  • Used Maven, ANT and Jenkins to deploy automated builds in different environments.  • Used Rally for tracking the user stories and Bitbucket as a version control tool. Created Swagger API for control flow.  • Wrote services to store and retrieve user data from MongoDB for the application on devices.  • Used Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts  Used Spring Tool Suite (STS) IDE tool for application development.    Environment: Spring, Spring Boot, Spring Security, Spring batch, Servlets, XML, Tortoise SVN, JSP, Spring MVC, JDBC, CouchBase, JUnit, Gradle, MongoDB, Rally, Web Sphere, JMS, Jenkins, RESTful, SoapUI, Ready API, Micro Services, JavaScript, HTML, ALM, Agile Methodology, AngularJS, AJAX, Log4J, SOAP, WSDL, Spring Security, STS. Java Developer Mc Donald's Corporation - Chicago, IL September 2016 to June 2017 • Involved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.  • Involved in the front end using JSP, HTML, CSS, jQuery and Angular JS as well as Java Servlets were used as the common gateway interface between the client and server.  • Implemented MVC architecture using JSP, Spring and Hibernate and used Spring Framework to initialize managed beans and services.  • Worked closely with the Middleware and System Administrators in providing technical expertise from the development and implementation perspectives, especially with NodeJS Web and Tomcat servers.  • Developed REST APIs using Scala and Play framework to retrieve processed data from Cassandra database.  • Designed and developed the DAO Layer using Hibernate/JDBC template, using Spring Boot.  • Developed responsive UI layer utilizing Semantic HTML, REST API architecture. Developed front end for the entire website using HTML5, CSS3, and JAVASCRIPT.  • Involved in designing user screens and validations using HTML 5, jQuery and JSF as per user requirements.  • Extensively used Java features such as Lambda Expressions, Parallel operations on collections for effective sorting mechanisms and new Date Time API.  • Used Spring AOP for logging, auditing, transaction management to distinguish business logic from the cross-cutting concerns.  • Involved in batch processing using Spring Batch framework to extract data from database and load into corresponding Loan App tables.  • Used Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework.  • Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria.  • Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files.  • Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects.  • Developed applications in AngularJS and deployed into development, test and production environment successfully as well as Involved in Maintenance and Enhancements for the project.  • Created data model and generated Hibernate mappings and domain objects using Hibernate tools.  • Interfaced with the MySQL back-end database by integrating Spring with Hibernate.  • Extensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database.  • Implemented quartz jobs for running the batch jobs based on the crone triggers configured in the spring files.  • Developed the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN).    Environment: HTML, CSS, JQuery, AngularJS, JSP, Hibernate, Spring MVC, Spring AOP, Spring Security, Apache Camel, SOAP, WSDL, JAX-WS, Log4j, Web Services, WebSphere Application Server, MySQL, IntelliJ, Gradle, JUnit, JIRA, SVN. Java Developer Accenture - IN October 2015 to August 2016 • Involved in Scrum meetings, Sprint planning and estimation of the tasks for the user stories.  • Involved in various SDLC phases like Requirement gathering, Design, Analysis and Code development.  • Familiarity with Netflix OSS cloud services such as Eureka, Hystrix, Ribbon and Zuul.  • Diverse experience utilizing tools in N-tier and Microservices architecture applications using Spring Boot, Spring Cloud config, Netflix OSS components (Eureka, Zuul, Hystrix), AWS, Cassandra, My SQL, Restful Web Services.  • Used Java8 features like stream and Lambda expressions.  • Applied Spring Circuit Breaker to potentially-falling method calls using the Netflix Hystrix.  • Zulu uses Netflix Ribbon to look up for all instances of the service from the service discovery (Eureka Server)  • Working with Node.js as web server created a highly scalable server, Creating non-blocking functions.  • Using Express Framework to set up middleware to respond to the HTTP requests with the help of Node JS.  • React/Redux layer requests the template through CDN which caches the templates for a specific period.  • React has component-based approach to UI development and is comparatively faster due to its diffing algorithms which use Virtual DOM to handle re-paints to the webpage.  • Used Spring-Cloud to bring up an instance of Eureka and also created set of cloud microservices.  • Used a Microservice architecture, with Spring Boot based services interacting through a combination of REST and RabbitMQ message brokers.  • Used Spring Annotations to simplify the business logic for creating Spring MVC RESTful webservices.  • The product API's, Category and bunch of Browse API's caching is done in Redis by getting data from WCS.  • Implemented MVC architecture with React components as Views, models, and controllers in Node.js for API development.  • Implemented a stream filtering system on top of RabbitMQ to reduce stream size.  • Splunk support for multiple types of devices, such as workstations, servers, network devices, virtual machines, mobile, and Internet of Things (IoT) devices.  • Service-now used to raise the incidents and work on the incidents related to customer.  • Used Git, Bitbucket as part of version control system for code check-ins.  • Used JIRA tool for tracking stories progress and follow agile methodology.    Environment: Java, JDK, Servlet, Struts, XML, JUnit, JPA, AJAX, JSP, DHTML, CSS, Web Services, EJB, REST, JSON, Oracle, UML, JDBC, DAO, Eclipse, Log4J, CVS