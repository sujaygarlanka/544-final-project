Sr. Java/J2EE Developer Sr. Java/J2EE <span class="hl">Developer</span> Sr. Java/J2EE Developer - US Bank • Over 8 years of experience in developing Web-based Applications, Enterprise Applications and Client Server Applications in JAVA/J2EE environment coupled with RDBMS exposure in n-tier applications.  • Involved in complete SDLC life cycle of this project includes POC (proof of concept), Design documents, Development, testing and production  • Strong experience in Spring Framework (Core, Boot, MVC, AOP, Test, REST, Security, Data and Transaction)  • Extensive experience in Web application development using JDBC, Servlets, JSP, JSTL, Java Beans, MVC, Struts, JSON, Swing, RMI, EJB, JSF, JNDI, JMS, SOA, SOAP, Spring, Hibernate, MyBatis, JavaScript, Angular Js, AJAX, JAX-RPC, XML and HTML. Experienced in Multi-threading and Concurrent Programming.  • Have good understanding on JavaScript frameworks like angular js and backbone js.  • Experience in Object Oriented Design, analysis with solid analytical, problem solving and decision-making skills.  • Proficient in development of applications using JAVA and J2EE technologies with experience in JSP, Servlets, Struts and Hibernate frameworks.  • Experience using design patterns including MVC, Singleton, Frontend Controller, Service Locator, and Decorator.  • Experience in developing applications using Software Methodologies like Agile, Waterfall Iterative Development.  • Solid understanding of Data Structures, Algorithms and Object-Oriented design concepts, UML (Use Cases, Sequence and Class diagrams) Rational rhapsody.  • Used SOLR Dependency Injection (DI) or Inversion of Control (IOC)  • Wide experience in Core Java, JavaScript, JSP, Java Beans, Angular, Servlets, Ajax, JQuery, JDBC, XML, CSS, XHTML, HTML. Extensive experience in XML related technologies such as XML, XSL, XHTML, XSLT, and JAXB.  • Experience in using the databases such as MySQL, MS SQL Server, DB2 and Oracle 9i/10 g /11 g.  • Good Understanding of RDBMS through Database Design, writing queries and stored procedures using databases like Oracle and SQL Server.  • Experience in deploying systems on Amazon Web Services (Amazon EC2, Amazon S3, Amazon RDS)  • Developed and deployed J2EE applications on both Web and Application Servers including Apache Tomcat, Web Logic, JBoss and IBM Web Sphere.  • Experienced in writing Server-Side Components - Enterprise Java Beans (EJB) Session and Entity Beans, Remote Method Invocation (RMI) for distributed computing applications, access remote servers and invoking database with Java Database Connectivity (JDBC). Thorough knowledge in Unit testing with JUnit 3.8/4.0.  • Experience in working with Ant, Maven and Gradle as Dependency Management and build tool in single module and multi module environment. Possess excellent leadership qualities and has good problem-solving capabilities. Efficiency in management skills, communication and ability to work under strict deadlines. Work Experience Sr. Java/J2EE Developer US Bank - Denver, CO January 2017 to Present Responsibilities:  • Participating in Requirement Analysis and technical assessment during project life cycle.  • Used Agile methodology and attended daily and weekly SCRUM meetings to update working status etc.  • Developed application UI screens using HTML5, CSS3, JavaScript, Bootstrap, Babel, Redux and NodeJS.  • Created reusable components used across various modules using ReactJS and JSX.  • Involved in creating REST services using Node-JS, Express-JS, Mongoose and Body-Parser NPM modules.  • Created views to hook up models to the Document Object Model (DOM) and synchronize data with the server as a single page application (SPA) using React JS and used Webpack as the module bundler.  • Used Redux-Promise in application to retrieve data from Back-End and to also perform RESTFUL services.  • Developed Redux actions, store and reducer functions to implement unidirectional data flow in the application.  • Used NodeJS to run Grunt tasks and build properly the project (compile, minify etc.)  • Extensively used factory object in NodeJS to use the common functions in different views.  • Used Scala templating for rendering standard markup on pages along with UI builds made with ReactJS on nginx  • Analyzed the SQL scripts and designed the solution to implement using Scala.  • Used J2EE design patterns like MVC, Singleton, Factory, DAO, DTO and Service Locator etc.  • Developed RESTful web services using Jersey, Spring framework and JAX-RS.  • Created REST based web services by establishing links using HATEOAS from Spring based application.  • Used Spring core for dependency injection/inversion of control (IOC), and integrated with Hibernate.  • Spring Boot Microservices were developed with microservice architecture using REST and Apache Kafka.  • Installation, configuration, and administration of JBOSS EAP 5/6 in Red Hat Linux environment.  • Built JBOSS scalable, high availability clustered Platform architecture  • Monitored service health check from Spring Boot admin console using swaggered UI registered micro services.  • Performed Load Balancing among the servers was implemented by using Spring Ribbon.  • Implemented Fail Safe and circuit breaker patterns in Spring Boot Micro Service applications using Hystrix  • Developed Apache Camel Routes for mediation and used various Enterprise integration patterns to connect to other systems and used Spring JPA transaction manager to manage transactions in the application.  • Used Eclipse based Spring Tool Suite (STS) for development and debugging Spring Boot applications, Microservices and deployed in to (Amazon Web Services) AWS lambda Expression.  • Enhanced existing REST Application Program Interface (API) by adding new operations using Spring, Jersey and created documentation for webservices using Swagger.  • Provided cloud environment for Microservices using Spring cloud Netflix (Eureka server)  • Designing and developing Online client windows API using Swing classes.  • Deployed Docker contained Spring boot micro services in to spring EC2 container service using AWS admin console and used lambda to run applications in Amazon Web Services (AWS) console.  • Experience with building Docker Images and running them on Docker container.  • Worked with Apache Tomcat 8 and NodeJS servers to deploy and configure Java API's and front-end modules.  • Experience with KORN based scripts for triggering UNIX and J2EE based tasks.  • Uploaded files in to Oracle database using CLOB and BLOB.  • Loading data from flat files into Oracle 11g database using SQL loader and UNIX script  • Used HQL, Named Parameters, Named Queries and Interfaces such as Expression, Query and Criteria for implementation of Hibernate template and extensively used Hibernate Cache.  • Experience on Hibernate mappings, EH cache, Lazy loading transactions and Lockings.  • Used MongoDB third party tools and mongo-built in binaries to monitor and analyze the performance.  • Created Test automation framework using Selenium web driver.  • Configured Protractor test classes and Selenium grid end to end testing on the front end.  • Worked with several testing frameworks such as JUnit, Easy Mock, Mockito and Power Mock.  • Used JUnit for unit testing and implemented with Log4j to provide logs of exceptions.  • Helped provision and manage AWS Linux servers with Ansible.  • Developed Python OO Design code for logging and debugging code optimization.  • Used Redis for creating background jobs, placing those jobs on multiple queues, and processing them.  • Using Jenkins and Glu for building and deploying the projects and worked on Stash GIT repository software.  • Used Maven for build and deployment to Tomcat server and Splunk as log monitoring.  • Involved in code reviews and unit testing using JUnit framework.  • Used Drools engine for validating business rules before executing in runtime.  • Used Git for version control and JIRA for bug Tracking and Project Management.  Environment: Java 8.0, Spring 4, Hibernate 4.2, Spring Boot, JPA, JavaScript, ReactJS, Scala, HTML 5.0, CSS3, Node.js, ReactJS, Bootstrap, Require.js, Jade, NPM, Babel, Web pack, Swing, Python, UNIX, Apache Tomcat, STS, Oracle 11g, MongoDB, Log4J, JUnit, Easy Mock, JBPM, Selenium, XML, Web Services, SOAP UI, Kafka, Netflix Eureka, Spark, Netflix Ribbon, Ansible, Splunk, AWS, Gradle, Git, PL/SQL, Docker, HATEOAS, Curl. Sr. Java Developer John Deere - Boston, MA April 2016 to December 2016 Responsibilities:  • Involved in preparation of the technical design documents including class diagrams, Sequence diagrams, flow charts, process flow diagrams etc.  • Involved in Agile - Sprint methodologies to do requirements gathering, analysis and planning, development & testing. Code written in Java with features like Collections, Exception Handling, Serialization.  • Strong understanding and excellent skill in developing, designing, professional, Ajax driven elegant enterprise web application using Ajax, Flex, Action Script and JavaScript, CSS, HTML, Custom Tag Libraries, JSF, JQuery, Dojo, ExtJs and various java design patterns.  • Developed UI pages using HTML, CSS, Java Script, JSP, jQuery, JSTL Taglibs and JSON.  • The project involved extensive use of the different spring framework features including Spring ORM and Spring Templates. Involved in the Configuration of Spring services in applicationContext.xml.  • Implemented the application using Spring IOC, Spring MVC Framework, Spring Batch, Spring Boot and handled the security using Spring Security.  • Written java classes for developing user interface by using OOPS concepts, multi-threading, inheritance, polymorphism and collection API.  • Used Spring for business layer classes. Involved in developing code for obtaining bean references from Config file. Experience in Hibernate which includes integrating legacy databases, writing custom CRUD.  • statements, integrating stored procedures and functions and performed polymorphic associations.  • Designed and developed logging components using Apache Log4J to log messages and errors.  • side changes followed coding guidelines while implementing the application.  • Used Scala templating for rendering standards markup across all the pages along With UI builds made with ReactJS. Used Apache CXF to develop REST Service and SOAP UI for testing web service for server.  • Proficient in developing Web Services, related technologies & frame works: WSDL, SOAP, REST, AXIS and Jersey, SOAP UI and generating client's client using Eclipse for Web Services consumption  • Worked on variety of Frontend JavaScript frameworks like AngularJS, BackboneJS, ReactJS, JQuery, JQuery UI and good knowledge in EmberJS.  • Written SQL script and executed in Oracle 11g database. Used SVN and GIT for source code version control.  • Designed and developed UI screens using Struts 2, DOJO, JavaScript, JSP, HTML, DOM, CSS, and AJAX.  Environment: Java, Servlets, JNDI, HTML, JavaScript, CSS, XML, DOM, XSD, XSLT, AJAX, JQUERY, JAXP, JAXB, Spring IOC, Spring MVC, Spring AOP,Springboot, Spring cloud, Camunda BPM, DOJO,Hibernate, HQL, RAML, MMC, Active MQ, Apache CXF, JAX-WS, Jenkins, Jboss server, EMMA, SVN, JUNIT, log4j, Maven, Docker, sprint, scrum, Oracle 11g.  Sr.Java Developer  Responsibilities:  • Involved in various phases of Software Development Life Cycle (SDLC) and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.  • Developed UI using HTML5, CSS3, JavaScript, Bootstrap, JQuery, Angular JS and Node JS.  • Built AngularJS modules, controllers, pop up modals, and file uploaders.  • Created reusable directives, factories, and services in AngularJS.  • Used Backbone.js and ReactJS to create Controllers to handle events triggered by clients and send request to server. Involved in writing Java API for Amazon Lambda to manage some of the AWS services.  • Used plug-in development for RCP version for developing the layouts like Grid Layout and Fill out for RCP.  • Designed and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions, Spring HATEOAS and Spring JDBC.  • Implemented the authentication and authorization of the application using Spring Security and Oauth2.  • Designed and developed Microservices business components and RESTful service endpoints using Spring boot.  • Implemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.  • Implemented first-hand the best/worst practices for integrating Microservices into existing system architecture.  • Microservices were being used as a strategy to gradually replace a core monolithic application while still adding business features. Prepared calls through Hibernate and Spring JDBC for Interacting with the Database.  • Worked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.  • Implemented Multithreading, Concurrency, Exception Handling, and Collections whenever necessary.  • Experienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances. Participated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments.  • Participated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.  • Worked Docker container management along with volumes, container based DB and services, Docker Artifactory configuration and setup. Worked with Spring Ribbon and Kafka broker service to handle heavy traffic.  • Experience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Oracle DB. Installed and deployed monitoring solution with Splunk services.  • Performed data extraction and loading the JSON data with the server-side content in to the Mongo DB.  • Configured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server.  • Used Active MQ to communicate with controller and used service layer to implement the business logic.  • Implemented Batch jobs using Spring Batch created various item readers, item writers and item processors.  • Involved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution. Used UNIX shell scripts to search/modify files.  • Validations are done using SoapUI and Ready API testing tool framework in different environments.  • Deployed and tested the application on Web Sphere Application Server.  • Developed test cases for unit testing in the integration layer using Mockito framework.  • Setup the (CI) and (CD) process for the application using the Jenkins.  • Implemented configured and customized JIRA issue tracking software with agile plug-in across all company functions. Worked on Log4J to validate functionalities and JUnit for unit testing.  • Used GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.  Environment: Java1.8, J2EE, HTML5, CSS3, Bootstrap, JQuery, Angular JS, ReactJS, JavaScript, Node JS, Eclipse Rich Client Platform, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring HATEOAS, Spring Data, Hibernate, Active MQ, RESTful, Postman, SOAP, Micro Service, AWS, EC2, Docker, Mongo DB, Oracle DB, Maven, STS, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT. Sr. Java/J2EE Developer United Health Group - Minnetonka, MN November 2013 to November 2014 Responsibilities:  • Created use case diagrams in UML using Rational Rose.  • Re-engineered the application with screens in JSP based on Struts framework  • Involved in design applications using J2EE. This architecture employs a Model/View/Controller design pattern  • Participated in Agile and having daily SCRUM meeting for progress reporting and task distributing.  • Involved in Core Java coding by using Java APIs such as Collections, Multithreading, Exception Handling, Generics, Enumeration, and Java I/O to fulfill the implementation of business logic.  • Configured the xml files for Open Source Spring 3 Framework to fulfill the Proxy Pattern.  • Configured the xml files for Hibernate 3 and applied its ORM to enable the data transactions between POJO and Oracle Database using caching on SessionFactory as well as caching on query.  • Responsible for the overall project development of Fund module Flex4.1 version wrote the CRUD operations of Mutual Funds and Financiers list using iBATIS and DB2.  • Developed XML files, DTD's Schema's and parsing them by using both SAX and DOM parser's  • Wrote roll out procedures and plans. Environment was mixed with Windows and XML, Hbase, NoSql, XSLT.  • Developed Web Applications using HTML and parsed data in XML format using SAX and loaded into database.  • Responsible for creating complex SQL queries, stored procedure and analyzed the tables in MySQL database.  • Developed front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object from controllers in back-end RESTful Server, then display the well-organized result in web pages by writing AngularJS controller, directives, services, route providers and filter to make the data searchable and sortable.  • Worked with NoSql Databases like Apache Cassandra, Mongo DB and Dynamo DB.  • Used a custom framework sitting on the top of Nodejs and has used a lot of Clients side JavaScript plug-ins  • Developed Form/Java Beans, Spring Controller Classes and configured with the corresponding JSP pages  • Used Spring tag library for form data binding, themes displaying validation errors.  • Integration of Spring Portlet Framework with the Flex based custom components.  • Used Hive QL, Map Reduce, Cassandra bulk loads, Java Web services, UNIX Shell Scripts, Active MQ's.  • Used Spring Inversion of Control and Transaction Management in the GUI for Maintenance Screens.  • Designed and Developed the UI using PrimeFaces JSF libraries and Javascript  • Designed REST API for logging front end errors occurring in Angular JS, Tableau dashboards and those logs were harvested and reported through Elastic search tools.  • Extensively used the JSON objects with AJAX for UI displays.  • Automated AWS deployments with shell/Ant scripts, and connected test environments with hosts used for builds. Creating Stored Procedure and fine tuning the existing procedure to handle huge amount of transaction.  • Worked on Spring Quartz for scheduling tasks like generating monthly reports/policies for customers.  • Trace errors in the Glassfish Server log files to find the location of an existing problem.  • Involved in configuring Hibernate mapping files/annotations and POJO objects.  • Used Hibernate Transaction Management, Hibernate Batch Transactions, Hibernate cache concepts.  • Developed data abstraction layer using Hibernate ORM with spring support, and JDBC driven components.  • Designed and developed Restful Web services using spring framework.  • Data communication between various events in the ordering and fulfillment systems is developed using SOAP.  • Designed, Developed and Implemented document transformation applications using XML Spy tool.  • Used Bootstrap to create a responsive website that fit all users and devices from desktop to tablet, mobile phone. Developed Stored Procedures and triggers for database intensive tasks  • Created indexes and referential constraints for performance and data integrity.  • Log 4J was used to monitor the error logs and used GIT as version control tool.  • Extensively worked on performance tuning of SQL Queries to improve the performance of the daily and monthly jobs. Used JUnit for Unit testing and Maven for build.  Environment: J2EE, Java, Spring framework, Spring MVC, JSP 2.0, JSF, Servlets 2.3, Hibernate, AJAX, Web services, AWS, SOAP, XML, Java Beans, Angular JS, Knockout JS, XStream, UNIX, iBATIS, Glassfish, Apache POI, Ext JS, jQuery, JavaScript, Oracle 11g, IBM RAD, NoSQL, Websphere 7.0, Agile Methodology, Design Patterns, REST, Apache Camel, CVS, Mongo DB, Apache Maven, JUnit, HTML, Unit Testing, XSLT, HTML/DHTML. Java/J2EE Developer King Fisher Airlines - Bengaluru, Karnataka June 2012 to October 2013 Responsibilities:  • Prototyped, designed and developed CCIS application framework complying with SOA architecture. This was reused in many of new applications/projects in CCIS department significantly reducing time/cost.  • Created MULE ESB artifact and configured the MULE config files and deployed.  • Used Angular JS for client while server validation through Expression Language.  • Built, published and consumed REST web services supporting both XML and JSON to perform tasks such as appointment cancellation, technician job management for DispatchTechIVR and Call Reduction modules.  • Developed SOAP web services for TSG UI and Outage Board applications.  • Used JAXB for marshalling and unmarshalling of Java objects to XML and vice versa.  • Used SOAP UI tool for testing and Liquid XML editor to validate XML documents against XSD's.  • Used Jquery, Angular JS, JSP, Javascript, HTML, CSS and JSTL for the frontend modules of TechIVR  • Provided the support for integrating the RESTful web services with clients  • Performed unit testing using JUnit and Integration testing using IVR system.  • Invovled in creating Restful web services using JAX-RS and JERSEY tool.  • Developing the orchestrating of service through ESB calls to provide API's to the service portal.  • Applied OO design concept and design patterns such as DAO, Singleton, Factory, Business Delegate and Service Locator to improve the existing Java/J2EE based code base.  • Re-architected, refactored, and performance tuned a WebLogic and J2EE based CCIS call Reduction application, which previously came down almost daily, became a true 24x7 application at CCIS.  • JBOSS ESB development and providing necessary inputs to the service portal.  • Multitasked by gathering business requirements from user, duration and feasibility of requests and working on other projects by resolving issues.  Environment: Java, J2EE, Junit, JDK 1.5, Spring core, Spring MVC, Hibernate, SOAP/Rest Web services, Ajax, XML, jQuery, HTML, CSS, TCServer, SVN, Maven, Jenkins, Splunk, SFX, MAX, SEED. Oracle Software Developer Tata Docomo - Hyderabad, Telangana October 2010 to May 2012 Responsibilities:  • As a team member, understood the Business, Design, Development and Testing for Closing and Funding Module.  • Involved in System design using UML (Use case, Class and Sequence) diagrams created using Rational Rose.  • Involved in project migration using Struts 2.0 web framework based on MVC2 Architecture.  • Served integral role in analyze, design, develop and implement new requirements  • Used Java Beans, Servlets, Action classes, Action Forms as Model, JSP, Struts tag libraries, Custom Tags, JSTL, Tiles as view & Action Servlet as a Controller and jQuery.  • Implemented Design Patterns- Business Delegate, Session Façade, DAO, Value Object, Proxy, Service Locater  • Created several custom tags for JSP for maximum re-usability of user interface components.  • Participated in several design sessions to create common development strategies (e.g. Error handling, exceptions, performance improvement practices, session management etc.)  • Designed and developed several Servlets, JSPs and JAVA classes for presentation layer.  • Extensively worked on ILOG JRules engine which integrate with J2EE application.  • Responsible for writing business rules and accessing (firing) the rules in Session Beans.  • Design implements the server side (Business and persistent) logic using EJB.  • Implemented application communication through asynchronous messaging service using MDB.  • Followed Test Driven Development TDD, Scrum concepts of the Agile to produce high Quality Software.  • Wrote Oracle SQL queries and Stored Procedures using SQL/PLSQL.  • Responsible for code reviews, integrated all the modules using WebLogic Application Server.  • Implemented Junit Framework for the entire application.  Environment: Java (jdk1.5), J2EE, JSP, Servlets, Struts, EJB, XML, Oracle 10g, UNIX, Weblogic10 and T Line Framework. Core Java Developer Axis bank - Hyderabad, Telangana August 2009 to September 2010 Responsibilities:  • Involved in prototyping, proof of concept, design, Interface Implementation, testing and maintenance.  • Created use case diagrams, sequence diagrams, and preliminary class diagrams for the system using UML/Rational Rose. Designed and developed the persistence tier using Hibernate framework.  • Designed and developed front view components using JSP and HTML.  • Involved in developing various reusable Helper and Utility classes using Core Java, which are being used across all the modules of the application. Developed Interactive web pages using AJAX and JavaScript.  • Implemented Core Java concepts like Polymorphism, Inheritance, Multithreading etc.  • Developed reusable utility classes in core java for validation which are used across all modules.  • Developed Java classes for implementing Business logics using EJB (Stateless session, entity, message driven beans). Deployed and tested the application with web server Tomcat, WebSphere.  • Configured and tested the application with database server Oracle 10g and MySQL.  • Helped in database design and tuning. Created stored procedures, Views in the Database.  Environment: JDK 1.4, Core Java (Multithreading, Collections), JSP, JSTL, Servlets, EJB 3.0, XML, HTML, Java Script, AJAX, SOAP, WSDL, UML, JDBC, Shell Scripting, JUnit, log4j, JMS, Apache Tomcat, WebSphere Application Server, Oracle 10g Database, Windows NT, Unix/Linux.    Technical Skills:  Languages: Java 8, J2EE, SQL, and PL/SQL  Enterprise Java: JSP, Servlet, JNDI, JDBC, Java security and JSF  Mark-up/XML Technologies: XML, XSD, XSL/XSLT, SAX/DOM, JSON  Web Technologies: HTML5, CSS3, Java Script, JQuery, Ajax, Bootstrap, AngularJS, ReactJS and NodeJS, ExpressJS  Tools & Framework: Struts, Spring, Hibernate, Spring MVC, Spring HATEOAS, Spring Web Flow, Spring IOC, Spring AOP, JMS, JSF, Log4J, Spring Boot, Spring Cloud, Spring Batch, Spring Security.  Web services: SOAP, Restful, UDDI, WSDL, JAX-RPC, JAX-RS JAX-WS, JAX-B, Axis2, Jersey, Micro Services Architecture  Web/App Servers: Web Sphere, Apache Tomcat, JBoss, WebLogic  Databases: Oracle, My SQL, SQL Server, IBM DB2, Mongo DB and Dynamo DB.  Development Tools: Eclipse, Net Beans, IntelliJ, RAD and Spring Tool Suite(STS).  O-R mapping: Hibernate, MyBatis and JPA  Testing Tools/ Others: JUnit, Soap UI, Mockito, Log4j and JIRA  Version Control: CVS, SVN, GIT, Rational Clear Case  Methodologies: Agile, Scrum, Waterfall  OS & Environment: Windows, UNIX, Linux, and Mac  Cloud Technologies: AWS EC2, S3, Elastic Beanstalk EBS, Elastic Load Balancing ELB, API-Gateway, Cloud Foundry Skills Api, Linux, Unix, Load balancing, Elastic beanstalk, Ebs, Ec2, Mac