Python Developer, Rackspace <span class="hl">Python</span> <span class="hl">Developer</span>, Rackspace Senior Software Engineer Seminole, FL • Senior Software Engineer and frequent team lead with real-world experience in application  design, development and testing across industry sectors including energy, health care, finance  and cybersecurity.  • Excellent communicator in a variety of formats, from written technical documentation to large-  scale group presentations, both in-person and with distributed (remote) audiences.  • Passionate about technical excellence and the finer points of computer science, while delivering  solutions that truly meet the customer's need and make good business sense.  • Thrives in environments where technical excellence and out-of-the-box creative solutions are  encouraged and rewarded with trust and greater freedom to explore further innovations. Work Experience Python Developer, Rackspace via NJTech, Inc December 2018 to February 2019 Development, CICD and deployment for Python-based portal.rackspace.com and other infrastructure  automation projects.  For the portal.rackspace.com project:  • Added HTTP 'Via' header to proxied services, so that they could respond appropriately across staging and production environments. This was written in Lua extensions to nginx with the  OpenResty framework.  • Deployed updates to OpenShift cluster using Jenkins CICD pipeline triggered by Slack Hubot  integration.  • Built docker-based (unit, functional, integration and smoke) tests for local development to run.  This included debugging SAML integration issues during testing.  • Updated Python dependencies to latest libraries, resolving outstanding known security flaws  and bugs in older versions.  For the Motor project (a REST API into kubernetes Tiller):  • Implemented NewRelic Monitoring using Go (golang) agent.    • Deployed updates and new Secrets to OpenShift cluster using Helm Charts.    I also assisted other teams with questions about OpenShift, Helm Charts, s2i (source-to-image) and docker-based builds. Senior Software Engineer NC4 Soltra July 2015 to November 2018 Core developer on Soltra Edge, the leading cybersecurity information router.  • Proposed forward-looking architectural changes to the application.    • Ensured implementation stayed in compliance with the STIX 1.1.1 and TAXII 1.1 standards.    • Designed and implemented shiny new UI features, soliciting and incorporating feedback from multiple stakeholders, including customer demonstrations.  • Documented "ground truth" on system functionality to inform management, support staff and other customer-facing team members.    3  • Triaged customer issues on a rotating schedule.    • Built a very popular extension (the "Non-STIX plug-in") to enable import of a variety of data.    *I started with Soltra in July 2015 as a contractor to DTCC (via TekSystems), then continued as a contractor with NC4 when NC4 acquired Soltra in 2016, and became a full-time employee of NC4 in  2017. Principal Software Engineer Stratus Video, Inc February 2015 to June 2015 Initial engineer hired to build the next-generation video conferencing solution for the deaf.    • Built automated tests and test infrastructure from scratch, using Jenkins, GitHub commit  triggers, Mocha.js/Blanket.js (for front-end JavaScript unit tests/code coverage), Django unit  tests and Python coverage, and Selenium (for browser testing). Rolled up all test results into one  chart that showed overall tests passing/failing over time.  • Migrated prototype code (purchased from a third party) from poor-quality proof-of-concept  code (10K-line HTML file with sloppy JavaScript scattered throughout) to high-quality  production-grade code (using principled software engineering practices, such as modules and unit tests).  • Replaced the prototype's rudimentary 1-to-1 video calling with a multiplexing conference call  solution that integrated with IBM's video multiplexing server (OCWSC). Senior Software Engineer CIGNA September 2013 to February 2015 Senior developer for MyCIGNA Mobile app back-end web services.  • Enhanced the data translation layer between Java ESB services and lightweight mobile apps.    • Provided design guidance and debug assistance for this team and the Java and Android teams  whose systems interacted with our services.  • Led daily stand-up meetings and aggressively tracked issues to ensure they were handled.    • Standardized the deployment process, even to the point of building a bridge for Python Package  installation ("pip install") from Sonatype Nexus, the enterprise artifact repository in use at the time.  • Deployed application updates and triaged critical issues on Production servers, as necessary.    4  Other Cool Gigs Security Software Engineer Canonical, Ltd January 2011 to December 2013 Built SAML 2.0 support for Django and integrated it for Canonical, so that Launchpad.net and Canonical.com users could authenticate to SalesForce.com and Google Apps using SAML 2.0 Single-  Sign On. Web Developer Discovery Communications September 2012 to February 2013 Migrated multiple Discovery-owned websites from home-grown PHP Content Management System to Django, with some pixel-perfect UI polishing along the way. Web Developer (missionary) Wycliffe Bible Translators January 2006 to October 2010 Multiple projects, both internal and public-facing, to support the 7,000+ Wycliffe missionaries in 70+  countries and to provide greater awareness about Bible translation worldwide. Education Bachelor of Science in Computer Engineering in Computer Engineering Virginia Polytechnic Institute & State University - Blacksburg, VA Skills AWS (Less than 1 year), Bootstrap (Less than 1 year), CSS (Less than 1 year), data structures (Less than 1 year), Django (3 years), documentation (Less than 1 year), Front-end (Less than 1 year), Git (Less than 1 year), GRAPHICAL USER INTERFACE (Less than 1 year), GUI (Less than 1 year), HTML5 (Less than 1 year), infrastructure management (Less than 1 year), JIRA (Less than 1 year), jQuery (Less than 1 year), JSON (Less than 1 year), KNOCKOUT (Less than 1 year), Linux (Less than 1 year), Python (2 years), UI (3 years), USER INTERFACE (3 years), PHP, Javascript, ASP, MySQL Additional Information Skills  Server development  I have 10+ years of experience with server development. Here are a few of my favorite things:    • Linux • Go (golang) • vim  • Python • bash • gedit  • Django • sqlite3 • Apache2  • Docker/Docker Compose • SQL • flake8  • Fielding, Chapter 5 REST • Mercurial • Terraform    I also use these, when appropriate:    • Mac OSX and Windows • OpenShift / Kubernetes • Groovy, Lua, Ruby, et al.  • PHP • Ansible and Fabric • SQL Server and VB.NET  • MongoDB • Git and GitHub • JSON, YAML and XML  • Celery • Atom • Vagrant  • AWS boto3 • nginx • VirtualBox  • Helm Charts • mysql and PostgreSQL    1  Front-end development  I have 10+ years of experience with front-end web development (and GUI development, before the  web). My preferred technologies include:    • ECMAScript 2016 • Knockout.js • Selenium  • HTML5 and CSS3 • Bootstrap UI • eslint    I also use these, when appropriate:    • React with Redux • Blanket.js • Protractor  • Material UI CSS • webpack • jslint and jscs*  • jQuery • grunt and gulp • GIMP  • SVG • Node.js* • WebRTC  • SCSS and SASS • Hudson/Jenkins/Travis* *(also back-end)    Requirements, Projects and Documentation  I have 10+ years of experience with eliciting requirements, managing tasks and projects, and authoring  clear, concise technical documentation. In order to contain these beasts, I find these tools helpful:    • JIRA • Graphviz • OpenOffice/MS Office  • Confluence • Markdown • QuickTime Screen  • Gliffy • Sphinx Recorder  • GitHub Pages • Slack    On the Horizon  I am eager to join projects that will allow me to grow in experience with the following technologies.    • Go (software language) - Go's C-like strongly-typed data structures and its asynchronous "go-  routines" are super-efficient on bare metal and capable of modeling real-world actors well.  • React with Redux (and React Native) - These bring a fresh perspective to front-end (and  native) development that promotes high reusability of component parts.  • Gherkin and Behavior-driven Development (BDD) - BDD takes test automation to the next  level, where humans describe (in English) how a system should function, and robots (automated  test programs) execute those specifications, for a repeatable win-win in quality assurance.  • Server-less cloud deployments (AWS Lambda, Google Cloud Functions, Azure Functions)  - The ability to deploy code without the burden of full infrastructure management promises a  greater agility for product iteration and scalability according to business needs.    2