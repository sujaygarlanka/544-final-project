AWS Engineer AWS Engineer AWS Engineer - DevOps Atlanta, GA • Over 5+ years of experience in DevOps and related technologies and Executing DevOps strategy in various environments of Linux and Windows servers along with espousing cloud strategies based on AWS.  • Expertise in AWS Resources like EC2, S3, EBS, VPC, ELB, AMI, SNS, RDS, IAM, Route 53, Auto scaling, Cloud Formation, Cloud Watch, Security Groups.  • Experience in optimizing volumes, EC2 instances and created multiple VPC instances and created alarms and notifications for EC2 instances using Cloud Watch.  • Set up the scripts for creation of new snapshots and deletion of old snapshots in S3 using S3 CLI tools.  • Experience in working on source control management tools like GIT (GitHub), Subversion (SVN) and creating GIT repositories with specified branching strategies  • Expertise in using builds tools like MAVEN and ANT for the building of deployable artifacts such as war from source code.  • Expertise in implementation and maintenance of Apache HTTP, SMTP, DNS, TCP/IP, Security Management & Security trouble shooting skills  • Experience on working with various OS like Linux (Red hat, Ubuntu, CentOS), UNIX, Windows  • Designed and created multiple deployment strategies using CI/CD Pipelines using Jenkins.  • Configured and administered Jenkins for automated builds Responsible for installing Jenkins master and slave nodes.  • Expertise in automating builds and deployment process using Bash, Python and Shell scripts.  • Rapid provisioning and configuration management for Ubuntu using Chef on AWS platform.  • Installed and Configured Chef Server, Workstation, Client servers and nodes, written several recipes, cookbooks in Chef to automate the environment provisioning, Middleware Infrastructure Installations  • Experience in Designing, Installing and Implementing Ansible configuration management system and in writing playbooks for Ansible and deploying applications  • Designed Puppet Modules to manage configurations and automate installation process and developed automation scripting in Python using Puppet to deploy and manage Java applications across Linux servers.  • Familiar with designing and deploying container-based production clusters using Docker.  • Experienced with Docker container service. Creating Docker files, Docker Images & Containers  • Experience with container-based deployments using Docker, working with Docker images, Docker hub and Docker registries, installation and configuring Kubernetes and clustering them.  • Implemented Kubernetes to deploy scale, load balance, scale and manage Docker containers with multiple names spaced versions.  • Extensively worked on Jenkins, Docker for continuous integration and for End to End automation for all build and deployment.  • Good understanding of Software Development Life Cycle (SDLC) like Agile, Waterfall Methodologies  • Experienced in troubleshooting and automated deployment to web end application servers like WebLogic, and Apache Tomcat. Work Experience AWS Engineer DevOps - Nashville, TN April 2017 to Present Responsibilities:  • Experience in Software Integration, Configuration, building, automating, managing and releasing code from one environment to another environment and deploying to servers  • Involved in supporting cloud instances running Linux and Windows on AWS, experience with Elastic IP, Security Groups and Virtual Private Cloud in AWS.  • Extensive experience on configuring Amazon EC2, Amazon S3, Amazon Elastic Load Balancing IAM and Security Groups in Public and Private  • Subnets in VPC and other services in the AWS.  • Managed network security using Load balancer, Auto-scaling, Security groups and NACL.  • Experience in Python programming for deployment of Java applications and implementation and automation of Shell scripts for release and build automation  • Experience in migrating build.xml into pom.xml to build the applications using Apache MAVEN  • Extensively worked on Jenkins CI/CD pipeline jobs for end-to-end automation to build, test and deliver artifacts and troubleshoot the build issue during the Jenkins build process.  • Implemented Jenkins Code Deploy plugin to deploy to AWS and used to automate the build process and deploy the application to Tomcat server.  • Created Route tables to route the traffic to find whether it is public or private network.  • Used Bootstrap Script for launching large number of instances in AWS.  • Utilized AWS CLI to automate backups of ephemeral data-stores to S3 buckets, EBS and create nightly AMIs for mission critical production servers as backups.  • Used Chef for configuration management of hosted Instances within AWS, Configuring and Networking of Virtual Private Cloud (VPC).  • Used Cloud Front to deliver content from AWS edge locations to users, allowing for further reduction of load on front- end servers.  • Responsible for build and deployment automation using AWS, Docker, Kubernetes containers and Chef  • Focused on containerization and immutable infrastructure. Docker has been core to this experience, along with Kubernetes.  • Experienced in using Docker Swarm and deployed spring boot applications.  • Developed container support for cloud environments and Docker.  • Deployed the applications in Docker containers and managed the containers in enterprise level.  • Created Docker images using a Docker file, worked on Docker container snapshots, removing images and managing Docker volumes  • Configured Docker container for branching purposes and Implemented Docker automation solution for Continuous Integration / Continuous Delivery model  • Created and implemented chef cookbooks for deployment and used Chef Recipes to create a Deployment directly into Amazon EC2 instances  • Developed Chef Cookbooks to manage system configuration and for Tomcat, MySQL, Windows applications and versioned them on GIT repositories and Chef Server  • Installed RedHat Linux using kick start and applying security polices for hardening the server based on company's policies.  • Created users, roles and groups using Identity Access Management (IAM) and attached the required policies.  • Scripting of administration tasks using CLI, Power Shell, Shell and Ruby.  • Built upstream and downstream jobs in Jenkins to build and deploy onto different environments.  • Performed Branching, Tagging, Release Activities on Version Control Tool GIT (GitHub).    ENVIRONMENT: AWS Cloud, AWS Lambda, EC2, puppet, Docker, Kubernetes, GitLab CI, GitHub, Solaris 8, 9,10, Fedora, RedHat Linux 5.x/6.x, Windows 2008/2012, SVN, GitHub/BitBucket, Azure, MSBuild, NuGet, Maven, Ruby, Go, Kabana, Shell scripts, Elasticsearch, Ant, Nagios, Sonar, Agile, IaaS, PaaS, SaaS, NUnit, PowerShell, WebLogic, FileBeat, Apache Tomcat, JBOSS, CFEngine, Runbooks, Apache 1.3.x, 1.2, 2.x, Oracle 10g. Engineer DevOps - Southborough, MA August 2015 to March 2017 Responsibilities:  • Worked on EC2, S3, ELB, Auto scaling Servers, Glacier, Storage Lifecycle rules, Elastic Beanstalk, Cloud Formation, Cloud Front, RDS, VPC, Route 53, Cloud watch, IAM Roles, SNS subscription service.  • Experience using Identity and Access Management (IAM) to design policies, create roles and manage users and groups.  • Migrated service from a managed hosting environment to AWS including overall plan, cost analysis, service design, network layout, data migration, automation, deployments and cutover, monitoring, documentation, and timeline.  • Launched and configured Amazon EC2 Cloud Servers using AMI's (Linux/Ubuntu) and configured the servers for specified applications.  • Launched DNS, Route 53 and AWS Elastic Load balancer (ELB) and assigned AWS SSL Certificates to Servers.  • Configured the Auto scaling and ELB groups in AWS to main high scalable and secure environment.  • Deployed Docker application by using Service Release Automation (SRA) in AWS Infrastructure.  • Converted and automated builds using Maven and scheduled automated nightly builds using Jenkins.  • Deployed Docker Engines in Virtualized Platforms for containerization of multiple applications  • Implemented nightly builds on Jenkins and automated various scopes of testing on Jenkins  • Developed CI/CD system with Jenkins on Docker for the runtime environment for the CI/CD system to build, test and deploy.    ENVIRONMENT: AWS (EC2, VPC, ELB, S3, RDS, Cloud Trail and Route 53), Terraform, Kubernetes, Jenkins, JIRA, Nagios, Linux, Docker, Chef, Ansible, Git version Control, Cloud Formation, AWS CLI, AWS Auto Scaling, Maven, Nagios, Subversion, Jenkins, Unix/Linux, Shell scripting. Cloud/DevOps Engineer DevOps July 2013 to June 2015 Responsibilities:  • Involved in deploying the content cloud platform on Amazon AWS using EC2, S3, and EBS.  • Setting up Live Environment on IIS/Apache Web Servers with various AWS Services EC2, VPC, LB, S3, RDS and Route53 including Reverse Proxy, Load Balancing, Monitoring, Backup and Migration tasks.  • Proficient in AWS Cloud platform and its features which includes EC2, VPC, EBS, AMI, SNS, RDS, EBS, Cloud Watch, Cloud Trail, Cloud Formation AWS Configuration, Auto scaling, Cloud Front, IAM, S3, and R53.  • Set-up databases in AWS using RDS, storage using S3 bucket and configuring instance backups to S3 bucket.  • Used Docker as a new level of simplicity for defining and creating applications or services by encapsulating them in containers.  • Maintained high availability clustered and standalone server environments and refined automation components with scripting and configuration management using Ansible.  • Create, build Ansible playbooks including automation scripts with Python and Bash.  • Designed and implemented scalable, secure cloud architecture based on Amazon Web Services.  • Created Cloud formation stacks to easily provision resources in the AWS cloud.  • Create and maintain custom IAM policies for the groups to allow access to specific portions of the AWS resources.  • Worked with various AWS EC2, S3, CloudFront, VPC, IAM, SQS, Lambda, Kinesis and Route53 CLI tools.  • Worked on migration project of moving current applications in traditional datacenter to AWS by using AWS services.  • Maintained the user accounts (IAM), RDS, Route 53, SES and SNS services in AWS cloud.  • Launched AmazonEC2 Cloud Instances using Amazon Web Services (Linux/ Ubuntu) and configured the launched instances with respect to specific applications.  • Designed AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.  • Monitored system issues/updates for all assigned applications throughout the entire SDLC verified requirements were accurate, functional and implemented successfully within the timelines specified. Python Developer- Intern Prime Technologies April 2013 to June 2013 Responsibilities:  • Worked on Python Open stack API's.  • Used Python scripts to update content in the database and manipulate files.  • Generated Python Django Forms to record data of online users  • Used Python and Django creating graphics, data exchange and business logic implementation.  • Added support for Amazon AWS S3 and RDS to host static/media files and the database into Amazon Cloud.  • Developed tools using Python, Shell scripting to automate some of the menial tasks.  • Wrote and executed various SQL database queries from Python using Python-SQL connector and SQL dB package.  • Analyzed performance test requirements and developed test plans and have done debugging to understand test objective requirements. Skills AWS (4 years), LINUX (4 years), PYTHON (3 years), CHANGE MANAGEMENT (3 years), CONFIGURATION MANAGEMENT (3 years) Additional Information Operating Systems Linux - Red Hat, Fedora, SUSE, Debi, Ubuntu, CentOS, Unix  Cloud Platforms AWS, Microsoft Azure and Open stack  Configuration Management Chef, Puppet, Vagrant, Maven, Ansible, Docker, Gradle, Splunk, OPS Work.  Languages/Scripts Bash Shell, Perl, Python Scripts, Cobol, C, C++, Visual Basic, Java, J2EE  Databases MySQL (phpMyAdmin), PostgreSQL (phpPgAdmin)  Build Tools ANT, MAVEN, Make file, Hudson, Jenkins, BA  Mail Servers Postfix, PostgreSQL (Virtual mail box)  Web Servers Apache2/Tomcat, JBoss, IBM-Web Sphere, WebSphere, JBoss  Virtual Server VMware ESX 3.5.0 Server, VMware Infrastructure Client 2.5 &Xen 3.2  Version Control Tools Subversion (SVN), Clear case, GIT, GIT Hub, Perforce, Code Commit  Other Tools JIRA Project Management Tool, Eclipse, CUPS, DNS(BIND), DHCP, Samba, Firewall (Squid, IPTables), FTP, NFS, NIS,