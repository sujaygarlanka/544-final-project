Sr. Full Stack Java Developer Sr. Full Stack <span class="hl">Java</span> <span class="hl">Developer</span> Sr. Full Stack Java Developer - Optum Florham Park, NJ • Over 8+ years of Professional IT experience in analysis, design, implementation and testing of Object Oriented Applications in Client/Server environments using Java/J2EE.  • Expert in Various Agile methodologies like SCRUM, Test Driven Development(TDD), Incremental and Iteration methodology, Pair Programming, Agile Developmentand testing using SDLC  • Experienced in Core Java &J2EE design patterns like Front Controller, Singleton, Factory Pattern, Service Locator, Business Delegate, Data Access Object, Session Façade and Value object pattern.  ? Worked on Java 1.8 features like functional interfaces, lambda expressions and java stream API.  ? Strong programming skills with both core and advanced Java technologies including Java, J2EE, JSP, JDBC, Struts 2, Servlets, JAX-WS, JAX-RS, Spring and Hibernate  ? Expertise in server-side development with JDBC, Servlets,MVC architecture, Java Beans, XML.  ? Experienced in implementing IOC/Dependency Injection features through frameworks like Spring Core, Spring Security, Batch, Spring Boot,Eureka, Netflix, Spring cloud, SpringAOP, JDBC  ? Used Spring Batch and Hibernate for creating batch jobs to read and write multiple formats of data  ? Expertise in developing Web based Distributed and Front-End applications in a three-tier architecture using Java, J2EE, HTML, HTML5, Backbone JS, Bootstrap, Angular JS, React,Ajax, Node JS, JSP,CSS, JavaBeans  ? Worked with object-centric framework like Hibernate and Database-centric framework like iBATIS.  ? Worked with multiple Databases like MYSQL, Oracle 10g/11g, PostgreSQL, MongoDB, Cassandra  ? Proficient in using Unit testing along with Jasmine, Karma, Mockito, TestNG, Selenium, Junit  ? Experience in deploying applications on Application and web servers likes Web logic, Web Sphere, JBoss, Glassfish and Web Servers like Apache Tomcat.  ? Experience in implementing SOA and Web Services using SOAP, RESTFUL, JAX-WS, AXIS, WSDL  ? Developed RESTFUL microservices using JAX-RS, JerseyFramework, Spring Boot  ? Experienced with web services testing and automating using SOAPUI and Postman.  ? Configured and maintained Jenkins to implement the CI/CD process and integrate the tool with Ant and Maven to schedule the builds.  ? Created Jobs for Builds and Deployments, installed several plugins in Jenkins to support multiple build eco systems required for the implementation of projects.  ? Worked on Application Deployments & Environment configuration using Puppet&Chef management tools.  ? Experience with version control using SVN, GIT, Bitbucket and error logging using Log4J.  ? Implementing SOAs using Web services with XML, SOAP, WSDL, Apache Axis, JAX-WS, and JAX-RS.  ? Deployed Production ready Java applications using Elastic Beanstalk, where it auto configures the capacity provisioning through Autoscaling, load balancing, application health monitoring and Proficient in using Amazon Web Services AWS.  ? Extensive experience focusing on services like EC2, VPC, Cloud Watch, Cloud Front, Cloud Formation, IAM, S3, Amazon RDS, Elastic Cache, SNS, SQS, Elastic Search  ? Configured AWS Identity and Access Management (IAM) Groups and Users login authentication  ? Extensive hands on experience in fine tuning and scaling the applications in Pivotal Cloud Foundry  ? Initiated Microservices application through Docker and Kubernetes cluster formation. Authorized to work in the US for any employer Work Experience Sr. Full Stack Java Developer Optum - Minnetonka, MN May 2017 to Present The Integrated Eligibility is a Project which determines the eligibility of a person who can receive State Services like SNAP(Supplemental Nutrition Assistance Program) also known as Food Stamps, TANF(Temporary Assistance for Needy Families), Medicaid, etc. who has little to no income. The Agency Portal and Client Portal helps the state department to determine the eligibility of the person. The Agency Portal will be accessed by State Agency workers to help the people to enroll in appropriate programs. The Client Portal is for the users who can directly submit the application through online application.    Responsibilities:  ? Involved in analysis, design, implementation and testing phases of SDLC through Agile methodology  ? Design and developed the application using framework Angular 4with HTML5, CSS3 and Typescript.  ? Developed UI components using Angular 4 dependency Injection, Models, data binding, controllers  ? Developedapplicationusing Java 8 to implemented its features like lambdas Expressions, Time API, Streams, functional interfaces, collectors, default methods, type interfaces, foreach.  ? Used multithreaded environment to run processes asynchronously using future calls to access the data.  ? Used Spring SecurityforValidation and authentication on the Client side, session fixation, click jacking, cross site request forgery  ? Design and Development of business components using Spring IOC, Spring Annotations, dependency injection, transaction management through Spring framework.  ? Developed Microservices with Spring Eureka to retrieve API routes for the entire cluster. Using this strategy each Microservice in a cluster can be load balanced and exposed through one API gateway.  ? Developed Spring Restful/Microservices and implemented Spring Eureka, Netflix, Ribbon as part of Services Discovery using Apache Axis.  ? Used Microservice architecture with Spring Boot based services interacting through a combination of REST and Apache Kafka message brokers.  ? Employed fail safe and circuit breaker patterns for the first time in Client's email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications  ? Worked on Swagger UI to interact with the API'S. Designed and documented APIs using Swagger  ? Configured Hibernate Cfg.xml to facilitate connection pooling with Data Source and create POJOs to map with backend tables.  ? Implemented the associated business modules integration usingspringand Hibernate data mapping.  ? Implemented Object-relation mapping using Hibernate framework to fetch the data from Oracle 11g database.  ? Developed Mongo DB Data Access Layer implementing Mongo Repository interface from Spring Data.  ? Proficient at development of web-based application using Apache Tomcat, JBOSS 7.0, Glassfish 4.0  ? Used JUnit, Mockito for the unit and integration testing of various modules  ? Developed Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.  ? Resolved bugs/defects by coordinating with team members to assure a positive outcome using Jasper.  ? Using GIT for Source Control and Version Management and using log4j for logging.  ? Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins  ? Implemented Micro Services based cloud Architecture on AWS platform for deployment.  ? Initiated Microservices application with Docker and Kubernetes cluster formation for the scalability of the application.  ? Designed new Strategies for optimizing all aspects of the CI, release and deployment processes using latest container and virtualization techniques like Docker and Kubernetes  ? Created the Docker containers and Docker consoles for managing the application life cycle.  ? Containerized Microservices by creating Docker images from Docker file collaborated with development support team to set up a continuous deployment environment using Docker.  ? Proficient in writing AWS Cloud Formation template to create customized VPC, subnets, NAT, EC2 instances, ELB, Security groups, S3, IAM.  ? Experience in automating the infrastructure and managing the application in AWS using web services.    Environment: Angular 4, HTML5, CSS3, JavaScript, jQuery, AJAX, JSON, TypeScript, Jenkins, GIT, SVN, Rest, log4j, Hudson, Spring MVC, Spring boot, Apache Kafka, Docker, JAX-RS, Junit, Mockito, Oracle, SOAPUI, Postman, Ec2, AWS lambda, Hibernate, Oracle 12, MongoDB. Sr. Java Full Stack Developer Wells Fargo & Co - Charlotte, NC December 2015 to April 2017 Online Access Module (OAM) is a web application that manages the user experience for secondary authentication. OAM supports multiple authentication methods including Two Factor Authentication (Advanced Access), Security Questions and Out Of Wallet Authentication. OAM - Online access Module is a Wells Fargo Fraud Prevention & Authentication application designed to provide the customers an ability to access/change the credentials or to create/enroll their credentials via by steps such as Identification, authorization and verification via pin sent to Phone/Email on account.    Responsibilities:  ? Understand the complete flow and found various gaps in current system Designed the new flow for faster creation of reports and posting. Removed complex logics and built more stable and simple code logics.  ? Prepared User stories corresponding to the features taken from Backlog  ? Comprehensive experience in using Node.js and Spring Boot implementing RESTful web service.  ? Hosted and consumed RESTful Web services using JAX-RS API with spring Boot.  ? Developed Micro services using RESTful web services to provide all the CRUD capabilities.  ? Used Executor Service framework to implement multithreading in programming to improve overall performance.  ? Responsible for implementing frontend features, APIs, internal tools and processes in Node.js centered stack.  ? Extensively used npm tools like Gulp, Grunt, Web pack  ? Built micro services for the delivery of Purchase Order module using Spring cloud.  ? Applied significant knowledge of industry trends and developments to improve service to our clients.  ? Worked on the Common UI layout for defining the Header, Footer and Menu using JSF Facelets.  ? Used Multithreading extensively to improve the performance of the application.  ? Worked on Camel-based integration middle-ware solution for Provisioning Services by design and Implementation of business logic and data processing routes using Apache Camel.  ? Involved in capturing the business requirements, design, development and testing of the application.  ? Designed a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile, tablet and desktop.  ? Used Cassandra NoSQL DB to store the data for few modules of the application.  ? Built Web pages that are more user-interactive using AJAX, JQuery.  ? Developed a cross-device/browser web application for location sharing utilizing AngularJS, JavaScript API.  ? Integrated the Java code (API) in JSP pages and responsible for setting up AngularJS framework for UI development. Developed html views with HTML5, CSS3, bootstrap and AngularJS.  ? Using AngularJS created Responsive Web Design and data manipulations in company standard format in UI.  ? Deployed Docker contained Spring REST services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS console.  ? Usage of Scala as a template engine to the front-end part of code.  ? Worked on AngularJS, used its two-way data binding to achieve the feedback functionality from the user.  ? Configured Swagger for auto-generated documentation for all REST API calls.  ? Experienced in build, deploy multi module applications using Maven, ANT and CI servers like Jenkins.    Environment: JAVA/J2EE, HTML, JSON, XHTML, JS, AJAX, JQUERY, DOJO, CSS3, JSP, NodeJS, AngularJS, ReactJS, JSF,Bootstrap, XML, XSLT, XPATH, MULE ESB, AWS, WebSphere, SOAP, REST, Spring Framework, Spring Boot(Microservices), JMS, Maven, Drools 5, Eclipse, Jenkins, JUnit, MongoDB, Mockito, Star Team, TDD, Spring MVC, EMMA, JIRA, Spring framework DI, AOP, Batch, Hibernate, Cassandra, Docker, Ant, Coherence, Rally, Apache Camel. Sr. Java/ J2EE Federal Home Loan Bank - Des Moines, IA December 2014 to November 2015 A primary benefit FHLB application in access to low cost secured borrowings, known as advances, which are funded by the FHL Banks in the capital markets from the issuance of discount notes or term debt, collectively known as consolidated obligations (COs).    Responsibilities:  ? Developed the J2EE application based on the Service Oriented Architecture.  ? Used Spring Framework for dependency injection, integration of Hibernate using Spring ORM support, development of RESTful web services to give JSON output.  ? Used Spring MVC front controller to handle requests from dispatcher servlet to handle incoming requests.  ? Configured Spring MVC from scratch using XML configurations, namespace handling, spring security set up and giving access to resource, wrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections.  ? Developed the applications using SPRING framework including Spring Core, Spring WS, Spring MVC, and Spring Integrations design pattern  ? Used Hibernate in persistence layer, hibernate mappings using Annotations, HQL, Criteria and Queries.  ? Involved in Design and Development of RESTful API.  ? Worked with SOAP UI, JAX-WS to create Web Services and consuming the existing services.  ? CreatedREST web services- spring with Jackson Mappers exchange data using JSON data structure.  ? Used SVN for source Version Control, resolving code conflicts and merging code base.  ? Deployed the application in Web Logic Application Server.  ? Developed Microservices to provide Rest API's utilizing Spring MVC  ? Strong experience in writing PL/SQL queries and performance tuning.  ? Developed Unix Shell scripts to automate repetitive database processes.  ? Used Maven for dependency management, build applications and deploy to the containers, application servers and create versions in the repository.  ? Used JUnit for unit testing of the application and log4j for logging.    Environment: Core Java, Java 1.6, Spring, Hibernate, SVN, Apache, Eclipse 3.3, JNDI, Log4j, JUnit, XML, XSD, AngularJS, Node.js, JQuery, HTML 5, bootstrap, JavaScript, Web Logic Application Server, Oracle, Windows XP, REST API, NetBeans, UNIX. Java Developer Valley National Bank - Wayne, NJ November 2013 to November 2014 Securities lending system provides a single, centralized, real-time system for borrowing and lending of securities like stocks, Fixed Income Instrument (T-bill and T-notes). Requests to borrow are routed to specified lenders and associated execution information is returned to the borrower without manual intervention. Securities Lending System has Desktop Client for call center and website for international users. User can specify time limit, rebate rate, collateral type, delivery details, maximum price and books.    Responsibilities:  ? Gathered user requirements followed by analysis and design. Evaluated various technologies for the Client.  ? Developed HTML and JSP to present Client side GUI.  ? Involved in development of JavaScript code for Client Side Validations.  ? Involved in development of presentation components using Swings.  ? Extensively used XML documents with XSLT and CSS to translate the content into HTML to present to GUI.  ? Developed dynamic content of presentation layer using JSP.  ? Develop user-defined tags using XML.  ? Used Struts Framework to implement J2EE design patterns (MVC).  ? Developed, Tested and Debugged the Java, JSP and EJB components using Eclipse RCP.  ? Developed Enterprise Java Beans like Entity Beans, Session Beans (both Stateless and State Full Session beans).  ? Developed JSP as the view, Servlets as Controller and EJB as model in the Struts Framework.  ? Worked on Web Logic application server to deploy JSP and EJB applications.  ? Created and implemented PL/SQL stored procedures, triggers.    Environment: Core Java, J2EE, Swing, EJB 2.1, JSP 2.0, Servlets 2.4, Struts, HTML, XML, CORBA, XSLT, CSS, Java Script, Eclipse RCP, PL/SQL, Weblogic8.1. Junior Java Developer Systems & Services Limited May 2009 to August 2013 Responsibilities:  ? Involved in understanding and analyzing the requirements of the project.  ? Implemented server side programs by using Servlets and JSP.  ? Designed, developed and User Interface using HTML, JavaScript, AJAX and CSS.  ? Used JavaScript to perform Client Side Validation.  ? Implemented using the MVC design pattern.  ? Used JDBC to interact with the underlying MySQL Database.  ? Deployed Applications on Apache Tomcat Server.  ? Involved in Unit testing for various components.  ? Used Log4J for any logging purposes during the development of the application.    Environment: JAVA, J2EE, JSP, SERVLETS, JDBC, HTML, CSS, JAVASCRIPT, AJAX, ECLIPSE, JUNIT, MVC, APACHE TOMCAT AND MYSQL. Education Bachelor's Skills Java (9 years), JavaScript (9 years), MODEL VIEW CONTROLLER (9 years), MODEL-VIEW-CONTROLLER (9 years), MVC (9 years) Additional Information TECHNICAL SKILL:    Java/J2EE Technologies: Servlets, JSP, JSTL, JDBC, JMS, JNDI, RMI, EJB, JFC/Swing, AWT, Applets, Multi-threading, Java Networking.  Programming Languages: Java JDK 1.4/1.5/1.6/1.7/1.8, C++, C, SQL, PL/SQL, Python, Scala, Golang.  Application/Web Servers: Oracle/BEA, WebLogic 8.1/9.1/10.3, IBM WebSphere 5.1/6.0/6.1/7.0, JBoss, Tomcat 5.0.28/6.0, Bug tracking, Jenkins, Cucumber.  IDEs: Eclipse, Spring STS, IntelliJ, WebStorm, NetBeans.  Web technologies: HTML5, CSS3, XHTML, JavaScript(+ES6), TypeScript, Ajax, jQuery, AngularJS, Angular 2, Angular 4, ReactJS, NodeJS, Socket.io, Express JS, JSON, Swagger UI, Bootstrap, Google Web Toolkit (GWT),Backbone JS, Ember JS, Knockout JS.  AWS Skills: EC2, S3, RDS, EBS, IAM, AMI, ELB, CLI, SNS, RDS, VPN, NAT, GIT, DNS, Route53, DBA, Dynamo DB.  Web Services: JAX-WS, JAX-RPC, JAX-RS, SOAP, REST, SOAP UI, Microservices.  Methodologies: Agile, Scrum, RUP, TDD, OOAD, SDLC, Waterfall model.  Message Brokers: Kafka, RabbitMQ, ActiveMQ, TIBCO, IBMMQ.  Testing technologies/tools: JUnit, JMeter, Protractor, Mockito, Karma, Jasmine.  Database: Oracle 8i/9i/10g/11G, DB2, SQL Server 2005/2008, MySQL, PostgreSQL, Sybase, MongoDB, Cassandra.  Big Data Tools: Hadoop, Spark, MapReduce, HDFS, HBase, Zookeeper, Hive, Sqoop, Cassandra, Flume, Couchbase, MongoDB, Neo4J, Redis, MLlib.  Version Control: CVS, SVN, Git, Stash, Bitbucket.  Build Tools: ANT, Maven, Gradle.  Spring Tools: Spring MVC, IOC, AOP, JDBC, JTA, IO, Spring Boot, Spring Micro services, Spring REST, Spring Eureka, Spring Hateos, Spring Cloud, Swagger UI, Sleuth, and Spring Zuul, Feign Client.