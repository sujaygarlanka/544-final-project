Lead Software Developer Lead <span class="hl">Software</span> <span class="hl">Developer</span> Software Engineer Marietta, GA Experienced developer with wide background including simulation/game development, hardware integration, firmware development, architecture design, UI design/development, data analysis, and system optimization. Adaptable problem solver great at identifying issues and implementing solutions. Dedicated and focused worker with experience taking projects from ideas and requirements to complete products. Excellent interpersonal communication skills, both written and oral. Great team leader and player, able to work in a dynamic team environment and independently. Good natured with a sense of humor and the ability to get along with all co-workers. Authorized to work in the US for any employer Work Experience Lead Software Developer Research Network, Inc - Kennesaw, GA June 2018 to Present Work with a small team in research, design, development, and demonstration of solutions for government and military contracts.  1. Distributed Augmented Reality Environment (DARE) (C++/C#) - An architecture and environment allowing quick and easy integration, configuration, and interoperation of libraries and devices for augmented reality applications. Lead the research, design, and development of the architecture. Implemented a Windows application employing the architecture to demonstrate an Augmented Reality system using: a) Hololens HMD, b) Magic Leap HMD, c) custom motion capture suit, d) custom haptic feedback suit, e) Unity multiplayer, and f) Google Protocol Buffers.  2. Body Sensor Network (BSN) (C#) - A collection of wireless body units (WBUs) and WBU connectors with varying functions allowing motion capture, haptic feedback, and biometric monitoring. Developed haptic stimulation waveform algorithm. Created firmware for WBU communication over Bluetooth Low Energy. Research Engineer Apex Systems Contractor @ Georgia Tech Research Institute - Atlanta, GA June 2017 to June 2018 Research, develop, and expand capabilities of FalconView map rendering software to meet customer and contract needs.  1. Geospatial-Rendering Library (C/C++) – A geospatial-rendering engine built from the ground up focused on performance. Designed and implemented functionality according to contract deliverables. Major implementations: (a) polygon construction and triangulation, (b) camera movement and transitions, (c) image data access, reconstruction, and formatting, (d) API design and implementation, (e) GUI design and implementation.  2. FalconView v6 (C/C++/C#) – A C# GUI implementing the Geospatial-Rendering Library (Grendl). Implemented a C# wrapper around the C/C++ Grendl library that allows control and display of the rendering engine.  3. WebAssembly Research (C/WASM/JavaScript/HTML/OpenGL) – Research possibility and methods of compiling Grendl into WebAssembly. Researched and prototyped compilation of Grendl to WebAssembly using Emscripten. Lead Software Developer Research Network, Inc - Kennesaw, GA February 2013 to June 2017 Work with a small team in research, design, development, and demonstration of solutions for government and military contracts.  1. SimBridge (C++/C#) – A library and API of hardware and software extensions that can be implemented into multiple engines. Designed/developed extensions to handle (a)full-body motion capture using inertial sensors, (b)Bluetooth connection and communication with android applications, (c) multiplayer client and server communication and data logging, (d) C# API to C++ Library.  2. Game Distributed Interactive Simulation (Unity3D/VBS2/C#) – Build and run military scenarios implementing the SimBridge libraries and extensions in the Unity3D game engine and Virtual Battlespace 2 Fusion API. Implemented C++/C# intercommunication with callback functions and marshalled data. Designed and developed algorithms for noise reduction of UWB trilateration results. Created augmented reality scenarios on Google Project Tango device with Qualcomm Vuforia libraries added, and on Microsoft Surface Pro 3 devices with UWB localization and IMU orientation. Added multiplayer interoperability between VBS2 and Unity3D.  3. Wireless Haptics (C/C#/PIC/Netduino) – Wirelessly triggered TENS stimulation for haptic effects. Designed and developed dynamic stimulation waveform to vary the output of a low power current. Programmed PIC and Netduino Microcontrollers with wireless radio communication and timed bit changes with nanosecond precision.  4. Research – Researched and analyzed various hardware and software technologies to develop solutions. Software Developer QinetiQ North America - Huntsville, AL February 2011 to February 2013 Design and develop new features and modifications for three flight simulation products for military and commercial use.  1. Data Acquisition System (C++) – Receive and record flight data and videos from flight simulators. Added DIS traffic recording. Modified programmatically built DirectShow filter graphs. Modify Ethernet package structure.  2. FlightViz (C++) – Recreate flights from recorded data in a 3D scene in sync with video and instrument recordings. Fixed memory management issues. Fixed rendering issues. Modified CIGI communication and control.  3. FlightAnalyst (C++/C#) – Analyze and store flight data. Detect and display events. Integrate and sync with FlightViz. Added DIS broadcasting. Modified time syncing. Created plugins to load and process data. Wrapped C++ code for use in C#. Modified Crystal Reports. Education Bachelor of Science in Game Development - Valedictorian Full Sail University - Winter Park, FL January 2011 Skills C# (7 years), C++ (9 years), SVN (9 years), GIT (2 years), Windows (9 years), Unity (5 years), AR/VR (2 years), Microsoft Office (7 years) Certifications/Licenses Secret Security Clearance Publications Virtualizing Humans for Game Ready Avatars 2015-12 Saffold, J; Shoaf, T.; Holutiak, J.; Roberts, T.; and Garrity, P.    Paper and presentation at Interservice / Industry Training, Simulation and Education Conference (I/ITSEC), Orlando, FL An Immersive Live / Virtual Bridge Approach with Ultra Wideband Tracking Technology: Phase II Saffold, J; Shoaf, T.; Holutiak, J.; Roberts, T.; and Garrity, P.    Paper and presentation at Interservice / Industry Training, Simulation and Education Conference (I/ITSEC), Orlando, FL. Additional Information Languages  • Proficient with C/C++/C#,  • Familiar with Java, JavaScript, Scala, HLSL, Lua, Assembly, WebAssembly, GLSL, HTML/CSS, SQL    APIs/Frameworks/Hardware  • Proficient with Win32, Open GL, Maya C++ API, WinSock, .NET, PIC and Netduino Microcontrollers  • Familiar with Direct X, Qualcomm Vuforia, Google Project Tango, 9-DOF Sensors, Microsoft Hololens    Software  • Proficient with Visual Studio, Unity 3D, Alienbrain, Tortoise SVN, Plastic SCM, Windows, PowerPoint, Excel, Git  • Acquainted with DevKitPro, RenderMonkey, Eclipse, Visual Paradigm, Unreal Editor, Maya, Parallel Studio, Crystal Reports, IntelliJ IDEA    Skills  • Memory Management and Optimization  • Debugging and Performance Analysis  • Tool, Plugin, Library, SDK, and API Development  • Agile Development (SCRUM)  • Game/Simulation Development - Physics, Collision, Particles, Rendering, Scene Management, Spatial Partitioning, AI, Multiplayer Networking, AI (A*, Breadth First, Depth First, Waypoint Pathing, Flocking, State Machines)    Other  • Secret Security Clearance