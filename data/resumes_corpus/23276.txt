Application Developer Application <span class="hl">Developer</span> Application Developer Dublin, CA A detail oriented and driven individual with around 9 years of software development experience in object oriented programming, design and development of Multi-Tier distributed, Enterprise applications using Java and J2EE technologies and excellent experience in developing single page applications using front-end web technologies - Angular, ReactJS, JSX, ExpressJS, Node.js, SASS, HTML (4/5), CSS (2/3), XHTML, JavaScript, JQuery, Bootstrap, AJAX, JSON and related technologies. Extensive experience in gathering and analyzing the requirements from users and management. Ability to develop easy-to-use and aesthetically rich solutions and leveraging technology's power to build systems that can be easily enhanced and extended. Project experience in multiple domains, including Financial, Education, Healthcare, and Travel in both Private and Public sectors.  SOFTWARE DEVELOPMENT EXPERTISE    ? Extensive experience in developing single page applications(SPAs) using HTML/HTML5,XML,CSS/CSS3,SASS,LESS,JavaScript,ReactJS,Redux,Angular,JQuery,TypeScript,JSlint,JSON,Node.js,Ajax,Bootstrap  ? Good hands on experience in MEAN stack and MERN stack using Mongo DB, Express, Node, Angular and ReactJS.  ? Good experience on customizing CSS frameworks- Bootstrap using CSS pre-processors LESS or SAAS.  ? Excellent hands on experience on developing SPA using ReactJS library and Angular framework.  ? Good experience in developing web applications with state management persistence using Redux architecture.  ? Good experience in developing ReactJS components, Forms, Events, Keys, Router and familiar in developing reusable ReactJS components library and also experience in developing Angular directives, controllers, filters, services, injectors, templates and events.  ? Good experience in Angular CLI and developing Reactive forms, Template driven forms using Angular.  ? Excellent experience in developing applications unit test cases using Jest-Jasmine.  ? Excellent experience in developing applications accessing backend API services/data using GraphQL and React-Apollo.  ? Good experience in working with Node.js and NPM modules like http-server, path, MongoDB, Micro Services, Elastic Search, express and templating engines.  ? Experience in Node environments like Node.js, NPM, Grunt, Gulp and Groovy Browser.  ? Excellent experience in build, share and run applications seamlessly using Docker containers.  ? Experience in creating EC2 instance and S3 storage buckets in AWS environment and good experience in container orchestration tools like Kubernetes for automated container deployment and scaling and management using yaml scripts.  ? Good experience in developing web applications using Agile (Scrum) project management methodology.  ? Hands on experience in developing numerous multi-tier Java J2EE applications with different open source technologies and frameworks - Spring4.0, Hibernate 3.0, JMS, JSP, Servlets  ? Thorough involvement in full life-cycle projects using Object Oriented methodologies / Programming (OOP's)  ? Expertise in parsing XML files using DOM and SAX parsers  ? Expertise in developing Web Services using SOAP and REST architecture.  ? Expertise in writing Java batch jobs which invokes Web Services, PL/SQL Stored Procedures  ? Having experience with SOA (Service oriented Architecture, WSDL, REST, SOAP and UDDI), SOAP Web Services using Apache AXIS 2 Web Services deployment engine  ? Expertise in JMS and IBM Web sphere MQ  ? Expertise in using Version Control systems like CVS (Concurrent Versioning System), SVN, Clear Case and Perforce, GIT  ? High Ability to work on SOA and Agile projects. Work Experience Application Developer University of California - Davis, CA December 2017 to May 2019 Project Description:  Tracker- Tracker is an application that allows user to manage the outcome of risk assessments (hazard, ergonomic, etc.) across various environments. Outcome results include physical items (clothing, footwear, equipment, etc.) and non-physical items (training, procedures, authorizations, etc.). Users can order, monitor and track these items throughout their life-cycle.    Environment: ReactJS 16.7, Redux, Docker, AWS EC2,AWS S3 Buckets, GraphQL-NPM 14.0.2, GraphQL 0.13.2, NPM, React-Apollo 2.3.3,Node.js, Express.js, Java Script ES6, HTML5, CSS, MongoDB 4.0, Jira, Bit bucket, GIT, JEST-JAMIN 22.4.4, Slack, IntelliJ IDE    Responsibilities  • Involved in developing application using ReactJS, express.js and node.js  • Designed and developed client faced critical components, order and track components, with ReactJS.  • Responsible for building UI Components and state management of user transactions using ReactJS and popular React workflows- Redux  • Used ECMA script (ES6) as java script standard in UI development  • Used SASS and LESS CSS pre-processors for converting old fashioned CSS  • Used React-Apollo client for writing RESTFul webservices queries.  • Handled application's cross browser and platform compatibility issues on popular browsers - IE, Opera, Firefox, chrome and Safari  • Worked on applications scaling, data modeling, usability and testability  • Used MongoDB as the storage purpose for its simplicity and to provide good productivity on large data and to provide flexible and dynamic schemas.  • Involved in applications database design, modelling and worked on creating indexes.  • Involved in making easy backups and recovery using MongoDB  • Implemented easy access of web services with fine-tuned data access using GraphQL  • Involved in writing Docker build and deployment scripts for the tracker application  • Involved in writing yaml scripts for deploying application on AWS cloud platform  • Goods hands on experience on Kubernetes container orchestration to automate deployment and management of containerized applications.  • Developed unit test cases using jest-jasmin framework.  • Used JIRA as tracking tool to plan, track and release Tracker application deliverables.  • Involved creating AWS S3 instances for storing the tracker Order information.  • Developed tracker using Agile-Scrum methodology and worked with cross-functional teams and customer end users. Application Developer University of California - Davis, CA October 2016 to December 2017 Project Description:  Project 1: Monitor - Monitor is developed specially for the UC workforce who are working in radiological and chemical environments to gather the details of radiological effectiveness on the resource, this application can be configured to gather details per location basis or per resource basis, this application can also be used to configure chemicals and radioactive material details used and can also be configured to associate results with supervisors who are responsible for gathering details.    Project 2: Slip-Resistant - slip-resistant deals with enrolling and ordering of slip resistant materials through primary and secondary purchasers of different UC departments especially with resources working in slippery environments. This project also deals with workflow of approvals required from the UHS admin and UC OP admin for the orders and also amendment process required in case of any corrections in the order, sending notifications to purchasers at each step of workflow process.    Environment: Angular 5.2, Express.js 4.15, JSON Web Token 7.4.1, GULP 3.9.1, TSLint 5.5.0, CHAI 4.1.0, MOCHA 3.4.2, RxJS 5.5.6, J2EE, MongoDB 2.2.30, GIT, BitBucket, AWS S3 Buckets, AWS EC2, IntelliJ IDE, JIRA, Jenkins, Docker    Responsibilities  • Involved in development of the Monitor and Slip-Resistant applications using MEAN stack.  • Responsible in development of the Monitor and Slip-Resistant UI components using Angular, Material UI, HTML5, CSS3,Express.js, Java Script as per the requirements.  • Developed backend Monitor and Slip-Resistant application services using Node JS.  • Developed Monitor UI forms using reactive forms to provide synchronous access to data models and also implemented custom validators.  • Developed Slip-Resistant UI Forms using template driven web forms.  • Implemented Monitor applications attachment service using GridFSBucketReadStream from mongoDB client.  • For Monitor's and Slip-Resistant authentication/encryption practices used JWT token and related services.  • Handled application's cross browser and platform compatibility issues on popular browsers - IE, Opera, Firefox, chrome and Safari  • Developed applications as ADA complaint.  • Involved in writing Monitor's and Slip-Resistant client side validations using Java script and Angular 4.0 for client-side validations.  • Worked on Responsive web pages (RWD) using Material UI.  • Used MongoDB as cross-platform storage for load balancing, indexing and file storage.  • Handled all the client side validations, slide show, hide and show  Controls, dropdown menus and tab navigation using JQUERY.  • Worked on package management tools like NPM and Bower.  • Used MongoDB as the storage purpose for its simplicity and horizontal Scaling to clusters.  • Involved in implementing data grid/tables using Bootstrap and Angular for front-end client facing of the Single Page applications (SPA).  • Task management is done through writing GULP scripts.  • Involved in writing Monitor and Slip-Resistant unit test cases using CHAI and MOCHA frameworks.  • Used Google Analytics to Monitor and Slip-Resistant applications usage.  • Used TSLint for code readability, maintainability and to find functionality errors by writing customized lint rules, configurations, and formatters.  • Interacted and worked with cross-functional teams.  • Involved in writing Docker build and deployment scripts for the Monitor and Slip Resistant application.  • Involved in creating S3 buckets to push the Monitor attachments.  • Implemented project using Agile/Scrum methodology. Senior Software Engineer Apple Inc - Sunnyvale, CA June 2015 to September 2016 Project Description:  PMO Dashboard - The goal is to develop a transparent, communicative, consistent, engaging portal which also is a single source of truth for all GNCS PMO management projects within Apple. PMO Dashboard built to fulfill all these requirements. Endeavor- GNCS project management portal served as front end for IS&T customers, PMO Dashboard application provides IS&T partners ability to submit and track project requests while capturing essential details in a consistent format upfront that are required for a smooth transition from a project request to a project and subsequent execution of the project. Provide the project management team ability to maintain project status, details of issues, risks and stakeholder meetings, action items in a consistent format across all projects which will reduce ambiguity and bring the transparency and visibility to core of our projects. Improve communication and notification of new projects to all impacted and partially impacted parties including GNCS managers to engage them early on projects so team is left out. Value add to other project management groups within IS&T and Apple who want to adopt and customize the application in the future.    Environment: Java 1.6, J2EE, Spring 3.2, Hibernate 3, Java script, JSP, Spring Security OAuth, Spring Boot, Clear case, Clear Quest, IntelliJ IDE, Junit, Oracle, Maven    Responsibilities:  • Developed User Interface using JQuery UI, JavaScript, HTML5, CSS, AJAX, and JSON.  • Used Spring MVC to build PMO Dashboards Controllers, Views, Model components.  • Worked on declarative transaction managements of application using Spring AOP.  • Implemented Spring ORM for integrating Hibernate ORM tool.  • Used hibernate query language to access applications data.  • Used Spring security with OAuth to implement the authentication/authorization modules of the application.  • Used Spring Boot to configure and build application with minimum configurations.  • Implemented Spring's dependency injection for all the DAO's, Service Beans and controller components  • Built the Project development environment in Eclipse IDE and debugging the application using Eclipse.  • Implemented Apple directory search service using LDAP.  • Involved in Database Modeling.  • Involved in writing Junit test cases for the application and testing the application.  • Used Agile-Scrum project management methodology for project development life cycle. Senior Software Engineer Intuit - Mountain View, CA February 2015 to May 2015 Project Description:  SDT - SDT Service generates a JWT token based on the given input text data that includes credit card/ bank account information, and this service also provides data by accessing REStFul web services by detokenizing when a valid token is supplied.    Environment: Java 1.6, SOAP Web services JAX-WS, RESTFul web services - JAX-RS, JQuery, Java Script, SVN, JIRA, Tomcat webserver, JWT , POSTMAN    Responsibilities:  • Developed User Interface and implemented using JQuery, Java Script and HTML5  • Involved in Creating and consuming SOAP and REST Web services using annotations.  • Implemented RESTFul web services security using OAuth2  • Used JWT token for authentication and authorization  • Used Splunk for maintaining logs from customers and Create Accessible data.  • Tested RESTFul web services using POSTMAN. Senior Programmer California Franchise Tax Board - Sacramento, CA September 2013 to January 2015 Project Description:  Internal Taxpayer Folder (ITF) is a web-based Application. It is an internal application used by FTB Employees/Agents to serve the needs of a Taxpayer or Power of Attorney agents. It deals with all the California tax related actions, which includes filing tax and tax returns, giving tax filing authorization to POA's, collecting third party information like DMV reports.    Environment: Java 1.6.2, JPA, Spring 3.0, Spring RESTFul web service EJB 3.0, JAX-WS SOAP services, RAD 8.5, WebSphere Application Server 8.0, Jenkins, JSP, JSF, AJAX, Java Script, Servlets, JAX-WS SOAP Web Services, Clear Case, Clear Quest, DB2, JAXB, MQ, SOAP UI,    Responsibilities:  • Involved in design, development, and test and deployment of ITF application.  • Developed User Interface and implementing business process using  JQuery, Prime Faces, JSF, JSP and Servlets.  • Implemented document correspondence user interface using JSF and Prime Faces  • Developed the application that was used to create dynamic JSPs, given input from a database table containing information about the contents of the JSP being developed.  • Implemented Entity Search and Association user interface using JSF and Prime Faces  • Involved in implementing java Script UI validation and server side validations  using spring validator framework.  • Extensively worked with AJAX, JSON, JQuery, Dynamic HTML and CSS.  • Developed Several Action, Model and response processor classes that are used  Once we have response from the services to handle their success and failure responses.  • Involved in creating a data model for a service where multiple providers were involved.  • Involved in Creating and consuming SOAP and REST Web services using annotations.  • Configured IBM MQ to send third party case information to TPF case queue.  • Involved in generating JAXB classes from schema files.  • Developed several DAO classes interacting with EOD DB2 database  and participated in writing JPA criteria builders and predicates.  • Developed several Message Driven Bean classes to consume the messages from Disassociation queue through listener ports.  • Used Spring MVC to build ITF's Controllers, Views, Model components and used  spring's DI across all the components of ITF application.  • Implemented ITF's transaction management using spring AOP.    Travel Port Centennial, CO Software Developer Enterprise Event Handler March 2013 to August 2013 Enterprise Event Handler project was migrating current version of Event Handler over from mule into the IBM SOA CTS infrastructure. The Event Handler Service consisted of the main service that handles real time service type traffic and queue client classes that will handle the event objects coming in off the WMQ queues. Event Handler service is main entry point for anything coming in to be handled by the Event Handler. This Handler also has listeners pulled off from the queues. The service required routing of incoming messages to proper processor class.    Environment: Java 1.5, DB2 , RESTFul Web Services using Axis 2, SOAP web services JAX-WS , JUnit, Maven, JBoss Application Server 7, SOAP UI, JAXB    Responsibilities:  • Designed and developed event handler SOAP/RESTFul services and exposed API for travel port vendors.  • Designed and developed message consuming and message publisher services to/from handlers WMQ.  • Involved in Writing Use Case Documents, UML diagrams and Project Design Documents using Rational rose.  • Used Google Map as mapping tool to show the qualified travel agents across the world.  • Built the Project development environment in IBM RAD and debugging the application using IBM RAD.  • Used Clear Case for event handler's version control.  • Used Test Driven Development methodology for project development.  • Implemented SOA (Service oriented Architecture, WSDL, SOAP, REST and UDDI), Consuming Web Services using Apache AXIS 2 Web Services deployment engine to improve  the scalability of application.  • Involved in the detecting the code redundancy thus improving the application performance.  • Used JBoss Enterprise Application Platform for the application  • Responsible for writing build and deployment scripts for application using maven.  • Responsible for hosting distributed modules of event on server and Load balancer.  • Implemented Agile Software methodology for this application. Software Developer Quest Diagnostics - San Clemente, CA October 2012 to March 2013 Project Description:  NIRLPRO - NIRL- Nichols Institute Reference Lab, Name of LIS, PRO-Patients, Results, and Orders is an advanced instrument interface architecture developed to allow fast implementation of instrument interfaces and assay information. This application was used to interact with instruments to read the results of samples and store in database in human readable format. NirlPro is lab resulting platform system which works as an interface for multiple sites (SJC, Valencia). NirlPro standardizing results in platform capabilities that offered stable system with transparency for the users. NirlPro implemented a new platform to rejuvenate the existing eLab process. NirlPro is an IT developers/User interface application, creating modules for communication and test resulting information of patient specimens to/from instruments, Lab Techs and Users and the LIS database system.    Environment: J2EE, Spring 3.0, Hibernate, Web logic 9.0, Oracle, JAX-RS, Jersey, JMS, CVS, SQL, JUnit    Responsibilities:  • Implemented NIRLPRO interface modules using Spring Modules- Spring MVC, AOP and ORM with JSP as view technology.  • Developed Ant scripts for building the project.  • Built the Project development environment in Eclipse IDE and debugging the application using Eclipse.  • Used CVS for version control  • Involved in writing JUNIT test cases.  • Implemented Agile Software methodology for this application.  • Implemented SOA (Service oriented Architecture, WSDL, SOAP, REST and UDDI), Consuming Web Services using Apache AXIS 2 Web  • Services deployment engine to improve the scalability of application.  • Participated in the performance tuning of application.  • Involved in the detecting the code redundancy thus improving the application performance. Software Engineer Net Peach Technologies Pvt Ltd - Hyderabad, Telangana March 2009 to August 2011 Project Description:  Online Meeting Registration System- This system enables all business users of organization to register for meetings online and allows reserving resources for the each event the organization handles. Application is not specific to one operating company; it can be used across all operating departments of organization. Application has ability of handling travel activity section information and their reports.    Environment: Java, Jdk 1.5, JSP, Spring 2.5, Hibernate, JavaScript, CSS, Eclipse 3.4,Weblogic Application Server 8.1, CVS, ANT, JDBC, XML, Log4j, JUnit, SQL, PL/SQL, TOAD and Oracle 10g, LDAP, MDB, JAXB, JAX-WS    Responsibilities:  • Involved in Writing Use Case Documents, UML diagrams and Project Design Documents  • Prepared query log for the initial requirement gathering  • Implemented Spring's AOP for declarative transaction management at service layer of registration modules  • Implemented spring's dependency injection for all the DAO's, Service Beans and Controllers  • Developed JAX-WS Web Service SS ORDER VALIDATION on Server side  • Developed JAX-WS SOAP Web Service to receive the sales orders from reps and process them  • Used MDB's to communicate with the Inventory status module  • Developed UI using JSP and tag libraries.  • Involved in writing application build script using Ant.  • Building the Project development environment in Eclipse IDE and debugging the application using Eclipse  • Deployed WAR in WebLogic Application server in Dev environment  • Used CVS for software configuration management  • Developed and tested registration and travel modules using Junit framework.  • Developed AJAX related code and implement in UI to get dynamic refresh of content.  • Involved in writing PL/SQL stored procedures, functions, tuning SQL Queries and Procedures  • Participated in the performance tuning of application Skills Eclipse, J2ee, Java, Hibernate, Spring, Jax, Jax-ws, Jboss, Jms, jquery, Jsp, Rmi, Servlets, Visual studio, Application server, C++, Docker, Git, Bootstrap, Node.js Additional Information Skills Inventory  Languages:  Java (JDK1.4/1.5/1.6/1.7/1.8), C, C++, SQL, PL/SQL,NOSQL    Web/Distributed Technologies: J2EE, Servlets 2.x/3.x, JSP 2.x, JSTL1.1, JDBC 2.0/3.0, RMI, XML, SOA, UML, MVC, Spring 3 ,Spring Boot, Spring security, JMS, Hibernate, JAX-WS, JAX-RS ,MQ, GraphQL    Scripting: JSP 2.x, Java Script, JQuery, HTML5, DHTML, CSS3,Bootstrap, Unix Shell, ReactJs,Node.js, ExpressJS, ,Angular    Plugins: Grunt, Gulp    Frameworks: Spring, Hibernate    RDMBS: ORACLE 8i/9i/10g,12c, DB2,Postgres,MySQL    NOSQL DB: MongoDB 4.0    Web/Application Servers: Tomcat , WebSphere Application Server 5.1/6.0/7.0, WebLogic 8.x/9.x,JBOSS 7.1/7.2    Version Controllers: SVN, CSV, Clear Case, GIT, GitHub, Bit bucket,    Build and Deployment: Jenkins, Docker containers, Kubernetes, AWS EC2, S3,Maven    IDE / Tools: RAD, Eclipse IntelliJ, Confluence, JIRA,Sublime,Webstorm, Visual Studio    Methodologies: Unified Modeling Language (UML), Agile and Test Driven Development