Lead Architect & Senior.Net Developer Lead Architect &amp; Senior.Net <span class="hl">Developer</span> Lead Architect & Senior.Net Developer - Windstream Communications Frisco, TX Experienced architect providing enterprise scale solutions with focus on process improvement, team  building and nurture of team members. Over ten years of experiences working with various business  domains introducing and implementing solutions to enhance operations and achieve their goals.  Accountable team-oriented leader and perpetual learner with love for automation and blend of sarcasm Work Experience Lead Architect & Senior.Net Developer Windstream Communications May 2013 to Present Project Synopsis: Customer Resource Management (CRM) Portal used by Customer Service  technicians and field technicians to manage customer accounts and data of various sub-platforms of Windstream Communications.    Responsibilities:  • Architected application tier and presentation tier of web application using MVVM and lead a team  of developers for initial phase.  • Designed application using Razor Engine, HTML 5, ASP.NET MVC, Bootstrap 3, CSS3, JavaScript, JQuery, Data Tables and Knockout for a rich UI designs, faster development process, Code  consistency and cross browser support.  • Introduced new discipline of development like Code review, Object oriented flow, adhering to Agile development.  • Introduced Microservices architecture to further enhance service layer and standardize as an API.  • Implemented .Net Core microservices deployment management using Docker, Kubernetes and Rancher.  • Automated Azure DevOps pipelines for microservice and regular .Net applications.  • Developed and encouraged habits of enterprise level development across team members for effective team work and efficient product.  • Created customized JavaScript plug-ins to meet the specific requirement of the client.  • Guided team and resolved roadblocks, assigning, reviewing and connecting bridges with different  teams to deliver and resolve key functionalities in the application.  • Lead project through Agile development and expertise, using JIRA and FISHEYE for delivery.  • Managed 6 lower environments and Production environment with on shore/off shore team.  • Implemented documentation comprehensively across team for all modules and conducted  knowledge share sessions to learn various developments happening across team.  • Improved performance of an application by optimizing code, reducing TTFB time, decreasing the size of render load, and implementing AJAX.  • Improved productive time of developer by implementing Admin tool to let business users manage  user privileges, role level visibility.  • Created WCF Services and set standards of process for reaching different data sources.  • Optimized code and implemented fast and consistency by creating wrappers around ODP.NET, AJAX and field mapping processes.  • Reduced lines of code (LOC) by refactoring common functionality, reusability by using partial views  and scripts centralization, load reduction by minifying/bundling files.  • Optimized deployment process by 80% for Production by automation using Batch, Shell, Groovy, Jenkins Pipeline.  • Implemented CI/CD process for lower environments using Jenkins nightly builds, automation  scripts.  • Created Web APIs, OData Standard APIs for external Object integration to Salesforce system.  • Introduced VueJS, removed unnecessary tiers and implemented single page applications using Vue  Js for faster development.    Environment: .Net Framework 4.0, MVC 4.0, C# 4.0, Knockout 2.2, Data Tables.NET, Bootstrap, JavaScript, JQuery, VueJS, WCF, RIA Services, CSS, ODP.NET, Oracle 11g, GIT, Source tree, Jenkins,  Batch, Shell, Groovy, Docker, Kubernetes, Rancher, Azure DevOps Lead Architect/ Senior .Net Developer IProspect December 2011 to May 2013 Project Synopsis:  This project is about developing and maintaining multiple applications that process search and tracking data received from various sources like Google, Bing etc., consolidate and analyze data, use  Strategic Results System (SRS) to adjust and improve campaign performance for iProspect clients.    Responsibilities:  • Migrating current SRS web application to new portal using ASP.NET MVC framework.  • Manage deployment and implement enhancements for new portal In MVC 3.0, RAZOR and ASP.NET.  • Dependency Injection (DI) is implemented using Microsoft Unity (IoC Container) to reduce coupling  between components.  • Manage offshore team and handle escalated issues relevant to existing applications.  • Test existing applications and deploy releases to production.  • Improved project development and deployment process for efficient code management.  • Develop reports and dashboards using MicroStrategy for client  • Generate packages using SSIS for moving or processing data to database from different sources.  • Added enhancements to Billing Manager for easy transactions and transformations of invoices.  • Implemented daily, weekly reports for each client in Micro strategy and added enhancements to client dashboards to show KPI's for variable date ranges.  • Implemented Double Click data connector to download and process data into company databases  using SSIS.  • Monitor Search and Tracking data loads and fix issues, process and QA data downloaded.    Environment: C#, ASP.NET 4.0, MVC 3.0, Entity Framework 4.0, RAZOR, JQuery, JavaScript, LINQ, SQL  Server 2008 R2, Visual Studio 2010, SSIS, MicroStrategy, Telerik Controls, Tortoise SVN Lead Web Developer EX Squared Solutions Inc October 2010 to December 2011 Project -1: Teledynamics (TD)-TDisane-commerce application, used to consume electronics and telecommunication products. It has two modules, Admin - for write/CMS operations. Dealer - for  product search, payment, batch order, tracking, e - commerce operations.    • Estimated the requirements and designed the core structure of the N tier application.  • Lead a team of 3 developers in developing the Dealer module, customer facing part of the project.  • Developed the application using ASP.NET MVC 3.0, RAZOR and C# 4.0.  • Implemented the complete purchase process (Add to Cart to Purchase Order).  • Implemented HTML5 feature to drag and drop doc and upload orders from excel.  • Integrated application with Third party API's like Paypal Payflowpro for processing credit card  payments, with Shipping Integrator for estimating shipping and tracking shipment.  • Used Repository pattern for loose coupling between the different layers and ease in testing.  • Dependency Injection (DI) is implemented using Microsoft Unity to reduce coupling between components.  • JQuery templates, JQuery UI effects are widely used to improve speed in rendering data loaded  using Ajax.  • Entity Framework 4.0 and POCO templates are used in the Data layer to interact with the SQL Server Programmer Analyst Dell Inc May 2010 to October 2010 Project Synopsis:  Global Catalog services: Global Catalog Services, part of eDell project, is a collection of data  maintenance applications and web services. The application maintains organizational, structure data  that is consumed by downstream applications to display information in different ways on the Dell.com website.    Responsibilities:  • Gathered all requirements and participated in client meets throughout the project.  • Project is implemented using agile software development methodology.  • C#, ASP.NET Dynamic Data is used to make AJAX calls on the maintenance UI pages.  • Domain services (Create, Insert, Update and Delete) are implemented over ADO.NET Entity  Framework 4.0 as Data layer for maintenance UI.  • Test Driven Development (TDD) is used to improve efficiency in code development for Batch Upload  System.  • ADO.NET is used as Data layer for improve the performance of the maintenance application.  • Service Oriented Architecture (SOA) is incorporated by using WCF Web services that sends data to the front-end UI.  • Windows Authentication is used to authorize team members and to access data from database.  • Interfaces, Event handlers are used for Batch Upload system to implement Publisher-Subscriber  system and upload different kind of batches using the same process.  • Stored Procedures, Triggers, Functions are used in the backend to interact with the SQL Server  database.  • Performed Unit testing and Integration testing on all methods using Microsoft testing following  business requirements.  • Followed up with the testing team to modify components and fix bugs/ issues.    Environment: C#, ASP.NET 4.0, Dynamic Data, Entity Framework 4.0, JQuery, LINQ, ADO.NET, WCF, SQL Server 2008, Visual Studio 2010, Test Driven Development, Microsoft Testing .Net Developer Sally Beauty Supply, TX October 2009 to April 2010 Project Synopsis:  POS Support Tracking Tool: Sally Beauty Supply is the leading retailer of professional beauty supplies.  POS Support tracking tool is a web application developed to assist Support team help and trouble  shoot over 3000 stores around the world. It contains modules that display latest information from the corporate server, controls that let you look, edit and synchronize data from the corporate server  with the corresponding stores. Employee section displays updated information of the employees, and let the support team Edit/Email based on role hierarchy.    Responsibilities:  • Analyzed the business requirements and participated in meetings throughout the project.  • Used SCRUM development methodology for the project.  • Developed application using ASP.NET MVC framework, VB.NET in Visual Studio 2010.  • Designed Background images, icons, and CSS pages using Adobe Photoshop, Illustrator.  • ADO.NET Entity Framework, LINQ is used at the Data layer to work against a Conceptual Application  Model.  • Domain-Driven Design (DDD) is implemented in the application by using POCO (Plain Old CLR  Objects) to make application unaware of persistence concerns.  • Created stored procedures and triggers to enhance security and efficiency of the application.  • Unity Application Block (Unity), IOC Container is used to implement dependency injection and to make application decoupled or loosely coupled.  • Windows Authentication is used to authorize and provide access support team staff as the application is used on company's domain.  • Object oriented (OOPS) concepts like Inheritance, Polymorphism are used throughout the application for ease of maintenance.  • Repository Pattern is used to interact with the Object Interfaces in order to apply consistent rules  and logic in the application.  • ASP.NET MVC features like Action Filter Attributes, Custom HTML Controls and Model Binders are  used to display data and encourage code re-usability.  • Enterprise Library 4.1 is used to facilitate best practices in exception handling, logging, security and data access.  • Used JQuery for HTML Validation and to make AJAX calls to make asynchronous calls to database  and display in customized menus.  • Performed Unit Testing on the modules by using NUnit according to the requirements and development standards.  • Regularly followed up with the testing team to discuss the bugs/suggestions identified during testing.    Environment: ASP.NET 4.0, .NET MVC Framework RTM, JQuery, LINQ, VB.NET, SQL Server 2008, Visual  Studio 2010, Windows XP Pro, IIS 7.0, N Unit .Net Developer TACC August 2008 to August 2009 Project Synopsis:  UrbanDive is an online community for people and for businesses. The site will specialize in bringing  communities, both businesses and individuals, closer together. The web application contains  Registration module, Auto Email/Text module to remind events, Calendar that shows all events, Businesses search module to search all businesses in the country. Also developed a Win forms  application developed for a client to search, sort, import and send customers details from fox pro dbf  files to administrator. Tech Support Customer Tracking System is company's internal tracking web  application used to search customers, create case numbers, edit/delete/update case status, reviews, and feedbacks.    Responsibilities:  Project - 1: Urban Dive:  • Analyzed the business requirements and participated in meetings throughout the project.  • Developed UrbanDive website using ASP.NET MVC framework in Visual Studio 2008.  • Implemented HTML and CSS GUIs to test backend solutions.  • Integrated Facebook with the webpage using Facebook Connect API to let users gain access to their  Facebook account and edit the feeds in real time.  • LINQ to SQL classes like Data context are used to update user information obtained from Facebook.  • Designed tables in Microsoft Visio and created them in SQL Server 2008.  • Created stored procedures and triggers to enhance security and efficiency of the application.  • Imported list of businesses into the database using Bulk Import and created a platform to search a business in the country.  • Programmed Data Access layer ADO.NET Classes for dynamic editing, sorting and displaying results.  • Used Custom HTML Controls to display data and encourage code re-usability.  • Created complete Email/Text application that can import contacts from Excel, Access files.  • Developed Windows and Web services to schedule and automate sending emails to customers.  • OleDb Interface is used to interact with Excel and Access Databases and import information.  • Used SMTP protocol for sending Emails and FTP protocol for sending text messages through an external client.  • The application uses OleDb Interface to interact with different databases and download email files in Excel, CSV formats.  • Performed Unit Testing, Integration Testing and Load testing on the modules by using N Unit  according to the requirements and development standards.  • Regularly followed up with the development team to discuss the defects identified during testing.    Project - 2: Tech Support Customer Tracking System:  • Designed and developed WebPages using ASP.NET MVC and SQL Server 2008.  • Customer Search/Edit/Delete module is developed using AJAX, JavaScript and JQuery.  • Developed Charts and Tabular reports in Excel and Web format using SQL Server Reporting services  (SSRS).    Environment: ASP.NET 3.5, .NET MVC Framework 1.0, JQuery, LINQ, C#, SQL Server 2008, Visual  Studio 2008/2010, Windows XP, IIS 7.0, N Unit .net MS Unit 2008 to 2008 database.  • Supported the application by doing performance tuning, fixing bugs using FogBugz and testing  using MS Unit testing.    Project -2 NCI Projects - The Real Estate Book (TREB) - TREB is a real estate web application used to browse available homes/foreclosures/search brokers all over the world. Project involves migration of domain and backend services to new hosts.    • Gathered requirements and updated Business rule document (BSD) after discussing with the Client.  • Developed application using ASP .NET MVC 2.0 and C# 4.0.  • Implemented authentication of users by using C# 4.0 Forms Authentication and Membership  Services.  • Designed various routes for the web app so that all the specific pages are routed according to Business rule and the rest are handled.  • Search bar is implemented to handle multiple search types like city, state, zip, and neighborhood  using JavaScript and Jquery AJAX.  • Implemented logging and error handling to log errors thrown in production.  • Fixed various bugs across the app and tested browser compatibility.  • Deployed TREB into production and tuned pages for performance optimization.  • Supported testing in the Development, Test and Production environments.    Project -3 NCI Projects - Unique Homes (UH) - UH is a real estate web application used to search  unique home properties/ developments/ specialists all over the world. Project involves migration of domain and backend services to new hosts.    • Gathered requirements and updated Business rule document (BSD) after discussing with the Client.  • Designed and developed the application using ASP.NET MVC 2.0 and C# 4.0  • Created stored procedures and inline query calls using LINQ to Entities to improve efficiency.  • Used JQuery to implement a generic search system for all kinds of searches made on the web page.  • Fixed various bugs across the app and tested browser compatibility.  • Deployed UH into production and improved performance of pages loaded to more requests per sec.  • Supported testing in the Development, Test and Production environments.    Environment: C#, ASP.NET 4.0, MVC 3.0, HTML 5, Entity Framework 4.0, RAZOR, JQuery, LINQ, SQL  Server 2008, Visual Studio 2010, Microsoft Testing, Sourcegear Vault, Jquery Templates, POCO  Objects, FogBugz Education Master's Master’s in computer engineering Skills AJAX, ASP, CSS, INTERNET INFORMATION SERVER, IIS, ASP.NET, WEB SERVICES, jQuery, .NET, VISUAL STUDIO, VISUAL STUDIO .NET, VISUAL STUDIO .NET 2012, API, C#, DOCKER, Git, HTML, JAVASCRIPT, BOOTSTRAP, JENKINS, TECHNICAL EXPERTISE Development Technologies: ASP.NET MVC 3/4, Web Forms, ADO.NET, ODP.NET, WPF, AJAX, HTML 5, XHTML, XML, CSS 3, WSDL, XAML, CSHTML, Telerik Rad Controls Frameworks: .NET Framework 3.0/3.5/4.0/4.5 Containerization: .Net Core 2.2, Docker, Kubernetes, Rancher JavaScript Frameworks: JavaScript, JQuery, Bootstrap, Vue JS, Knockout JS Programming Languages: C, C#, Visual Basic ORM Frameworks Entity Framework 4.5, LINQ, NHibernate, Dapper API: WCF, Web Services, Web API Rest DBMS: Oracle11g, MS SQL Server 2008, MS Access, SQL Developer Development Tools: Visual Studio .Net 2012/2015/2017, Microsoft Testing Tools Source Control: TFS, GIT (Bitbucket, Source Tree), Source gear Vault Application Deployment: Internet Information Server (IIS) 6.0/7.0/7.5 Operating System: Windows 7/8/10/Server, Linux Web Protocols: HTTP, SMTP, SSL, SOAP, FTP Code Comparison: Beyond Compare, Win Merge, Tortoise SVN Automation: Jenkins, Azure DevOps, Batch, Shell Code Review: Fish Eye Agile Development Tools: JIRA, FogBugz Ticket/Change Management Tools: Spira, Remedy, Bitbucket APM Tools: Dynatrace, App Dynamics Project Documentation: Ghost Doc, Sandcastle Reporting Tools: Microstrategy, SSIS, SSRS Code Analysis: Resharper, VS 2017 UML Tools: MS Visio, MagicDraw, Atlassian Wiki Unit Testing: MS Test, NUnit (10+ years)