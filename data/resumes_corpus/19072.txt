C++/ Python Developer C++/<span class="hl">Python</span> <span class="hl">Developer</span> C++/ Python Developer Fremont, CA ? 15+ years of extensive experience in C++, VC++, C#.NET, Shell Scripting and Python.  ? Experience in Inter-process Communication, Socket Programming, Windows Programming, DLL, ATL/COM, ActiveX Control and API/SDK interface, Multithreading.  ? Experience in writing SQL queries, stored procedures, and packages.  ? Fully conversant with Systems Development Life Cycle (SDLC)  ? DOMAIN KNOWLEDGE: Medical Imaging, Machine Vision systems with expertise in Automation Systems Software development, Gaming and Automotive.  ? Experience in software application development for automotive domain, Medical Imaging, Gaming Domain and Machine Vision systems (Image-Processing applications)  ? Expertise in Imaging Software application development using standard imaging libraries like NI Vision development tools, OpenCV.  ? Experience with serial communications including RS232 and RS485.  ? Good knowledge on UNIX and Inter Process Communication like Pipes, Message queues.  ? Expertise in designing, developing efficient, reusable, and reliable backend software in C and C++, multithreading in UNIX and Linux platform using Boost library and STLs such as sets, maps, list, stacks and queues, data structures and algorithms.  ? Expertise in Python, Linux shell (ksh, bash) scripting and application debugging.  ? Experience using Python and Image Processing library.  ? Well versed with Agile, and Waterfall methodologies.  ? Used Jira and other project management tools.  ? Experience with Microsoft visual studio.  ? Knowledge on Shell Script, SQL server in writing queries and software design, code optimization, operating systems.  ? Generated reports using various reports generation tools/services like SQL Server Reporting Services and Crystal Reports.  ? Experience in writing SQL queries and stored procedures and packages.  ? Experience on ticketing tools like JIRA, ServiceNow and their workflows.  ? Proficient at debugging code. Acted as second and third level support for various positions.  ? Handled late-night production issues. Dispatched hotfixes.  ? Applied knowledge of machine-learning, Image processing algorithms and associated tools.  ? Proficient in using static analysis tools and caught many bugs before production release.  ? Experience in WIN32 application development.  ? Proficient in working with 3-Tier/N-Tier Architectural based code development. Experience in all phases of application development including User Interface/ Presentation, Business Logic and Data tiers.  ? Strong in software development models and theories, such as the object oriented programming (OOP) model and Event-Driven Programming.  ? Experience in Memory Management.  ? Strong analytical and problem-solving skills, always striving for new knowledge.  ? A person with multi-tasking and organizational skills and high ethical standards.  ? Team Handling, Customer/Client Communication, mentoring junior team members.  ? Excellent team player, keen learner, strong problem solving & analytical skills, and effective communicator. Work Experience C++/ Python Developer Vision Inspection System March 2018 to Present The Vision inspection system acquires images by the digital cameras and analyzes them with Specific algorithms to determine a pass or fail decision. The project was aimed to check visual defects as well as for dimensional measurements with 2 micron accuracy. Finally, the image processing system sends instructions to sort the pass or failed components. Following parts of the engine valves are considered for specific inspection (Head, Seat, Neck, Stem, Groove and Tappet end)    Responsibilities:  • Responsible for gathering software requirements, Analysis, Design, Development, testing and deployment.  • Involved in writing optimization techniques in image processing algorithms for more accuracy in measurement object.  • Involved in Win32 API.  • Involved in Memory Management.  • Worked on SDLC methodologies like Agile involved in the development of the project.  • Wrote and executed various MySQL database queries from python using Python-MySQL connector and MySQL DB package.  • Investigated and reproduced code/database problems with UNIX.  • Reviewed codes in Shell Script, and Python,  • Involved in production support and providing hotfixes to the production issues.  • Performed Unit testing, System Integration testing, and Performance testing.  • Assisted and resolved issues in User Acceptance testing.  • Review design, code and test cases developed by team.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Involved in the project documentation using MS-Office, Vision.  Environment: C++, Python, UNIX, Shell Scripting, XML, Camera SDK, OpenCV SDK, Multi-Threading, Inter process communication, Socket Programming. C++ Developer LD-Mapping - Fremont, CA May 2013 to January 2018 Description: Objective of this System is to read the Characters (CELL ID, BAR ID & DEVICE ID) on the  LD-Chip of size 250x400um. System uses high-magnification Camera for capturing top-view image and it is being processed to read the characters on the LD surface using OCR.  Responsibilities:  • Responsible for gathering software requirements, Analysis, Design, Development, testing and deployment.  • Involved in writing optimization techniques in image processing algorithms.  • Review design, code and test cases developed by team.  • Involved in setting up the environment for production.  • Executed unit, functional and Regression test suites to ensure 100% quality results.  • Worked on triaging issues, bug fix, integration testing, push monitoring, release readiness and code reviews.  • 24/7 product support (bug fix and environment setup) when the product is running in production unit.  • Provided support for internal business process and responsible for communicating detailed technical information and providing technical assistance, systems, and management and external sources.  • Designed, implemented and maintained a multithreaded server that received and processed acknowledgment messages from downstream applications regarding event data pushes using C++, STL, multithreading, shell scripting, and UNIX.  • Participated in the development of a multithreaded publish/subscribe process which consisted of several subscription and push servers using C++, STL, multithreading, shell scripting, and UNIX.  • Developed an in-house tool using shell scripting to make the day-to-day developer operations like pulling code from latest branch automatically, checking latest labels in code, copying libraries from development environment to test environment, scripts that helps product users to simulate the error and create necessary logs.  • Work as a product client team developer on a variety of platforms including Windows, UNIX and Linux distribution using C/C++.  • Provided on Call Support for Critical Production Problems.  • Managing Service Requests until their successful completion.  • Checking in the code into the Code Base by using the source code version control tool subversion.  Environment: C++, UNIX, STL, Shell Scripting, LabVIEW, LabWindows/CVI, OpenCV, SVN, PerForce, Windows and Camera SDK C++/VC++ Developer Game development for Video December 2008 to February 2013 Description: Video lottery terminals (VLTs) function much like gaming machines. The player inserts payment, selects an amount to bet, selects a combination of numbers and pushes a button to play the game. Numbers are randomly generated via a hook-up run by the lottery. If the player wins, they have the option of taking the money out of the machine or keeping it on the meter for future games. Involved in development of the reel games for NewYork, Quebec, Manitoba and ALC market by using the Spielo proprietary framework called SGF which runs on Linux/Windows operating systems.    Responsibilities:  • Designed LLD's (Low Level Design), DB-Design, screens, Data Flow Diagrams, Workflow Diagrams, Product Backlog Document.  • Created functional and technical specifications based on the requirements.  • Worked on porting of different reel games.  • Worked on new user stories for feature development to enhance the product.  • Resourcefully applied code modifications for enhancements and defects to meet customer needs.  • Executed unit, functional and Regression test suites to ensure 100% quality results.  • Worked on triaging issues, bug fix, integration testing, push monitoring, release readiness and code reviews.  • Installed and configured Robot Operating System in Linux (Debian) version of ARM microprocessor to enhance cost-effective robots.  • Developed Application that would allow transfer of log files from Linux (Debian) computer to Linux server using C++ multithreading environment. These log files are served using the web interface to any computer locally using C++ CGI and LAMP.  • Designed and developed a Mark-to-Market application to mark the securities with market prices to evaluate the collateral margin exposure. Utilized C++ templates, OO Design Patterns. Developed new locate modules (to match short sell trades) using C++, Shell Scripting, Oracle on Solaris and Linux.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Used bug-tracking tools like JIRA and service now to track the production issues.  • Involved in front ending the dev team in discussions with the different teams (Game designers/Math/Graphics/sound/platform/Template/GDK)  • Involved in setting up the environment for the game signoffs.  • Involved in Code reviews, unit / integration testing.  • Coordinated with off shore team and got the work done.  Environment: VC++/C++, Linux, Shell Scripting, Graphedit and FilterGraphSpy and XML. Senior C++/VC++ Developer Automotive Diagnostic Solution Domain April 2007 to December 2008 Description: The basic aim of diagnostics is to detect and report faults in an ECU (Engine Control Unit)  To support the configuration and programming of all modules by the 'Module Configuration and Programming Re-write' (MCPR) software.  Faults can be classified into two categories: •Intermittent Faults that occur only under certain conditions. Since the symptoms of an intermittent fault may not be present during inspection in the workshop, a mechanism is needed to store fault related information as soon as the fault is detected, as well as a mechanism to retrieve this fault data from the ECU at a later occasion. With help of this fault data, the fault condition can then be recreated in order to determine the fault.  •Permanent Faults that remain after they first occurred. Tracing permanent faults basically needs a mechanism to read the ECU's current status.  Responsibilities:  • Excelled in guiding the work of technical teams. Articulated project goals and scope, translated business needs into technical terms, prepared detailed work breakdown structures (WBS) and instilled shared.  • Responsible for Development/Enhancement, bug fixing as well as Production Support.  • Analyzing, designing and implementing change requests for the C++/VC++.  • Initiated a comprehensive issue tracking process that improved communication and issue resolution for cross- functional teams and senior management.  • Shared the ideas to meet the future market demands for the existing and new products. And, created the open platform discussions within the organizations for ideas sharing and brainstorming.  • Investigated and reproduced code/database problems with UNIX  • Involved in writing optimization techniques for more accuracy of Macros in C/C++, C and C++ routines and Oracle SQL, Shell Scripting, PL/SQL.  • Develop simulation and interfacing methodology for the testing software.  • Provided support for internal business process and responsible for communicating detailed technical information and providing technical assistance to customers, systems, and management and external sources.  • Provided on Call Support for Critical Production Problems.  • Coordinating with End Users with version releases.  • Involved in customer query resolution and maintenance of the messaging products like MQ series.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Responsible for project lifecycle documentation and day to day status reports.  • Maintaining Quality measures as per the agreement policy.  • Prepared knowledge base documents.  Environment: Visual C++, UNIX, Shell Scripting, MCPWizard, SQL-Loader, Microsoft DirectShow SDK, Graphedit and FilterGraphSpy C++ Developer Konica Minolta - JP January 2006 to April 2007 Konica Minolta contributes to Health care, by offering a wide range of systems and services, especially the input/output of medical images for diagnosis. The CS-1/3 application is a console developed for managing the digital X-Ray images. It is the central processing zone using which Patient details, X-Ray images; Doctor Reports etc. are being managed. Patient information along with study, orders and X-rays images are scheduled and managed. After X-Ray, images are being shared with other physicians for various discussions and remarks/focus is made on the images itself for further reference    Responsibilities:  • Designed LLD's, HLD's, screens, Data Flow Diagrams, Workflow Diagrams and Product Document.  • Created functional and technical specifications based on the requirements.  • Responsible for Development/Enhancement, bug fixing as well as Production Support.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Interacted with the Business Customers in other countries in order to make sure that the product we delivered working as per the design.  • Troubleshooting the application and database issues in Production and resolving them well below the SLA timelines.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Performed Unit testing, System Integration testing, and Performance testing.  • Design Lead for re-design and implementation of GUI interface from MFC based application running on Windows to a QT based application running on Linux  • Involved in server setup & code deployment on Linux platforms.  • Assisted and resolved issues in User Acceptance testing.  • Review design, code and test cases developed by team.  • Designed prod implementation check list.  • Managing Service Requests until their successful completion.  • Involved in change management activities for deployment into the production server.  • Worked on production bugs and application performance issues  • Provided work efforts to Team lead for Work Breakdown Structure  • Implemented best practices, standards and procedures including quality and delivery methodologies.  • Prepared knowledge base documents.  Environment: C, C++, STL, Window, Linux, multithreading, Agile/Scrum, OpenCV, OpenCL, Spotfire, SVN, research. VC++ Developer LMW - Spindle Ring Inspection System September 2003 to June 2005 Description: The main objective is to inspect the spindle ring for plating defects. Images were taken simultaneously using area scan and line scan cameras and analyzed with specific algorithms to find plating defects and dimension measurement using (Canny Sub Pixel Edge Detection algorithms), Final decision was taken as per the images obtained.    Responsibilities:  • Responsible for gathering software requirements, Analysis, Design, Development, testing and deployment.  • Involved in writing optimization techniques in image processing algorithms for more accuracy in measurement object.  • Implemented Algorithm to find Inner-dia, Outer-dia, Ovality, Surface damage (Inner, Outer and Top part), Pinhole, Rough Finish, Pitting at profile, Peel-off, and Rust.  • Involved in Win32 API.  • Involved in Memory Management.  • Worked on SDLC methodologies like Agile involved in the development of the project.  • Involved in production support and providing hotfixes to the production issues.  • Performed Unit testing, System Integration testing, and Performance testing.  • Assisted and resolved issues in User Acceptance testing.  • Review design, code and test cases developed by team.  • Checking in the code into the Code Base by using the source code version control tool subversion.  • Involved in the project documentation using MS-Office, Vision.  Environment: VC++, Window, UNIX, camera SDK, OpenCV, Image Processing Library, LabVIEW. Education Masters of Computer Application in Computer Application Indira Gandhi National Open University Skills C++ (10+ years), Subversion (10+ years), SCRIPTING (10+ years), SHELL SCRIPTING (10+ years), LINUX (10+ years), Embedded, 3D, Programming, QT, C Certifications/Licenses Driver's License Additional Information TECHNICAL SKILLS:  Programming Languages C, C++, VC++, C#.NET, Python and Shell Scripting.  Hardware/OS Exposure PDA code deployment and debugging, OS level debugging and Windows 9x, NT, 2000, XP, UNIX, Linux  Databases Microsoft SQL Server and MS Access  Libraries & Frameworks  OpenCV, STL, IPC, multithreading, sockets, heap allocators, signals/event handling, Design Patterns. Image Processing Libraries,  CannonSDK, CCD Camera SDK, Ueye Camera SDK, Microsoft DirectShow SDK, Graphedit and FilterGraphSpy    Version Controls Microsoft-VSS, SubVersion (SVN), Perforce, Clear Case  Tools LABVIEW, LABWINDOWS/CVI, OPENCV, ECLIPSE, UML TOOLS, MS-OFFICE, JIRA