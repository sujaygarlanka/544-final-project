Mule ESB Developer Mule ESB <span class="hl">Developer</span> Mule ESB Developer - Hertz Corporate Headquarters Electrical and Communication Engineer with 1 year experience as Mulesoft/ Mule ESB Developer and 1 plus years of hands-on experience as test and validation with python scripting.  • Test experience using QCT tools such as QXDM, QPST and RATs such as LTE and GSM.  • Expertise in API Development, technology design of web services, assessment and clarification of user experience and requirements, troubleshooting and application support and technical leadership in implementation decisions.  • Excellent knowledge on Communication techniques along with debugging, problem solving, optimization and testing skills.  • Working knowledge of LTE call processing & physical layer.  • Extensive experience in CI/CD, DevOps and Agile methodology. Work Experience Mule ESB Developer Hertz Corporate Headquarters - Estero, FL July 2017 to Present Responsibilities:  • Experience with Integration Architecture concepts and patterns, including Microservices, Service Oriented Architecture, Batch Integration, RESTful JSON services, etc.  • End to end development of Resrent [Reservation and Rental] applications for create, modify and cancel reservations using OTA 2016 schemas. Support QA, UAT and Production teams throughout for the development and deployment issues.  • Development of integrations involving Salesforce and Brierley systems for the customer loyaltyware balance points, account summary, account activity informations.  • Developed applications to store the rental reservations data in a large centralized repository called datalake. Worked closely with azure data platform team for raising tickets and resolving datalake related issues. Integrating RabbitMQ with Mule and publishing an Employee Details onto a queue using RabbitMQ.  • Collaborate closely with other scrum teams and cross-functional development and business teams to design high quality integration solutions that are extensible, reusable, and secure.  • Unit and functional test implementation and execution using Munits and Postman execution.  • Created inbound and outbound flows as well as transformations and orchestrations by using Mule ESB.  • Knowledge of SOA Design patterns for building middleware systems ground up using Message Routing, Content Enrichment, Message Filtering, Message Transformation, Message sequencing, Batch message processing and error handling mechanisms.  • Building integration solutions using an asynchronous message-based architecture via ESB platforms such as Active MQ and WMQ.  • Proficiency in web service design using RAML (with JSON/XML) and ODATA.  • Implementation of REST and SOAP protocols. Development of web services and WSDL.  • Experience leading technical teams and mentoring junior level resources, consultants, and clients while leading internal initiatives to grow services organization practices  • Implementation of additional jar files for the applications involving databases such as cosmosdb etc. Configuration of appropriate parent POM files with latest versions for the execution of project for latest maven version.  • Migrated Mule ESB 3.7 apps to Mule ESB 3.9 and updated all the dependencies.  • Utilized custom logging framework such as PCI and PII for Mule ESB application.  • Built the integration interfaces using MuleSoft and deployed them on MuleSoft CloudHub and used Mule Standalone Server as well for on-Premise deployment.  • Used encryption algorithms to encrypt the fields in the environment properties.  • Use of dataweave function to query the data, to log information from payloads, to route data to another flow and also for quick payload transformation.  • API Management, Data Transformation and Mapping Skills and usage of cobol copybook.  • Use of Jenkins and maven for code deployments. Splunk access for validation and verification of events.  Environment: Studio runtime version 3.8.5, RAML, SCRUM, Datalake Azure, Spring boot, Splunk (6.6.3.4), Jenkins (2.46.2), ODATA, WMQ, flatfile, cobol copybook, REST/ SOAP. Internship Alcatel OneTouch, TCL - San Diego, CA March 2016 to June 2017 Responsibilities:  • Hardware device testing for Windows 10 using Hardware Lab Kit.  • Power optimization on Idol 4s, Pop 5, Goflip2 mobile devices using power monitor.  • Validation and troubleshooting of Alexa in Xess Launcher device.  • Implementation of message and notification on an android device using PUSH Server, AWS Cloud.  • Setup and build AWS infrastructure various resources, VPC EC2.  • Implemented and tested enhancement feature requests to enhance product functionality.  • Tested Goflip2 and mercury mobile devices in Qualcomm lab using QXDM and QPST tools and inferred wifi and network issues with good knowledge of SIP protocol.  • Device flashing using FFUTool, TPST, Teleweb and adb debugging using adb commands and tcpdump.  • Flashing and loading new builds. Performing handset testing & check for relevant or critical service issues when discovered. Collecting android logs such as Main, Event, Kernel, Radio logs etc.  • Handset testing on ours and competitive products (Android, FireFox OS, IoT Platform) for each build using test strategy and test plans to achieve early detection and low field claims.  • ET (Exploratory testing) on multiple products builds and found several high priority issues.  • Worked on phone guard apk and analyzed the IP leakage using network connections.  • Active involvement in monitoring server performance, network traffic to reduce performance bottleneck.  • Supported with Kids watch API and the task executed is related to binding application.  • Check the VoLTE and LTE call flows complaint to 3GPP specifications.  • FOTA/GOTA/Web Download /other upgrade methods and reporting issues with minute details. Thorough knowledge of wireless lab and field testing experience. Understanding of SW testing techniques and methodologies.  • Installation, configuration and support of Linux systems. Network configuration on Linux.  • Automate Linux system maintenance tasks using shell scripting.  • Arranged the Hardware and software requirement for the Test Setup. Created and sent the Status Report (Daily, Weekly etc.)  • Built servers using AWS, importing volumes, launching EC2, RDS, creating security groups in the defined virtual private connection.  • Tracking and report testing activities, defects discovered and their status, etc. for each release.  • Assisted in performing applicable maintenance to tools used in testing and resolve issues if any. Collected Logs of all related issues in the defect tracking tool identified for the project.  Environment: Python 2.7, AWSAndroid studio, Eclipse-mars, QXDM, QPST, Teleweb, power monitor, FFUTool, TPST, adb wifi, Android USB device manager, PUSH server, AWS. Python Developer Edureka January 2014 to July 2014 Responsibilities:  • Use of NumPy, SciPy, Scikit and PANDAS python libraries.  • Exported/Imported data between different data sources using SQL.  • Maintained program libraries, users' manuals and technical documentation.  • Basic understanding of front-end technologies, such as JavaScript, HTML, and CSS.  • Proficient understanding of code versioning tools such as Git.  • Carried out various mathematical operations for calculation purpose using python libraries.  • Knowledge of machine learning in python. Examples studied are KNN Algorithm, K-mean algorithm  • Implement code in python to retrieve and manipulate data.  • Theoretical knowledge of Hadoop.  • Managed our servers in development, testing, certification and production.  • Used Git, managed Gitlab repositories and other users.  Environment: NumPy, SciPy, Scikit, PANDAS, matplotlib, SQL, HTML  GRADUATE PROJECTS:    • Simulate the components of a BPSK modem receiver: Designing each components of a modem where the modulator delivers samples through the channel, spin the channel output, down sample and deliver the channel distorted, time offset, and spinning sequence to the frequency locked loop. This output is down sampled and fed to the timing recovery loop which in turn is presented to the equalizer and phase-locked loop.  • Design communication channel in Matlab: An input QPSK random data sequence is sent through a shaping followed by a matched filter .The channel induced distortion introduces ISI and the equalizer which is a FIR filter, serves to minimize its effect. Decision directed LMS algorithm is used to equalize the channel. Thus a communication channel is formed by a cascading the above process.  • Echo canceller: Designed an echo canceller to cancel the echoes caused due to acoustic coupling of speech signal into microphone of a speaker phone. Additionally, equalizers and and cancellers are built to remove the effect of communication path and crosstalk path.  • Sign Language Translator: Improve communications for individuals with hearing and speech disabilities. Use of glove, sensors and Arduino complier. The data streams are synchronized utilizing a high-speed microcontroller in order to facilitate fast processing that the text and audible streams can be generated simultaneously in real time.  • Noise filtering in Audio file: Various types of DSP filters are designed to clean up a given corrupted audio file using Matlab code.  • Simulation of OFDM: Implementation of OFDM and a shaped SC-OFDM modem whose modulator is implemented by 128-point output IFFT. Here short and long preamble are used for start of OFDM and channel estimation respectively. Education Master's in Electrical and Electronics Engineering San Diego State University - San Diego, CA August 2014 to December 2016 Additional Information TECHNICAL SKILLS:  Application Packages Matlab, Android Studio, Masm, Xilinx, Anypoint Studio  Operating Systems Windows, Linux  Tools  GIT, HLK, QXDM, QPST, HTML, XML, RAML, Wireshark, Maven, gradle, puTTY, ATCOM, power monitor, JIRA, Mulesoft, FFUTool, TPST, Agile, Powershell, Splunk, Jenkins    Language C/C++, Python, Java (Basics)  Databases Oracle SQL developer, MDM  Protocols TCP/IP Protocols, REST, SOAP  IDE Eclipse, Maven, Anypoint Platform  Technology CDMA, GSM, OFDM, LTE  Web Services AWS, EC2, JSON, RAML, CSS, Bootstrap, JavaScript, Node.js, Salesforce, SOAP UI