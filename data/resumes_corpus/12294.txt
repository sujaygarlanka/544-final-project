Java Full Stack Developer <span class="hl">Java</span> Full Stack <span class="hl">Developer</span> Java Full Stack Developer - Black Knight Financial Services • Around 7 years of strong software experience in Developing, Testing, Implementing Enterprise Applications using Java/J2EE platform and web-based applications using Object Oriented Analysis and Design(OOAD).  • Experienced on various SDLC (Software Development Life Cycle) like Waterfall, Rapid Application Development (RAD) and Agile (SCRUM) models.  • Strong experience in User Interface development using web technologies like HTML5, XHTML, DHTML, CSS3(SAAS/LESS), Bootstrap, JAVASCRIPT, JQUERY, AJAX.  • Experienced in MVVM Client-side JavaScript frameworks like Angular 2.0/4.0and  MVC frameworks like Backbone JS, Ember Handlebar JS and Knockout JS.  • Experience in React JS which is JavaScript library used for building reusable UI components  • Implemented React JS and worked with Redux and Fluxarchitecture.  • Extensive experience with Core Java, Multithreading, Transaction Management, Exception Handling, Concurrency, Collections, Data Structures, Lambda Expressions, Functional Interfaces and JDBC  • Extensive working experience with various J2EE Frameworks like EJB, Struts, JSF, JSP, JSI (Prime Faces).  • Expert level skills in spring framework modules like Spring MVC, Spring Batch, Spring Security, Spring Data, Spring Boot, Spring Cloud, Spring JTA, Spring AOP, Spring Core.  • Handsonexperienceindevelopingserver-sideJavaScriptframeworksusingNodeJS  (Hapi JS, Express JS, Handlebar JS).  • Worked with Spring Cloud Config, Hystrix Circuit Breaker, Ribbon, Apigee API- gateway and Zuul API-Gateway in the Spring Cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic, resource usage and implemented security functionality OAuth 2.0, Spring security (User Access Management, JWT), SSL and SiteMinder (SSO).  • Worked on WSDL and WADL implementing SOAP services using Axis-2 and Apache CXF (JAX-WSframeworks).  • Developed Restful web services using JAX-RS in JERSEY, Apache CXF to expose the data to springmodule.  • Extensively worked on Micro Services with Spring Boot and created dynamic documentation for RESTful webservice usingSwagger.  • Integrated Micro Services with Hibernate ORM using Spring Boot and wrote HQL queries for data access.  • Expertise in creating Databases, Tables, Stored Procedure, Triggers, Views, User defined data types (UDT),Cursors, Functions, data dictionaries, and maintaining data integrity and Indexes using SQL.    • Experience with SQL and PL/SQL to query various Relational Database Management Systems including Oracle, MS SQL, MySQL, DB2 and PostgreSQL and No SQL databases like Mongo DB, CouchDB,Cassandra, Dynamo DB and Graph DB.  • Cassandra Node Driver.  • Worked with Drools to provide Business Rules Management System (BRMS) solution that provides a core Business RulesEngine.  • Hands on experience with build tools like ANT, Maven, Gradleand logging tools likeLog4J.  • GoodunderstandingofClient-sidebuildtoolslikeGulp,NPM,Webpack,Grunt,and Bower.  • Strong experience in integration tools like Apache CXF, Apache Camel Spring Integration and Mule ESB to integrate the enterprise application technologies with existing JVMenvironment.  • Experience in testing with JUnit Framework using Mockito and Easy Mock, Spring Junit Runner,JMeter.  • Worked on testing JavaScript structures utilizing Mocha and Chai, Protractor, Jasmine andKarma.  • Strong Knowledge on automated java based behavioral testing and integration testing of the applications using Cucumber and Seleniumrespectively.  • Experience in building and deployment of EAR, WAR, JAR files on different environments in IBM WebSphere Application Serverv7.  • Experience in deploying and configuring application servers such as Oracle WebLogic, Glassfish, IBM WebSphere, Jboss and ApacheTomcat.  • Sound learning on consistent mix and persistent improvement devices like Jenkins, Hudson, Puppet andBamboo.  • Experience in Unix and Shell Scripting which allows the user to interact with OS.  • Good knowledge in building real time dashboard applications using Elastic Search, Logstash and Kibana (ELK) to profile and monitor the streaming data of theapplication.  • ExperienceinWindowsAzureserviceslikePAAS,IAASandworkedonstorageslike Blob and SQL Azure.  • Professional experience in Log4J for extensible logging, debugging and errortracing.  • Good Knowledge in Amazon Web Services (Amazon SQS, Amazon EC2, Amazon S3, Amazon Elastic Load Balancing, Amazon Simple DB, Amazon EBS, Amazon Lambda and Amazon CloudFront).  • Hands on experience in implementation of Pivotal Cloud Foundry (PCF) services such as Pivotal Container Service, Pivotal Application Service and Pivotal Functional Service.  • Good experience using Docker for installing, upgrading, testing, removing and running softwareapplications.  • Good understanding of OpenShift platform in managing Docker containersand Kubernetes Clusters.  • Made use of Apache Kafka, Active MQ, Rabbit MQ, IBM MQ as a Message Oriented Middleware for coordinatingapplications.  • UsedvariousversioncontrolsoftwaresuchasGIT,GITLAB,SVN,CVS,BigBucket for maintaining code repositories. Work Experience Java Full Stack Developer Black Knight Financial Services - Houston, TX August 2018 to Present Description:  Black Knight is the industry's leading provider of technology, data and analytics solutions that facilitate and automate many of the business processes across the mortgage lifecycle. Black Knight is committed to being a premier business partner that lenders and servicers rely on to achieve their strategic goals, realize greater success and better serve their customers by delivering best-in-class technology, services and insight with a relentless commitment to excellence, innovation, integrity and leadership.    Responsibilities:  • Implementation of the design wireframe using Angular 6 and creating services and exposing it to the backend which runs on Spring Boot. Here we also have another layer that makes use of NodeJS mainly used for authentication, authorization and session maintenance.  • Developed UI application initially using Angular 4.0and made use of customized components.  • Implemented customer side validations using Angular 6.0 and created services on UI for storing and retrieving data from UI to the backend.  • Was under migration of the project converting angular components and updating router Modules. Implemented the complete set up with configuration file changes from Angular 4 to Angular 6.  • Developed key services for authorization and authentication in Node server, where we used LDAP. Later migrated the authentication from LDAP to Ping Access-SSO (Single Sign On) Application.  • Created sessions for Login user and setting session timed out for the entire UI application.  • Strong understanding on client-side application and very good at attaining the architectural design for MVC using directives, promises and pipes.  • Involved in innovation of the current UI to make an implementation under mobile device access using cross platform technologies such as Ionic which helps in improving the business.  • Involve in development, design and implementation of the front-end application using HTML5, CSS3, AJAX, Bootstrap 4.0.  • Made use of Reactive Forms using Angular 6where most of the validation is done using component rather than using template-driven which provides in HTML.  • Migrating existing application into REST based Micro services to provide all the CRUD capabilities using Spring Boot.  • Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration.  • Made Services independent from each other by implementing Microservices concepts.  • Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest API's using Spring Rest and integrated Swagger API for documentation.  • Building cloud Microservices and implemented back-end using Spring Boot.  • Implementation domain base classes providing basic properties using Spring Data.  • Designed and developed RESTFUL web services using Spring Boot and Jersey framework.  • NODE PACKAGE MANAGER (NPM) was used to list out the right versions of the packages and their dependencies for the project.  • Worked on a project which handles searching algorithms using Elastic Search which is mainly used for pulling analytics related information using the keywords entered by the end user.  • Authenticating Users and to provide the security to RESTful web services using OAUTH 2.0.  • Integrated the ORM Object Relational Mapping tool hibernate to the spring using Spring ORM in our app and used spring transaction API for database related transactions.  • Configured JPA to use Hibernate as ORM tool.  • Extensively used Spring IOC configured Application Context files and performed database object mapping using Hibernate annotations.  • Implemented Spring Validators, persistence layer, and service layer components using Spring/Hibernate API and Spring/Hibernate annotations. Extensively used Hibernate QL.  • Created persistence layer using Hibernate for sending and retrieving data from the database.  • Implemented PL/SQL queries and used Oracle stored procedures.  • Written Stored Procedures using PL/SQL and functions and procedure for common utilities using Oracle11g and MySQL.  • Created dynamic schema design through NOSQL-CouchDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability.  • Have experienced on developing web applications using Bootstrap, Code Mirror, Brackets and Ember.js.  • Involved in the creation of interface to manage user menu and Bulk update of Attributes using Node.JS and jQuery.  • Designed and developed the framework to consume web services hosted in Amazon EC2 instances.  • Building cloud Microservices and implemented back-end using Spring Boot. And Authored application using Spring Cloud services (spring version of Netflix OSS-Eureka that helps in routing, Circuit Breaker and Ribbon for client-side load balancing).  • Implemented Spring Cloud- Netflix ZUUL to building micro services for communication.  • Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor spring micro services, writing server-side request handling and automated functional test cases to validate UI functionality using Node.js.  • Used Docker Container to address every application across the hybrid cloud and Docker for better collaboration and innovation.  • Designed, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack (Including EC2, S3), focusing on high-availability, fault tolerance, and auto-scaling.  • Configured AWS EC2 instances, domain mapping via Route53.    Environment: JavaScript, HTML5, CSS3-LESS, AJAX, Bootstrap, jQuery, Spring Security, Rabbit MQ, Node JS, Express JS, HTML5,Bootstrap4.0, Site Minder, Hibernate4.x,OIDC, Eclipse Java EE, Jenkins, Log4j, Redis, Mongo DB, Mongoose Connector, Oracle, JBoss, Kibana, Elastic search, Logstash, EBS, Elastic Load Balancer, Docker, Apache tomcat, Selenium, Spock, Karma, Jasmine, Mockito, Junit, mock MVC, Kubernetes, Dump Analysis, Netflix Zuul, Eureka. Java Full Stack Developer Florida Blue - Jacksonville, FL February 2018 to July 2018 Description:  Florida Blue is a subsidiary of a not-for-profit health solutions company dedicated to serving all Floridians in the pursuit of health.Florida Blue is an independent licensee of the Blue Cross and Blue Shield Association, serving residents and businesses in the state of Florida.  Responsibilities:  • Involved in the creation of UI specification documents by interacting with business users and design documentation and data modelling for the entire project.  • Expertise in using React JS/Redux to build User Interface, strong knowledge of state store, middleware, action creator, reducer and container.  • Developed user interface by using the React JS, Redux for SPA development and implemented client-side Interface using React JS.  • Written several Axios service calls like GET and POST to make REST service calls.  • Implemented Virtual Dom for Client-Side view rendering services using React JS.  • Proficient in writing react code with help of ECMAScript (ES6).  • Written calls using FETCH API for fetching JSON data.  • Implemented platform modules through spring Java micro and Node.js services by employing Hapi.js, as well as front-end React JS.  • Used complete annotation driven approach to develop the application using Spring Boot and was involved in setting up the Spring bean profiling.  • Worked with Spring Boot for automatic configuration and starter for Maven configuration and performed metrics and externalized configuration  • Developed RESTFUL web services using Spring Boot and Apace CXF framework.  • Building cloud Microservices and implemented back-end using Spring Boot.  • Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest API's using Spring Rest and integrated Swagger API for documentation.  • Worked with JAVA8 features like Functional Interfaces, Stream API for Bulk Data Operations, Time API, Transaction Management, Concurrency API, Collection API, Calendar API.  • Deployed our Application on Pivotal Cloud Foundry (PCF) which is used to reduce the development overhead by providing a ready to use platform  • Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry.  • Deployed and Monitored Micro Services Using Spring Cloud Foundry Managed Domains and Routes with the Spring Cloud Service Registry.  • Implemented Netflix OSS (Open Source Software) for Feasible changes after the deployment.  • Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservices.  • Implemented NoSQL database like Cassandra to (store key values), for data analytics which is used as a Database for this project.  • Maintaining and troubleshooting Cassandra Clusters this includes monitoring and performing troubleshooting as per requirements  • Worked on Docker hub, creating Docker images and handling multiple images primarily for middleware installations and domain configurations.  • Used Kubernetes to create new cluster and container management tool.  • Used Continuous delivery / Continuous Integration (CD/CI) tools Docker and Jenkins to deploy this application.  • Implemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.  • Used Apache Kafka in cluster as messaging system between the APIs and microservices and worked on Splunk search processing language (SPL) queries, reports, dashboard and logging using Log4J.  • Project code build is done using MAVEN tool.  • Worked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser  • Adopted JMS API to setup mail notification upon the success or failure when the backend processes are completed and to send mail notifications regarding any system related problems.  • Used Splunk to create charts for the log data and analyze log data to know customer expectations.  • Authenticating Users and to provide the security to RESTful web services using OAUTH2.0  • Tested REACT code on client side with CHAI testing framework and MOCHA as test runner.    Environment: React JS, Redux, Hapi JS, Node JS, Web pack, ECMA6, Mocha and Chai, Spring Boot, Spring cloud like Ribbon, Hystrix, Netflix ZUUL, Micro services architecture, Docker, Jenkins, Cassandra DB, OAUTH, Apache Kafka, Splunk, PCF, Swagger, Webpack, JMS, Maven. Java Full Stack Developer Cerner Corporation - Kansas City, MO August 2017 to January 2018 Description:  Cerner is Health Care Industry, which contributes to the systemic improvement of health care delivery and the health of communities. Cerner helps transforming health care by eliminatingerror, variance and waste forhealth care providers and consumers around the world.Project deals with Emergency department (ED) for the patients, which help the doctors to trackthe patient health record. It helps physician to keep track of the patient from the day he enters thehospital to the day he leaves the hospital.    Responsibilities:  • Experience in building MEAN applications using Angular 2.0, Node-JS creating Web services components of RESTful Web services to interact with UI Interfaces using REST API with Node-JS, Express-JS and installing client-side dependencies using Bower.  • Developed multiple POCs to create interface between Backend to Frontend by using MongoDB, Express, AngularJS and Node JS.  • Strong experience in working on modern full stack JavaScript environment like MEAN (Mongo, Express, Angular, Node) and Angular 2.0.  • Configured Express JS node http framework to set up middle-wares to respond to HTTP  requests and used its front-end tooling like web packs, starter packs, boiler plates efficiently.  • Experience in working with RESTful Web Services and implementing RESTful APIs.  • Experience of working on CSS Pre - processors like LESS and SASS along with JavaScript task runners like Grunt JS.  • Involved in the creation of interface to manage user menu and Bulk update of Attributes using Node JS and jQuery.  • Involved in the development of presentation layer and GUI responsive development using JSP, HTML5, CSS/CSS3, Bootstrap& used Client-Side validations were done using Angular2.0, XSLT and jQuery.  • Implemented UI using Angular 2.0 for Customer Service Modules and Reports. Used HTML and CSS for pages and Styling.  • Created controllers and Angular components mainly Custom Components for Web pages using Angular CLI and Angular 2.0.  • Automated different Unit Test Cases using Jasmine and KarmaTesting Frameworks on Angular 2.0 and Mocha and Chai for react testing.  • Used GULP for magnification of JavaScript files, compilation of SAAS files into CSS and for monitoring the application.  • Authenticating Users and to provide the security to RESTful web services using OAUTH 2.0.  • Used OAuth 2.0 as authorization code at the start during signing up into the application.  • Developed test cases for each component in different panels using Junit, reported and deployed using Jenkins.  • Implemented RESTful based web services layer to interface with ORACLE and MySQL database using Jersey-ws, JAX-WS, JAX-RS APIs.  • Worked with Jenkins Continuous Integration and Continuous Deployment (CI/CD).  • Involve in development, design and implementation of the front-end application using HTML5, CSS3, AJAX, Bootstrap 4.0.  • Developed external page using jQuery inside a container when a tab is clicked on via Ajax call and to support auto mode.  • Used jQuery to simplify the client-side scripting of HTML and used DOJO widgets package for handling browser incompatibilities and IO package for AJAX support.  • Developed application using form-based authentication using Angular JS, jQuery and CSS.  • Designed RESTful webservices with JSON representation for handling AJAX requests.  • Created new REST web services and modified existing web services WADLs web application Description Language.  • Also used SOAP UI tool to create test cases and quickly unit test the web service code.  • Created testcases for different test scenarios and integrated the test suite to Jenkins.  • Followed Agile - daily Scrum methodology for development process and lead a small offshore development team.  • Created dynamic schema design through NOSQL MongoDB by writing rich queries and achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Shading.  • Used Mongoose connector as ORM Framework to connect with MongoDB and worked with Mongoose libraries like validation, type casting, query building.  • Designed and developed Spring Boot adapter applications using Rest API.  • Worked with Netflix OSS Eureka service for service registration, discovery and spring config for centralized configuration and Ribbon for load balancing at the client side using Spring Cloud.  • Used Spring JPA to perform the CRUD operations and persist the data to the database.  • Bottle micro-framework implemented with RESTful service and used WADL (Web Application Description Language) for modelling the resources provided by the services and relationships between them.  • Implemented Web-Services to integrate between different applications (internal and third-party components using RESTful services.  • Involved in developing Unit Test cases and testing the Application using REST  • Used Mockito for mock creation, verification and stubbing.  • Used Log4j to capture the log that includes runtime exception and for logging info and are helpful in debugging the issues.  • Implemented Log4j mechanism for logging at different modules within the application.  • Configured Kibana data visualization plugin for Elasticsearch and Logstash.  • Configured Docker container service and build pipe line Jenkins CI/CD tool for continuous integrating and deploying application on servers.  • Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server.  • Used multithreaded environment to run the processes asynchronously using different future calls to access the data.  • Implemented Netflix Zuul API gateway for all the requests from the devices and websites by registering services to Eureka.  • Karma test runner and Jasmine test framework tool are used to perform behavioral driven testing for the angular application.    Environment: Angular 2.0, HTML5, CSS3, Type Script, REACT JS, Jasmine, Karma, GULP, NODE PACKAGE MANAGER, Spring Boot, Cassandra, Spring Data, Node.js, Apache Kafka, Docker, AWS, EC2, Jenkins, Spring AOP, Spring Cloud, Netflix Zuul, Hystrix, Swagger, OAuth 2.0. Java Developer Faujnet Solutions - Hyderabad, Telangana August 2014 to July 2017 Description:  This is a comprehensive and integrated Hospital Management System for a Super Specialty Hospital. This package is used to computerize the activities of a servicing system. This package contains four modules. They are Administration, Patient Care System, Health Services, and Auxiliary Services. Each module is having sub modules within this sub modules will maintain storing, registering, details of joining patient details, and over all day activities maintains a database.    Responsibilities:  • The application is designed using J2EE design patterns and technologies based on MVC based Monolithic architecture.  • Front end interactive UI is developed using HTML, CSS, Jquery and Java script.  • Agile methodology is used for development of the application.  • Implemented the application using the architectural principles laid down by several design patterns such as MVC, Business Delegate, Session Facade, Service Locator, Data Access Object, Singleton and Abstract Factory.  • Created Stored Procedures & Functions. Used JDBC to process database calls for Db2 Server database.  • Involved in writing PL/SQLStored Procedures, Functions, Triggers and Views for SQL database.  • Developed back end interfaces using PL/SQL packages, stored procedures, functions, procedures, anonymous PL/SQL programs, Cursor management, Exception Handling in PL/SQL programs.  • Implemented various features of Spring such as Dependency Injection, IOC, Annotations and Spring Integration with Struts.  • Developed the application using StrutsFramework that leverages the classical Model-View-Controller (MVC) architecture.  • Implemented persistence layer between the database and service layers with IBatisORM.  • Involved in designing the user interfaces using JSPs.  • Developed JSTL custom tags to support custom user interfaces.  • Used Eclipse for developing JSPs, Servlets, Struts and with IBM WEB SPHERE server in the development phase.  • Used Spring Security framework to setup authentication and authorization for the application using firm wide single sign on.  • Dependency Injection for managing the components and bean life cycle is achieved in the application using Spring IOC.  • Protection against session fixation, clickjacking, cross site request forgery for application is implemented using Spring Security.  • To achieve modularity and to handle cross cutting concerns like transaction management, logging and profiling Spring AOP is used.  • Involved in the development of underwriting process, which involves communications without side systems and developed message Driven Beans for receiving and processing data using IBM MQ & JMS.  • Implemented Java Mail and used its third-party command line email to automate email sending and receiving in the application.  • Wrote Unit test cases using JUnit & Mockito framework.  • Used ANT for automated build and deployment on IBM WebSphere.  • EJB Session Beans were used to process request from user interface using OSS.  • Developed UNIX Shell Scripts for batch jobs to transfer the data on different servers.  • Used JTA to enable distributed transactions to be done across multiple resources in java environment.  Environment: HTML, CSS, J query, Java script, DB2, JDBC, PL/SQL, JPA, EJB, Struts, JSP, Servlets, Java Mail, UNIX Shell Scripts, JTA, ANT, IBM Web sphere, IBM MQ, JMS, J2EE, IBatis, IBM WebSphere, SOPA, WSDL, Spring IOC, Spring AOP, Junit, Mokito. Java Full Stack Developer Aspire Systems - Hyderabad, Telangana March 2012 to August 2014 DescriptionAspire Systems is a global technology services firm serving as a trusted technology partner for customers work with some of the world's most innovative enterprises and independent softwarevendors, helping them leverage technology and outsourcing in our specific areas of expertise.Our services include Product Engineering, Enterprise Transformation, Independent TestingServices and IT Infrastructure Support services.  Responsibilities:  • Developed UI pages using HTML5, CSS3, JavaScript, jQuery, AJAX and JSON.  • Developed client side validation code using Javascript and JQuery.  • Developed AJAX Calls for  • Involved in various phases of Software Development Life Cycle (SDLC) on the application like Requirement gathering, Design, Analysis and Code Development.  • Developed and implemented the MVC Architectural pattern using STRUTS 2.x framework.  • Implemented POJO based action by STRUTS and also utilized various Tag Support given by the STRUTS 2.x.  • Implemented interceptor which is invoke at preprocessing and post processing of a request in STRUTS 2.x.  • Implemented OGNL (Object Graph Navigation Language) of STRUTS 2.x to simplify the accessibility of data stored in the ActionContext.  • Loading data from Text Files to Database by using SQL Loader.  • Implemented IBM WebSphere Application Server to deploy the application.  • Worked with Log4J to capture the log that includes runtime exceptions.  Environment: HTML5, CSS3, JavaScript, JQuery, AJAX, JSON, SDLC, MVC Architectural, STRUTS 2.x, SQL Loader, IBM WebSphere, Log4J. Education Bachelor's Skills Awt, Bea, Bea weblogic, Eclipse, Ejb, J2ee, Java, Hibernate, Spring, Jax, Jaxb, Jax-rpc, Jax-ws, Jboss, Jms, Jndi, jquery, Jsf, Jsp, Jstl Additional Information TECHNICALSKILLS    Java/J2EE Technologies Servlets, JSTL, JDBC, JMS, JNDI, RMI, EJB, AWT, Applets, Multi-threading, Java Networking  Programming Languages Java, C++, C, SQL, PL/SQL  Application/Web Servers Oracle/BEA WebLogic, IBM WebSphere, JBoss, Apache Tomcat  Frameworks & API's Struts, Spring, Spring Boot, Hibernate, JSF, iBATIS, JPA, Angular JS, Angular 2.0,4.0,6.0, Backbone JS, D3, React JS, NodeJS  IDE's Eclipse, IBM RAD, Net Beans, MasterCraft  Web technologies JSP, JavaScript, jQuery, AJAX, XML, XSLT, HTML, DHTML, CSS, JSON, Adobe Flex, Spring MVC, Angular JS, Angular 2.0,4.0.6.0, NodeJS  Debugging Tools Firebug, Chrome  NoSQL database MongoDB, Cassandra  Web Services JAX-WS, JAX-RPC, JAX-RS, SOAP, REST  XML Parser JAXB, Apache Axis, DOM  Methodologies Agile, RUP, TDD, OOAD, SDLC  CI/CD Tools Jenkins, XL Release, Hudson  Modeling Tools UML, Design Patterns, Rational Rose, Visio  Databases Oracle, DB2, SQL Server, MySQL, MongoDB  Version Control CVS, GIT, SVN  Build Tools ANT, Maven, Gradle, Jenkins, Hudson