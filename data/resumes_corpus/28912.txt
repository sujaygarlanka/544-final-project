Sr. .Net/ Web Developer Sr. .Net/<span class="hl">Web</span> <span class="hl">Developer</span> Sr. .Net/ Web Developer - INDIGO BEAM Houston, TX Authorized to work in the US for any employer Work Experience Sr. .Net/ Web Developer INDIGO BEAM - Houston, TX March 2017 to Present we set the standards in the industrial cleaning industry with an avalanche of proven safety processes. From innovative new equipment to reduce employee hazards with high-pressure water to new ways to control fugitive emissions from vacuum trucks. HydroChem offers you the broadest line of industrial cleaning processes with the skill and experience it takes to deliver them efficiently and reliability.    Responsibilities  • Involved in Requirement Collection, Design & Analysis of the Customer Specifications, Development and Customization of the Application.  • Implemented AngularJS 2.0 Controllers to maintain each view data. Implemented Angular 2.0 Service calls using Angular Factory, designed, and codes Win Forms using C #.NET.  • Designed and developed NoSQL solutions for all users and Developed View Models using Typescript.  • Tested all application controllers extensively with Angular JS2.0 built-in testing facilities.  • Deployed and Maintained windows 10 applications on azure cloud Paas technologies.  • Effectively used master pages to create consistent layout for the ASP.NET, VB.NET web pages and merged them with content pages.  • Coded in C# SOLID principles to display a specific color code based on a Capacity Threshold value.  • Writing front-end code like HTML, CSS, JQuery for assigned User requirements using Backbone JS, Angular JS 2.0, Require JS and various other JavaScript frameworks.  • Developed ASP pages using ASP.NET web form controls, WPF, ASP.net Ajax, C# and Jquery.ASP.net MVC, HTML 5, Knockout.JS  • Transformed data from one server to other servers using tools like Bulk Copy Program (BCP), and SQL Server Integration Services  • Built a heavy front end using HTML/CSS/JavaScript on top of .NET MVC 3  • Designed, developed, maintenance Application using VB.Net, C#, WCF, ASP.NET 4.0, MVC 4.0, JavaScript, JQuery, Angular JS2.0, HTML, CSS.  • Built Web pages that are more user-interactive using AJAX, JavaScript.  • Writing tested, idiomatic, and documented JavaScript, HTML and CSS and Coordinating the workflow between the graphic designer, the HTML coder, and yourself  • Cooperating with the back-end developer in the process of building the RESTful SOA.  • Designed several Sequential Workflow Libraries (WWF) for business logic by analyzing business requirement and Created WCF Service interface.  • Design responsive and intuitive user interface for the web using XHTML/CSS and both custom ASP.NET, VB.NET, AJAX scripts.  Environment: .Net Framework 3.0/4.0, ASP.Net 2.0/3.0, SSIS, Azure cloud, VB.Net, ADO.Net, SOAP, HTTP, ASP.NET, Xml, JavaScript, WPF, Angular JS 1.6/2.0, Restful SOA, Typescript, knockout, React JS, MVC, HTML, DHTML, CSS, C#, SQL Server 2016, Require.js, T-SQL, Ajax, Visual Studio 2015, windows Sr. .Net/ Web Developer Redmond, WA January 2016 to February 2017 The purpose of this Project is to trace out the fraud transactions happened when the customer purchased some of the Microsoft products. In this application a Retrieve User can able to see the information related to a customer whether the product license key generated is used by the customer or some fraud users. Microsoft provides some external Data Sources to get this information. Every customer's information whoever purchased a product is stored in these Data Sources. Every data source represents an individual module in Retrieve application and each module has filters with certain parameters. So as per the requirement a Retrieve user can query with specific parameters and he can able to see the related information, based on the information he can able to find out the fraud transactions.    Responsibilities  • Coordinate/assist developers with establishing and applying appropriate branching, labeling/naming conventions using GIT source control.  • Experience in understanding and gathering the Business requirements, translating them into Functional specifications and develop code along with detailed design.  • Experience working in fast paced Agile Environment. Attended daily stand up meetings and involved in the spring planning.  • Experience working with build, code package & source code management such as GIT.  • Attended meetings with UX team to discuss shortcomings, suggestions, limitations of framework and technical glitches for the given wireframes. Worked with the team of architects to gather requirements and enhance the application functionality and add new features.  • Involved in the meetings with Project Managers and Architects to groom the User Stories using Version One to add the functionality of what is needed to develop before taking it into the sprint.  • Followed Agile methodology, interacted directly with the client to provide/take feedback on the features, suggest/implement optimal solutions, and tailor application to customer needs.  • Created a build process for different environments like develop, staging and production. Making changes to the existing web application and created components like Role-based navigation menu, Advance search Bar, Create Account.  • Many of the tasks have been framed with different user stories and have been working in 2-week sprint model covering up to 10 -12 user stories per iteration and getting the acceptance criteria for sign off.  • Maintained Cross Browser compatibility & implement Responsive Web Design using Bootstrap, custom media queries, with brand appropriate styles, colors, animations and font icons etc.  • Designed and developed the portal using Angular2/4 along with HTML5, CSS4, and Typescript and Bootstrap.  • Created responsive pages and made the website more user-friendly.  • Implemented Restful API from core using Node.js and Express Framework. Implemented HTTP requests using Rx.js Observable library to handle multiple values over time.  • Used REST client / POSTMAN to check the response of various API's, Swagger UI as a visual documentation for back-end implementation and client-side consumption.  • Finding out the bugs, broken links and missing images etc. and rectifying them.  • Worked on Angular 2 concepts like building the Components and Data binding, Directives, Services and Dependency Injection, Routing and Observables, Pipes, Http and Optimization and Ng Modules.  • Got skillful hands on experience and knowledge on Redux and ngrx store to manage the State, Subscribing and unsubscribing the state changes and dispatching the actions in Angular 2.  • Implemented Angular 2 services to connect the web application to back-end APIs to POST/GET the data used in the application.  • Implemented Web API Controllers to connect with data access layers and return specific response to the front end.  • Implemented exception Handling and Used NPM for installing required node modules and other published Angular NPM modules.  • Added client-side validation using Angular.JS with the $touched, $valid, $invalid and $dirty to check if the user has input the correct data.  • Successfully executed Unit tests and fixed any bugs/issues identified during the test cycles.  Environment: VisualStudio2017, C#, ASP.NET Core, SSMS, SSRS, SQL Server Analysis Services, SQL Server 2014 Windows XP, Web API, CSS3, HTML5, Bootstrap4, Entity Framework, Azure SQL, Swinlane, Microsoft Azure, RXJS Sr. Web Developer Vertafore Inc - Bothell, WA September 2015 to December 2015 Project Sagitta services was designed to redefine company's existing SOAP services for product Sagitta to OData web APIs with additional features for client portal application.    Documentation Automation - Designed and developed automatic documentation page for the project using swagger UI. XML documentation tags that have been put in by developers in the code are pulled down in an xml file when the project is build. A tool has been generated to read this xml file and spit out 2 files in json format which feeds documentation UI. The tool is set to execute by a script in the post build actions property and hence making it automatic. This reverse engineering process has generated a great value for the team. This whole process pulls down developers' comments in the code and displays it in the UI without any manual interaction.    Responsibilities  • Designed documentation page automation for the project.  • Developed documentation page UI using swagger.js, MVC 5, Razor and CSS.  • Integrated swagger.js and developed UI which is fed by json files.  • Extensive use of JavaScript and jQuery functions which were integrated into UI.  • Research and Analyze best process and design tool to automate documentation process.  • Developed tool which reads xml file with documentation tags into json format.  • Well understanding of clients coding standards and documentation standards.  • Used Team Foundation Server (TFS) for source control.  • Follow agile development methodology.  • Participate in weekly Client meetings and discussions.  • Training the new members in the team and getting them productive quickly.  Environment: Visual Studio 2012, MVC 5, C#.net, HTML5, swagger.js, Java Script, jQuery, TFS. Net/ Web Developer Freestone Capital Management LLC March 2014 to August 2015 Designed and developed a web based application for processing and tracking the billing process of the organization. This application is build using MVC 5 architecture with Entity Framework to communicate with SQL server 2008 and SQL server 2012. UI has been developed using HTML5 with Razor view engine. Bootstrap has been used to create responsiveness. Data binding between UI and model has been developed using AngularJS and jQuery. Existing SSIS packages which does the billing calculations were modified to accommodate with new billing system. This application has been cloned to Windows Azure platform as well.    Apart from developing Billing System, a windows service has been developed to automate the existing manual process of extracting daily reports and updating Freestone SQL database on a daily basis. This service communicates with a web API provided by the client and download user specified reports and upload into corresponding SQL tables. A set of SQL tables were designed and created in the SQL server to archive the reports. This tool is designed to handle multiple reports with step by step activity log and email status notification. This tool has approximately reduced the manual effort of 1.5-person hours per day for the organization.    A windows forms version of the tool has also been developed to help the team download adhoc reports as and when necessary.    Responsibilities  • Involved in information gathering and design of new billing application for the organization.  • Design and develop web pages using C#.net, MVC 5, HTML 5, Razor, AngularJS, bootstrap and CSS.  • Research and Analyze SQL server database and design the data flow of application.  • Developed JavaScript functions and used extensively in the project.  • Built commissions calculations for quarter end billing.  • Deployed billing system to Azure. Analyzing and fixing issues while deployment.  • Revisited and optimized the commission calculation logic in Stored Procedures.  • Binding UI with models using AngularJS framework.  • Developed web based binding using MVC and AngularJS.  • Research and Analyze current process and design the tool (windows service) to automate the current process.  • Used PowerShell scripting to extract quick user access reports.  • Used Team Foundation Server (TFS) for source control.  Environment: Visual Studio 2013, SQL Server 2008 & 2012, SSIS, MVC 5, C#.net, PowerShell, Entity Framework 6, HTML5, JavaScript, jQuery, AngularJs, Bootstrap. Net Developer Microsoft February 2013 to March 2014 DSL (Data Services Layer) is a platform through which data can be accessed by end users. DSL acts as an abstract layer between business data source and end users. This project is to enhance the user experience and provide user friendly UI using modern technologies. Part of UI development using Bootstrap functions and binding the data services using AngularJs.    Responsibilities  • Involved in developing responsive UI pages using bootstrap and CSS 3.  • Analyze and discuss data binding options and decide on best practices.  • Binding UI with data services using C#.net, AngularJS.  • Implement Single Page Application pattern (SPA) with extensive use of AngularJS.  • Used PowerShell commands to automate FTP files from one server to another.  • Consuming WCF services to receive mapping details.  • Used Team Foundation Server (TFS) for source control.  Environment: MVC, C#, Visual Studio 2012, SQL Server 2008, HTML5, AngularJS, Bootstrap, WCF, PowerShell. Net Developer AIG Benefit Solutions - Houston, TX January 2012 to January 2013 The application is Designed & developed for multiple functionality & can access multiple financial data & related account information. This application is developed using MVC architecture. This application has been developed using MVC 4 and Entity Framework to communicate with SQL database. This intranet application provides accurate and timely information to Senior Management. This information enables them to have a complete understanding of all control focused issues within the financial group. This is a distributed system architecture and designed and developed departmental sites and provided document management and knowledge management.    Responsibilities  • Good understanding of extreme programming techniques, SOLID design principles.  • Involved in Analysis, Design, Coding, Testing and maintenance phases of Software Development life cycle.  • Responsible for test driven development (TDD) of the application.  • Involved in Requirements Gathering, Design & Analysis of the Customer Specifications, Development and Customization of the Application.  • Prepared UI specifications, validation rules document, design and development of GUI screens for the application.  • Performed model validations using Data Annotation feature in MVC.  • Designed and Developed Web application with Microsoft .NET technologies, Web layer with ASP.NET and business layer with C#, Data access layer with ADO.NET Entity framework advanced functionality and Microsoft SQL Server 2008 as database.  • Designed and Developed Master Pages, partial pages to have rich look and feel of the web site.  • Implemented AJAX and used Ajax Controls toolkit to improve performance, responsiveness, interactivity and features of application.  • Implemented JQuery UI core interaction plug-in for advanced effects built on top of JQuery JavaScript Library.  • Designed WCF with Service oriented architecture to support Distributed computing where services were consumed by end users.  • Created Stored Procedures, Functions, Views and Triggers in MS-SQL database using T-SQL for regulate and maintain complex data.  • Used Team Foundation Server (TFS) for source control.  • Writing test cases and unit testing using NUNIT for the modules and document the results.  Environment: MVC, C#, Entity Framework, Visual Studio 2010, SQL Server 2008, TDD, ADO.NET Entity Framework, AJAX, XML, HTML5, Razor, JavaScript, WCF, NUNIT. Net Developer AIG Benefit Solutions - Houston, TX April 2010 to December 2011 Customer Information System (CIS) is a web application developed to automate the existing business process and to reduce manual effort. This application was developed for business unit to access policy holder information from SQL server. Business users have the options to update the customer information in the database to adjust the payment totals if necessary through CIS.    Responsibilities  • Active part in planning, Development and Testing phases of SDLC.  • Developed the application in ASP.NET 3.5 and using C#.net as code behind.  • Used ASP.NET AJAX Toolkit controls like Script Manager, Update Panel in some web pages.  • Control and client-side validation is done by Ajax validation extenders.  • Building web applications with ASP.NET, JavaScript, j Query, XML, HTML, XHTML, CSS  • Worked extensively on web forms and data binding controls like Grid View, Data List and drop-down boxes and Mapping page fields to the database fields.  • Designed ASP.NET web forms to pull up records based on search criteria for business unit.  • Thoroughly enforced page validation, both client-side and server-side, using ASP.NET Server Validation controls.  • Used ADO.NET components Data Reader and Datasets to retrieve information from the Database.  • Developed client modules for retrieving, inserting and updating record from the database.  • Involved in the modification of existing application by fixing the known bugs and addition of new functionality.  • Used COM components in the application for certain features.  • Have used windows security authentication feature.  • Used TFS for source control.  • Involved in Unit testing of the individual modules using NUNIT.  Environment: ASP.Net 3.5, Microsoft Visual Studio2010, C#.NET, Web Services, ADO.net, HTML, Java Script, NUNIT, SQL Server 2008, Windows 2000/XP. Net Developer American General - Chennai, Tamil Nadu March 2009 to March 2010 This application retrieves details of group policy accounts, individual payment details, individual deduction amount, payment adjustments etc. for billing department to view and process. This application communicates with mainframe database and retrieves information based on user input. This is a thin client web system using, ASP.NET, C#.NET and ADO.NET.    Responsibilities  • Performed analysis, design and implementation of the application.  • Developed application layer using ASP.net.  • Developed presentation layer using server controls, HTML controls and user controls.  • Applied Master Pages, Themes, and CSS for a consistent look and feel for Page design.  • Implemented Service Oriented Architecture (SOA) in the application.  • Worked extensively with Web Forms.  • Used .NET validation controls in web forms.  • Used ADO.NET for retrieving data from backend mainframe database version 8.0.  • Wrote stored procedures and SQL statements to access data from mainframe database.  • Used Caching to improve the performance.  Environment: ASP.net, C#, ADO.NET, Web Forms, HTML, .NET Framework 3.0, Mainframe DB2. Mainframe Developer Guardian Life Insurance Company - Chennai, Tamil Nadu April 2007 to February 2009 Guardian has a separate sub system for claim processing and customer service. Claim processing system process the claims systematically with no/very less manual intervention. Customer service mainframe system provides the claim information to all the customer facing applications (Guardian anytime online portal, Customer Representative Units, IVR system). Both Claim processing and Customer service system required maintenance of the existing system components and new enhancements were needed because of new business functionalities.    Responsibilities  • Worked as offshore team member and responsible for requirement analysis, impact analysis when required, technical design, coding and unit testing.  • Very efficient in doing the requirement analysis and creating technical design documents. Developed quality software components with very little defects.  • Created Unit test plans and Unit test results. Created quality unit test plans by mapping with the business requirements which helped in developing quality software components and reducing defects.  • Very quickly identified the root cause for the production issues and provided the fixes.  • Automated lot of processes which required manual intervention.  • Developed extensive understanding of the system and helped newcomers in understanding the system.  • Developed complex COBOL batch programs and implemented them using Job Control Language (JCL)  • Developed complex and user friendly CICS interfaces for processing and user maintenance.  • Created CICS programs which interact with messaging services like WebSphere MQ and TSQ.  • Developed mainframe interfaces to web services and Middleware layers like TIBCO and ESM. Created Interface Agreement Documents which is used between mainframe and web services applications for data exchange.  • Worked extensively in DB2. Developed complex CICS-DB2 programs. Extensively worked in creating DB2 stored procedures which can be called from CICS, COBOL batch programs and web services.  • Extensively used tools like xpediter to interactively analyze the programs and debug the issues.  • Documented the functionalities of the complex projects with flow diagrams and functional specifications.  • Provided technical trainings on mainframe for college recruited new resources. Provided trainings for taking the LOMA insurance certifications.  • Vital individual contributor for the team and was available for the team in crunch situations.  • Received accolades from both CSC and Client management for the professionalism shown in the deliverables.  • Awarded Star of the Quarter in 2010. Education Bachelor of Technology in Electronics & Communication Calicut University - Calicut, Kerala 2000 to 2004 Skills .NET (9 years), C# (9 years), SQL (8 years), MS SQL SERVER (7 years), SQL SERVER (7 years) Certifications/Licenses Driver's License Additional Information TECHNICAL SKILLS    Languages & Technologies: C#.NET 4/5/6/7, VB.net, ASP.NET 2.0/4.7, ASP.NET MVC 4/5, Microsoft Azure.  Front End Programming Languages: CSS 3, HTML 5, JavaScript, jQuery, Angular JS  Services Programming: Windows Services, Web Services, WCF, RESTful services and Web API  Microsoft IDE: Visual Studio 2008/2010/2012/2013/2015/2017  Configuration Management Tools: MS Visual Studio TFS 2010/2013, SVN, GitHub  Web Servers and Databases: IIS 6.0/7.0/7.5, SQL Server 2005/2008/2012/2014, Azure  Developer Tools: Fiddler, Postman, Re-Sharper    Languages & Technologies: COBOL, JCL, SAS, CICS, Mainframe Systems.  Tools: SCS, APCDOC, PANVALET, FILE-AID, XPEDITER, CA-Filemaster, SAR, SPUFI, ABENDAID, QMF, FTP, SFTP, SORT, ENDEVOR, File aid, IBM Utilities, TMS  Databases\ Operating System: IBM DB2 v8.0, VSAM \ IBM S/390 - z/OS