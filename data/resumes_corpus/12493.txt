Sr. Java FullStack Developer Sr.<span class="hl">Java</span> FullStack <span class="hl">Developer</span> Sr. Java FullStack Developer Florham Park, NJ • Java Full stack developer with 7+ years of experience in full software development life cycle including requirement analysis, design, coding, testing, debugging and maintenance.  • Extensive experience in developing JAVA based applications using JAVA, JEE, JDBC, EJB, Servlets, JSP, JSF, JMS and Webservices.  • Hands on experience in the implementation of Core Java SE 8 concepts like Streams API, Lambda functions, Generics, Time API, Functional Interfaces Multithreading, Transaction Management, Exception Handling and Collection API.  • Expertise in developing Micro services using Spring Boot and Node JS to build more physically separated modular applications which will improve scalability, Availability, Agility of application.  • Proficient in implementation of spring frameworks like Spring MVC, Spring IOC, Spring REST, Spring AOP, Spring transaction Management, Spring Data, Spring DAO, Spring Batch, Spring Security and Spring Boot.  • Experience in using various JavaScript Web application related libraries such as Node Js, Backbone.js, Require.js, Knockout, Angular.js, React.js, JQuery UI and Google Web Toolkit.  • Strong experience using frameworks like JSP, EJB, Java Persistence API, JNDI, JMS, Struts, JSF in developing scalable, reliable, efficient web and enterprise applications.  • Good experience in developing SOA (Service Oriented Architecture) and Microservices architecture using J2EE Web Services based on Restful (JAX-RS), SOAP (JAX-WS), JAX-RPC and JAXR ( Java API for XML Registries) using frameworks like Apache CXF, Jersey, Axis and Spring framework, NodeJS (Express JS &Hapi JS).  • Hands on Experience in working with Databases MYSQL, Oracle 10g/11g, SQL-Server, DB2 and NoSQL (MongoDB, Cassandra)Dynamo DB, Couch DB.  • Expertise in ORM tools Hibernate 2.0, 3.0, 4.0, iBATIS, with JPA specifications, HQL, Caching, ACID transaction, Locking and implemented ODM framework like Mongoose for mapping MongoDB.  • Expertise in creating Databases, Tables, Stored Procedure, DDL/DMLTriggers, Views, User defined data types (UDT), Cursors, Functions, data dictionaries, and maintaining data integrity and Indexes using SQL.  • Good knowledge in writing stored procedures, Packages and functions using SQL & PL/SQL and good at advance PL/SQL topics like Triggers, Collections.  • Experienced in developing front end applications using HTML4/5, XHTML, DHTML, CSS2/3(using SASS and LESS), Bootstrap, Angular JS, Angular2,4.X and developing dynamic web pages.  • Good Understanding of Document Object Model (DOM) and DOM Functions. Design and implement a Web based content management utilizing XML, JAXB, DOM, XSLT, XPath, and JavaScript for data generation and presentation with JSF.  • Expertise in latest version of object oriented JavaScript Libraries like Angular JS, Ember JS, Backbone JS, React JS, Bootstrap and Responsive Design.  • Having good Experience in MVVM design pattern such as Angular 2.X and Angular4.X.  • Developed multiple Angular 4.0 components which are compatible with latest versions of typescript, Angular CLI.  • Developed front-end using React JS, JQuery, HTML and High Charts based on MVC architecture.  • Strong experience in developing Single Page Application(SPA), using MEAN (Mongo, Express, Angular and Node) stack.  • Hands on experience in developing server-side JavaScript frameworks using Node JS (Hapi JS, Express JS) to build event driven, non-blocking i/o model web application • Experience in integration tools like Spring Integration, Apache CXF, Apache Kafka and Apache Camel to integrate the enterprise application technologies with existing JVM environment.  • Experience in using various Amazon Web Services (AWS) like EC2 for virtual servers, S3 and Glacier for storing objects, Elastic Beanstalk, Elastic Cache and Dynamo DB for Elastic load balancing, storing data.  • Implemented Docker container service, build pipe line like Jenkins, Bamboo andGoCD for Continuous Integration and Continuous Deployment that can run on the cloud or on-premises • Used Kubernetes Linux container for deploying and scaling containerized applications.  • Strong knowledge on JavaScript Unit testing with Jasmin, Karma, Protractor for Angular JS, Mocha and Chai React JS and Backbone JS • Hands on experience with build tools like ANT, Maven, Gradle and logging tools like Log4J.  • Expertise in unit-testing with tools like JUnit, Mockito, Spock, TestNgandIntegration testing tools like Selenium Web Driver, Cucumber (Behavior Driven Development testing).  • Experience in using Drools rules engine for defining business rules and Validations.  • Experience with testing tools like Selenium and build tool like Jenkins.  • Experience in software configuration management using CVS, SVN and GIT. Authorized to work in the US for any employer Work Experience Sr. Java FullStack Developer Sr.Java FullStack Developer - Florham Park, NJ May 2017 to Present Responsibilities: • Actively involved in Analysis, Design, Development, System Testing and User Acceptance Testing. Successfully followed agile methodology in the Scrum Cycle model.  • Involved in the development using Java/J2EE Technologies, Web Services and Hibernate ORM Framework.  • Designed and developed Microservices using REST framework and Spring Boot and used Bootstrap along with AngularJS in creating the Application.  • Worked in all the modules of the application which involved front-end presentation logic developed using, JSP and Java Script, Middleware layer using Servlet and Controllers, Business objects developed using Page Beans and data access layer using iBatis and Hibernate framework.  • Used NodeJS for doing non-blocking design operation for server side code and Angular.js framework in developing various UI components.  • Used Java8 features in developing the code like Lambda expressions, creating resource classes, fetching documents from database.  • Developed the responsive UI web pages using XHTML, jQuery, HTML5, CSS3, Angular JS 2, JavaScript, node JS and has worked with Angular JS filters in expressions and directives to filter data in the UI.  • Extensively used MVC, Factory, Delegate and Singleton design patterns.  • Used Spring framework including Spring core/IoC, Spring Web, Spring Security and implement the authentication, authorization, and access-control features by using Spring Security.  • Used React JS for templating for faster compilation and developing reusable components.  • Used Spring Inversion of Control (IoC) for injecting the beans and reduced the coupling between the classes and implemented the Model View Controller using Spring MVC.  • Implemented the application using SpringBoot Framework and handled the security using Spring Security.  • Microservices have been built using spring boot, Netflix OSS, spring cloud and deploying to AWS Cloud.  • Experienced in object oriented analysis, design and application development using JAVA, J2EE, XML,JSON,RAML,JMS, BRMS, NoSQL technologies • Implemented code according to create AngularJS Controller, which isolate scopes perform operations.  • Wrote custom JavaScript utilizing jQuery to enhance theme, setup server to handle more number of page requests.  • Implemented REST based web services using JAX-RS annotations, Jersey provider and consumed using HTTP services from angular JS modules.  • Used Bootstrap and Angular JS, React.js and Node.js in effective web design.  • Used Angular2.0 HTTP Module to make API calls and worked with the observables.  • Developed Single page applications and Custom Directives using Angular 2.0.  • Implemented Routing, Imperative Routing and guards with the help of Angular2.0 route module.  • Responsible for setting up AngularJS framework for UI development.  • Used Spring Boot which is radically faster in building cloud Microservices and develop spring based application with very less configuration.  • Implemented ODBC which is used for connecting to the database Oracle.  • Used Springframework to provide loose coupling between different application modules.  • Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB.  • Used Microservices to communicate using synchronous protocols HTTP and REST for implementing SOA.  • Worked with NoSQL database Mongo DB and worked with it to perform many different operations.  • Used Cassandra for achieving denormalization through features like collections.  • Developed unit tests with JUNIT and Mockito. Write automated regression tests using JMeter.  • Developed build tasks to run the unit tests on Jenkins and maintaining separate build in Maven for the module for easy integration to the portal build and configure with Jenkins.  • Wrote Jasmine unit tests using Karma to verify AngularJS modules and JavaScript utility routines.  • Developing Applications using latest Java/J2EE technologies such as Cassandra, Java 8, Junit, Cucumber.  • Message broker services are achieved in the application using Active MQ with JMS framework.  • Worked on UI for Layered Security and S&L modules and hands on experience with Spark streaming to receive real time data using Kafka.  • Worked closely with QA team and fixed QA bugs with a quick turnaround time.  • Focused on Test Driven Development; thereby creating detailed Unit tests for every single piece of functionality before actually writing the functionality.  • Used Apache Maven for project management and building the application.  • Used Cucumber and Selenium for Behavioral and Integration testing respectively.    Environment:: J2EE, Java 1.8, UDB , Spring framework,Sybase, Spring MVC, Hibernate, JSP, AJAX, SOA, Web Services, Microservices, XML, Ext JS, NodeJS, JQuery, JavaScript, IBM RAD 9.1, Websphere 8.5, Agile Methodology, Design Patterns, Clear Case, Apache Maven, Apache Cassandra, MongoDB, JUnit, Html, Unit, XSLT, ReactJs, HTML/DHTML, JENKINS, Spark, Kafka. Fullstack Java Developer Ally Financial - Dallas, TX July 2015 to April 2017 Responsibilities: • Involved in Design, Development and Support phases of Software Development Life Cycle (SDLC).  • Used AGILE methodology and participated in SCRUM meetings.  • AWS EC2 instances were configured in developing and QA environments with NodeJS • Designed and implemented the user interface using HTML5, CSS3, JavaScript and Angular JS.  • Developed Hibernate mapping files using different mapping strategies such as table per class hierarchy and also used Hibernate Persistence Strategy to interact with database.  • Used Java8 features in developing the code like Lambda expressions, creating resource classes, fetching documents from database.  • Used AJAX and JSON to make asynchronous calls to the project server to fetch data on the fly.  • Developed a tool to retrieve and send data to third party service provider this feature was implemented using REST • Created Buckets in AWS and stored files. Enabled Versioning and security for files stored • Used RESTFUL client to interact with the services by providing the RESTFUL URL mapping • Built MAVEN scripts for automated deployment and for the build operation of the entire application.  • Deployed the application in WebSphere Application Server 6.0.1 and Configured JMS in the WebSphere application server to send messages on the queue.  • Spring Controllers were used with Angular JS to route the control to desired Java services.  • Implemented scripting with Ajax and XML to dynamically refresh the page contents.  • Developed Controller for request, response paradigm by Spring Controllers using Spring-MVC. Used JSON as response type in REST services.  • Involved with bug fixing on functionality, performance and designing issues with JavaScript, JQuery, HTML5, CSS3 and Angular JS.  • Developed core Java programs for all business rules and workflows using spring framework.  • Designed and developed Restful service interface using Spring MVC to the underlying customer event API. Involved in building Restful Web services using JAX-RSAPI.  • Worked on Cloud implementation by installing, building and deploying applications using Cloud Foundry and using AWS.  • Developed Rest APIs in Spring boot.  • Used Angular 2.0 HTTP Module to make API calls and worked with the observables.  • Developed Hibernate with Spring Integration as the data abstraction to interact with the database of MongoDB.  • Synchronize data with server using SASS, JavaScript, Bootstrap, and Angular.js.  • Experienced in build tools like Ant, Maven, Gradle and using them with continuous integration tools like Jenkins to create and publish application artifacts • Application development experience using Multithreading, Collection framework and Core Java, Spring, Hibernate, Sql server.  • Developed Single page applications and Custom Directives using Angular 2.0.  • Used ReactJS in components like JSX, creating React components, Virtual components etc.  • Created custom Plugins, templates, and functions for Angular JS application.  • Implemented Hibernate for data persistence and management.  • Analyzed and fixed issues related to REST Web services and Application responses.  • Used Maven as the build tool and Tortoise SVN as the Source version controller.  • Used Subversion (SVN) as the configuration management tool to manage the code repository.  • Performed unit testing using JUnit.  • Used ReactJS and AngularJS for building web-apps and is highly efficient in integrating with Restful services.  • Developed different modules using Java, Apache Camel, Spring and Hibernate.  • Followed Agile Scrum methodology and used TDD for writing test cases.  • Involved in developing stored procedures and Triggers on Oracle11g • Used NPM to manager server side packages.  • Automated build scripts using Ant, Maven for Java and J2EE Applications, make for C, C++    Environment: Java 8, Java 1.7, J2EE, Spring Framework 4.0, Hibernate, AJAX, Oracle 11g, Web Services, AWS, Agile, REST, XML, SOA, WebSphere, JavaScript, Angular JS, NodeJS, Bootstrap, JQuery, JBOSS, JUnit, Grunt, GITHub, SQL, Angular2.0, MongoDB ,ReactJS,JMS, HTML5, JSP, Apache Camel ,CVS, CSS, MVC, Maven and SVN. Java Developer Aflac - Columbus, GA March 2013 to June 2015 Responsibilities: • Design and implemented the backend layer using Hibernate.  • Involved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) architecture and Hibernate.  • Applied design patterns including MVC Pattern, Façade Pattern, Abstract Factory Pattern, DAO Pattern and Singleton.  • Made use of content negotiation (XML, JSON, text/plain) using JAXB, GSON, Jackson, and XStream.  • Extensively used JMX API for management and monitoring solutions.  • Involved in developing front end screens using JSP, JSTL, DHTML, HTML, CSS, AJAX, JavaScript.  • Developed Web services to allow communication between applications through SOAP over HTTP using Apache Axis2.  • Implemented Hibernate for data persistence in Workflow screens. Used RAD6, WSAD as IDE for development of the application. Worked with Weblogic, Tomcat as the application servers and JMS as the message Server.  • Performed Clear Quest defects, Database change requests logging using Clear Quest. Used Perforce as versioning system.  • Developed RESTful services using Jersey, JAX-RS and Restlet to call third party vendors • Developed the automation environment for build, deployment, and configuration of Portlets onto the IBM websphere portal server using ANT scripts, XML Access scripts and JACL scripts.  • Used Spring Framework for Dependency injection and integrated with the EJB 3.0 using annotations.  • Generated Hibernate XML files for the configured beans. The business logic was written in EJB DAO classes and the service layer classes were configured in Spring-service.xml.  • Configured spring managed beans and their scopes.  • Implemented services that would route messages to different JMS queues based on message properties. These messages would be picked up by the appropriate ESB service which would in turn call the third party partner web services (both RESTful and SOAP).  • Configured and built Spring MVC application on Tomcat web server.  • Worked on UNIX Shell scripts and Cron jobs.  • Investigate, debug and fixed potential bugs or defects in the implemented code.  • Implemented junit tests and mandated 90% min. code coverage.  • Designed builds which can grow and support builds using Gradle.  • Develop named HQL queries and Criteria queries for use in application.  • Implemented transaction management for ORM project using Spring Transaction Management API.  • Created and built project using Maven.  • Created Stored Procedures and other SQL scripts using PL-SQL.  • Implemented logging using log4j and Spring AOP.  • Implemented various cross-project functionalities using Spring AOP.  • Configuring the service on Weblogic/WASapplication server for successful deployment • Modeled Flows with different flow state types.  • Used source control, used as plugin in eclipse.  • Involved in requirement gatherings and prototype development.  • Provide post production support for the project during business hours.    Environment: Solaris, JSP, JSF, Spring, Servlet, Hibernate, JMS, JCA, JMX, XML, CSS, XML Schema, AJAX (JQUERY, AJAX), JSON, JAXP, SAX, DOM, JAXB, Java Portlet Specifications, JAX-RPC, SAAJ, SOAP, Java script, PL/SQL, D/HTML, XHTML, Maven, Log4j, JUnit, Weblogic 8.0, Oracle 9i RDBMS, Mercury Quality Center 9.0, Eclipse 3.2. J2ee Java Developer Ford Motors - Dearborn, MI May 2012 to February 2013 Responsibilities: • Responsible for analysis, design, development and integration of UI components with backend using J2EE technologies such as Servlets, Java Beans and JSP.  • Functionalities include writing code in HTML, CSS, JavaScript, J-Query, Ajax, JSON, AngularJS, and Bootstrap with MySQL database as the backend.  • Using Technologies like SOAP, WSDL and UDDI based Web Services.  • Developed Hibernate 3.0 in Data Access Layer to access and update information in the database.  • Used SAML for SSO login to access the web service provided and OAuth for authorizing the user to the application.  • Configured beans in spring configuration file with Spring IOC, Spring Core, Spring AOP and MVC for enhanced modules.  • Implemented RESTFUL web services API using HTTP and REST principles • Used bootstrap and angular.js in effective web design.  • Used Angular-JS HTTP to retrieve data through Web API from entity frame work • Designed the workflow, system architecture, drawing sequence diagrams, activity diagrams, class diagrams, HTML pages, database schema and tables.  • Writing JSP's for user interfaces, JSP's uses Java Beans objects to produce responses.  • Involved in Tomcat server configuration for deployment.  • Wrote JAVA Servlets that generates dynamic VXML.  • Migrated the current Linux environment to AWS Linux environment and used auto scaling feature and Involved in Remediation and patching of Unix/Linux Servers.  • Used JUnit framework for Unit testing of application.  • Used log4j 1.2 to log different types of messages to write on to the proprietary log model.  • Use Case, Class, Sequence diagrams and also in complete development, testing and maintenance process of the application • Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature.  • Involved in testing the XML files and checked whether data is parsed and loaded to staging tables.  • Store persistent JMS messages or temporarily store messages sent using the store-and-forward feature.  • Used Hibernate to persist and retrieve data from database.  Environment: Java, J2EE, Struts, Spring, Hibernate, JSP, Servlet, XML Schema, SOAP, Javascript, PL/SQL, DHTML, XHTML, Ant 1.6, Log4j, JUnit, Weblogic10.0, Oracle 11g, Wsdl, IBM Rational rose, Maven, Eclipse, XSD. Java,J2EE Developer New York, NY August 2011 to April 2012 Responsibilities: • Involved in Design, Development, Testing and Integration of the application.  • Implementing business logic and data base connectivity.  • Client side installation and configuration of project.  • Implemented the Consolidated applications front-end pages using JSP, JSTL, and Struts Tag Libraries.  • Involved in developing UI layer using JavaScript, JQuery, and AJAX.  • Developed using simple Struts Validation for validation of user input as per the business logic and initial data loading.  • Developed the user interface for the thick client using Swing.  • Co-coordinated Application testing with the help of testing team.  • Writing database queries on Oracle 9i.  • Writing stored procedures, Packages, Views, Cursors, Functions and triggers using SQLin the back end.  • Used Hibernate for Object Relational Mapping (ORM) and data persistence.  • Wrote SQL commands and Stored Procedures to retrieve data from Oracle database.  • Developed web services using SOAP, WSDL, and XML.  • Developed the application using Singleton, Business Delegate and Data Transfer Object design patterns in the project.  • Created and implemented Oracle Stored Procedures, Functions, Triggers and complex queries using SQL.  • Used MQ series to send, receive and read the messages and also Created Queues.  • Worked with Java Messaging Services (JMS) for reliable and Asynchronous Communication.  • Used log4j for logging and SVN for version control.    Environment: Java, JSP, Struts 1.3.8, CMS, Spring 1.0.2, SOAP Web services, SOA, Java Swing, JavaScript, CSS, XML, JAXB XHTML, XSLT, JMS, MQ, Ajax, Hibernate 2.1, EJB 2.0, 2.1, Log4j, Oracle 9i, Web Sphere 6.1, Ant, RAD 7.0, Eclipse 3.2, UNIX, Perl. Education Bachelor's Skills J2EE (7 years), Java (7 years), Java Script (7 years), JMS (7 years), JSP (7 years) Additional Information TECHNICAL SKILLS:    J2EE Technologies: J2EE, Servlets, JSP, JSTL, JSF, JIRA, Angular JS, JDBC, MVC, OOP, Grails, Hibernate, spring, XML.  Web Technologies: JavaScript, CSS, AWS, Mule ESB, HTML5, DHTML, XML, DTD, HTTP, HTTPS, Jquery1.8, jQuery UI, Angular JS.  Spring framework: Bean Factory, Application Context, Dependency Injection/IOC, MVC, Struts, Data Binding, AOP, JDBC, ORM, JMS, Security, batch jobs, schedulers (Quartz).  Distributed: SOAP WS, RESTful WS, JMS API, WSDL, JAXP, JAXB, JNDI and XML.  computing  Languages: Java, PL/SQL, Bash, UML, XML, HTML.  IDE Tools: RSA, RAD, WSAD, Eclipse, NetBeans.  Web services: JMS, MQ Series, SOAP, Rest, WSDL, JAX-RS and JAX-WS.  Databases: Oracle, MySQL, MS SQL Server, MS Access, PostgreSQL.  Design: UML, Rational Rose, Agile, SCRUM, TDD, XP  Methodologies  Version control: SVN, CVS, Clear Case.  Tools  Operating Systems: UNIX (Solaris, Ubuntu, Linux, and OSX); Windows 9x/XP/Vista/7/8.  Testing Tools: JUnit, SOAP UI.  Application Servers: Web sphere Application Server, BEA Web logic, Apache Tomcat, JBoss 4.2.x, JBoss 5.1 EAP.