Java Developer <span class="hl">Java</span> <span class="hl">Developer</span> Java developer Dulles, VA I am software engineer with around 5 years of certified professional IT experience in Project analysis, Design, Development, Testing and Deployment of Web Based Applications using Java/J2EE. Actively involved in each phase of Software Development Life cycle (SDLC).  • Expert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Exception handling and Generics.  • Proficient in implementation of frameworks like Spring (Spring MVC, Spring IOC, Spring AOP, Spring Security, Spring Boot, Spring Data).  • Extensive Experience in developing persistence layer applications based on Object-Relational Mapping (ORM) between Java and Database using Hibernate.  • Experience in design patterns such as MVC (Model -View-Controller), Singleton, Session Facade, Factory, DAO, Front Controller and Business Delegate in the development of Multi-Tier distributed Enterprise Applications.  • Experience in developing Microservice based RESTful API utilizing Spring Boot.  • Experience in developing Stored Procedures, functions, triggers using databases like Oracle DB and MySQL.  • Extensive experience using JUnit, Mockito for unit /integration testing of application components.  • Used version control tools like SVN and Git and implemented a Continuous Delivery pipeline with Jenkins.  • Experience in using JIRA for bug tracking and raising tickets. Authorized to work in the US for any employer Work Experience Java Developer Virgin America - Burlingame, CA August 2018 to Present Project: Mercury    Description:  The Mercury Project targeted to provide a complex notification system for the airline company to monitor and manage all sort of messages as well as airline scheduling and status reporting information. The project contains five phases and now the second phase has been initiated. The main functionality is to build up a management system for the Virgin America administrative staff to monitor the airline scheduling info and send notifications under certain rules. Based on the first phase, the second phase needs to build up a new web-based user interface as well as database schemas according to the new requirements for the air scheduling system to cooperate with the legacy systems in Virgin America.    Responsibilities:  • Involved in SDLC Requirements gathering, Analysis, Design, Development and Testing of application using AGILE methodology.  • Involved in using Core Java concepts - Collections, Exception Handling, Multi-Threading and Serialization (JSON and XML) for serializing data.  • Used Spring Inversion of Control for injecting the beans and reduced the coupling between the classes while using MVC concept in design for both developing and testing purpose.  • Designed and developed web user interfaces using Angular 4, HTML5, and jQuery, providing a smooth transition.  • Applied lambda expression using functional interface, which brings better readability as well as streamlining complicated code.  • Used Hibernate for mapping java classes with database to store ticketing information and created queries with Hibernate Query Language (HQL) for later testing.  • Implemented Java and J2EE Design Patterns like Facade, Abstract Factory, Singleton, Factory, Data Access Object (DAO), Service Locator, and Chain of Responsibility.  • Developed Spring Framework based RESTFUL Web Services for handling and persisting of requests and Spring MVC for returning response to presentation tier.  • Created Stored Procedures, functions, views, indexes, constraints, triggers required SQL tuning to reduce the response time in the application.  • Used Core Java concept like Multithreading, Concurrency for performance and memory tuning for a friendly user interface.  • Designed unit and integration test cases using Junit, and used Log4j for logging error, info and debug messages.  • Used Jenkins plugins for code coverage and to run all the test before generating war file.  • Used MAVEN as build tool and developed build file for compiling the code of creating WAR files.    Environment: Java 8, Spring IOC, spring AOP, Spring DI, Spring Boot, Spring transactions, Angular 4, HTML5, jQuery, JavaScript, Hibernate, RESTFUL, Oracle DB, JUnit, Log4J, Jenkins, Maven, Git. Backend Engineer Civic System - Madison, WI May 2017 to August 2018 Project: AccountsPayable    Description:  The Accounts Payable system is an easy and powerful tool for entering, reviewing and approving payment invoices. Essential vendor information is efficiently stored to verify and validate each invoice and ensure maximum use of vendor terms and discounts. It provides full encumbrance accounting when interfaced with the General Ledger and Purchase Order systems.    Responsibilities:  • Application is implemented using agile methodology where there is a daily SCRUM meeting to facilitate the developing process as well as discovering any road blockers.  • Implemented the application using Spring IOC, Spring MVC Framework, and handled the security using Spring Security to protect client data.  • Developed the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management to ensure data integrity.  • Used hibernate named queries, criteria queries, Hibernate Query Language (HQL) to process the data from the database.  • Consumed SOAP and Restful web services in SOA environment and used SOAP UI for testing.  • Extensively used JUnit for unit testing, integration testing and production testing.  • Involved in installing and configuring Maven for application builds and deployment.  • Used JIRA to assign, track, report and audit the issues occurred during the application development.  • Setup the continuous Integration (CI) process for the application using Jenkins.  Environment: Java, Spring, Hibernate, Spring MVC, Spring Batch, Spring Security, JDBC, XML, Restful, SOAP, Log4j, SOA (Service Oriented Architecture), Oracle DB, Agile Methodology, JUnit, Maven, Jenkins, GIT, JIRA and Eclipse. Java Developer Alliant Energy - Madison, WI September 2014 to August 2015 Project: GIMMS    Description:  GIMMS (Gas Inspection Maintenance and Management System) and Handheld -GIMMS are the Web based applications for the Employees of the company and for the Field technicians to upload and Download the Field data on to the handheld device. GIMMS system is mainly used for utility purpose to provide the service such as Inspections of Pipe, Valves, Residential Services, Corrosion Protection, Maintenances and Leaks.    Responsibilities:  • Followed Agile software development paired programming, Test Driven Development, and Scrum meetings.  • Used Spring Framework AOP Module to implement logging in the application for application status, providing a better employee management.  • Used Hibernate for back end development and Spring dependency injection for middle layer development.  • Developed Microservice in combination with REST Web service to improve ease of accessibility.  • Used DAO pattern to fetch data from database using Hibernate to carry out various database.  • Used PL/SQL to extract data from the database, delete data and reload data on Oracle DB.  • Developed test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs.  • Used Maven to build and generate code analysis reports and JENKINS for continuous integration.  • Used SVN for the version management and for version controlling software.  Environment: J2EE, jQuery, CSS3, HTML5, Ajax, Core Java, Spring IOC, Spring MVC, Spring Security, Hibernate, Microservice, REST Web service, PL/SQL, JIRA, SVN, Maven, Junit, Mockito, Jenkins. Education Bachelor's in Computer and Informational Science University of Wisconsin Madison - Madison, WI Skills Apache (Less than 1 year), Css (Less than 1 year), databases (Less than 1 year), Design patterns (Less than 1 year), Eclipse. (1 year), Frameworks (Less than 1 year), Html (Less than 1 year), Java (2 years), Javascript (Less than 1 year), jquery (1 year), Jsp (Less than 1 year), Model view controller (2 years), Model-view-controller (2 years), Mvc (2 years), Mysql. (Less than 1 year), Oracle (2 years), Orm (Less than 1 year), Python (Less than 1 year), Sql (1 year), Xml (2 years)