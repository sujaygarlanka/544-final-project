Sr. Software Engineer Sr. <span class="hl">Software</span> Engineer Sr. Software Engineer • 18+ years of experience in designing and developing software, middleware, and databases.  • Over 11 years of experience in Object Oriented designing and developing.  • Proficiency in C++, Core Java.  • Proficiency in C.  • Experiences in Design Pattern.  • Experience in Data Structure and Algorithm, STL, Java Collection framework.  • Over 10 years of experience in Database development (Oracle, Informix).  • Over 10 years of experience in SQL, PL/SQL, JDBC, ProC, ESQL.  • Experiences in developing Stored Procedure, Triggers, Function, Package.  • Experiences in WEB SERVICE development (SOAP, WSDL).  • Experiences in Tomcat  • Experience Water fall, Agile Methodology, Confluence, Jira board, scrum, version one.  • Over five years of experience in client server environments, multi-threading, socket programming (TCP and JAVA Socket), Interprocess communication protocols, and Signal handling.  • Experience in UNIX (Compaq Tru64 UNIX, HP, AIX, Solaris, Linux).  • Over five years of experience in XML Stream processing, Dom, SAX, XSLT, JAXB.  • Experience in job scheduling with Quartz job, cron jobs  • Experiences in shell scripting.  • Experiences in CM Tools CMVC, Harvest, CVS and Clear case, TFS,GIT.  • Experiences in writing functional and technical specification. Work Experience Sr. Software Engineer Number Portability Administration Center - Sterling, VA February 2016 to December 2018 Project: NPAC (Number Portability Administration Center)  • Involved in designing and implementing NPAC Transition.  • Involved in designing and implementing NPAC Transition data validation.  • Involved in designing and implementing NPAC Transition Rollback  • Involved in requirement gathering and analysis, Development of various modules.  ? Operating system: Linux.  ? Database: Oracle.  ? Language: C++, ProC,Java, PLSQl, JDBC  ? Scripting: Shell scripting.  ? Development Methodology: Agile Sr. Software Engineer Local Registering Authority - Manassas, VA November 2014 to January 2016 • Involved in designing and enhancing PKICA(Certification Authority) server side with C++, JAVA, and JDBC, PLSQL,ENTRUST library  • Involved in designing and enhancing LRA (Local Registering Authority) server side with C++, JAVA, and JDBC, PLSQL.  • Involved in requirement gathering and analysis, Development of various modules.  • Involved in requirement gathering, analysis and creating proof of concept for the following  ? Root Key renewal.  ? Key migration from LUNA CA4 device to LUNA SA5 device.  ? Sub ordinate key And Certificate chain  ? Key on hold.  ? Two way SSL authentication.  Operating system: HP UNIX, Linux.  Database: Oracle, Postgre SQL.  External library: Pkics#10(safe net).  Language: C++, Java, PLSQl.  Scripting: Shell scripting.  Development Methodology: Agile Software Engineer A ABB company March 2014 to November 2014 • Distribution Management System (DMS) provides a means of acquiring, analyzing, monitoring and operating the electrical distribution network and manages the electric distribution resources.  • These resources consist of electrical equipment, vehicles and equipment inventory and field service personnel.  • Involved in requirement Gathering and Analysis, Development of various modules.  • Involved in Implementing server side with JAVA, JDBC, Pro*C.  • Involved in Implementing Store procedure, Triggers.  Data server: Oracle  Language: JAVA, JDBC Pro*C, PLSQL  Operating system: Sun Solaris  Development Methodology: Agile Lead Software Engineer Verizon Business - Tampa - FL March 2013 to March 2014 • Involved in requirement Analysis, Data analysis and designing.  • Leading and mentoring offshore team during implementation.  • Implemented UNIX shell scripts to create reports.  • Implemented UNIX shell scripts to redistribute Layer one circuit.  Applications: Common Data Modeling.  WFA-C: Data Integration to vRepair for Customer Ticket.  Data server: Informix.  Language: C++ and Esql/C.  Operating system: Sun Solaris.  TIrksFallout: Reconciliation between NSDB and Tirks data.  Backend Server:  Data server: Informix.  Language: C++ and Esql/C.  Operating system: Sun Solaris.  Web service:  Language: JAVA, JDBC.  Application Server: WEBLOGIC.  Data server: Informix.  XML Stream processing: XMLBEAN.  Build and deployment Tool: Ant.  Operating system: Sun Solaris. Sr. Software Engineer Delta Air Lines - Atlanta, GA November 2011 to March 2013 Application: Revenue Accounting.  Project: SIS (Simplified Interline Settlement)  Source receiver:  • Consuming incoming Interline Settlement data (Prime, billing memo, rejection memo, Rejection /Reason Form, Tax and Fee) coming from IDEC (Interline data exchange center).  Activities:  • Exclusive ownership of Design and development of IS_IDEC, Reject Rebill Source receiver.  Language: JAVA, JDBC, C++, ProC.  Data server: Oracle, DB2.  Build and deployment Tool: Ant.  Operating system: Sun Solaris.  Documentum Process:  • Managing Supporting document(s) for incoming (payable) documents from Other Airlines.  • Managing Supporting document(s) for outgoing (receivable) for Other Airlines.  Activities:  • Exclusive ownership of Design and development of DOCUMENTUM applications  Language: JAVA, DFC (Documentum foundation class) and JDBC.  Data server: DB2.  Build and deployment Tool: Ant.  Operating system: Sun Solaris.    Project: Matrix  Auto Reissue, Auto Refund: Handling Electronic Ticket and revenue data for reissued, refunded and T class ticket.  Activities: Exclusive ownership of enhancing Revenue Accounting.  Language: C++, ProC.  Data server: Oracle.  Operating system: Sun Solaris. Sr. Software Engineer Verizon Business - Tampa - FL March 2005 to November 2011 Project Location: Tampa - FL Jul 2009 - Nov 2011  Applications:  Spirit: Data Reconciliation between Switch and Billing.  Activities:  • Code conversion from Esql/C to proC++.  • Implementing Store procedure.  • Implementing JAVA utility Classes for WEB client.  Data server: Oracle.  Language: C++, JAVA, SQL, PL/SQL, ProC, JDBC.  Operating system: Linux, HP UNIX.    Common Data Modeling: DS -TIRKS Mapping, WEST, NORTH-EAST circuit and Device Mapping.  Activities:  • Exclusive ownership of Design and development of WEB SERVICE.  Language: JAVA, JDBC.  Application Server: WEBLOGIC.  Data server: Informix.  XML Stream Processing: XMLBEAN.  Build and deployment Tool: Ant.  Operating system: Sun Solaris.    Common Data Modeling: Ethernet private Line): Modeling EPL Customer circuit.  Activities:  • Exclusive ownership of Design and development of EPL Customer circuit modeling.  Data server: Informix.  Language: C++ and Esql/C.  Operating system: Sun Solaris.    Common Data Modeling LAYER1C: Virtual Inventory of all TIRKS Circuits.  Activities:  • Exclusive ownership of Design and development of Real Time LAYER1C.  Data server: Informix.  Language: C++ and ESQL/C.  Operating system: Sun Solaris.    Common Data Modeling: Virtual Inventory of VEDS FIOS.  Activities:  • Exclusive ownership of Design and development of WEB SERVICE and Backend Server to consume FIOS devices.  Language: JAVA, JDBC.  Application Server: WEBLOGIC.  Data server: Informix.  XML Stream processing: XMLBEAN.  Build and deployment Tool: Ant.  Operating system: Sun Solaris.  Environment: C, C++, Oracle, Informix, Weblogic, UNIX.    Project Location: Colorado Springs - CO Apr 2007 - May 2009  Applications:  Tool Server:  • Consists of a collection of tools (debug, Transcription and Call Recording.) that assist users in constructing and maintaining speech applications.  • The VXML tuning and debug gives the ability to analyze and tune VXML applications, view the debug information for any VXML call, schedule the logging of tuning and debugging information for any VXML call.  • The Transcription tool allows users to collect information about calls that were automatically transcribed (Speech to text).  • The Recording tool allows users to schedule a recording of calls.  Application type: Web based application.  Web server: Tomcat.  Data server: Oracle.  Web service: Axis.  Operating System: Linux.  Language: Java, JDBC, Sql, PL/Sql.  Interface Manager Process (IFM):  • Send to and receive messages from the IP Application Engine (AE) via message queues.  • Forward messages to and receives responses from the Router Gateway Interface Process (RGI), Voice Portal and Host Connect.  System Architecture:  • Socket interfaces and UNIX message queues in a multi-threaded environment using POSIX Threads.  Application Type: Middleware.  Operating System: Linux, Dec UNIX.  Messaging: TCP/IP, SSL, HTTPS, Message queue  Language: C++, ProC, PL/SQL.  Environment: C, C++, Oracle, Tomcat, Weblogic, UNIX.  Project Location: Tampa - FL Sep 2006 - Mar 2007  Application:  • Service Availability Tool (SAT) Exclusive ownership of Query Server.  • Query Server does services for a Web based client.  • Used C++, SQL and Xml parser to develop query server.  • Used Verizon frame work (CEM) for messaging.  Environment: C++, SQL, Informix, UNIX. Software Developer/Designer Verizon Business - Tampa - FL March 2005 to September 2006 Application:  • ISN Call processing and routing system. To process call for prepaid calling card, prepaid calling card, collect, third party call and tele conferencing.  System Architecture:  • Socket interfaces and UNIX message queues in a multi-threaded environment using POSIX Threads XML parser.  • Interface with oracle using ProC.  • Pl/sql to develop database.  • UNIX semaphore for process synchronizations.  • Used C++ to develop UA product.  • Used PL/SQL to Develop Database.  • Used Clear quest, Test director for defect tracking.  • Used Clear case for version control.  Environment: C, C++, Oracle, UNIX (AIX). Software developer/designer Verizon Data services April 2004 to March 2005 Application: Awas VzMaps.  • This software is developed to plot jobs, locate technician, Find the distance between jobs and technician and assign job to a technician who is close to the job.  System Architecture:  Client is a Web based application.  • Communication between processes is done via Socket, UNIX message queue.  • Interface with Informix using ESQL.  • C++ to develop Server.  • Java and Map Info interface to create map for client and plot jobs and technician.  • SAX Parser for parsing XML stream coming from external process.  Responsibilities:  • Exclusive ownership of Vzmaps server for design and development.  • Exclusive ownership of Vzmaps Database for Development  • Partial Ownership of client. It is only to develop Utility classes.  • Used C++ to develop server.  • Used Core java to develop Utility classes for client.  Environment: Java, C++, Informix, UNIX, XML. Middleware and database developer designer Bank One Card Services - Wilmington - DE May 2003 to February 2004 Application:  Enterprise Help Desk (EHD) Callback:  • A card services call-back system to permit the placing of an inbound caller into a call-back queue when customer service agents are unavailable or heavily utilized.  • The system places a return call to the customer at a predetermined and more convenient time and then routes the call to an agent upon successful connect event.  System Architecture:  • EHD MIDDLEWARE in a multi-threaded environment using JAVA Threads.  • Interface with IBM MQ SERIES message queues using JMS API.  • Interface with Oracle using JDBC.  • PL/SQL to develop EHD DATABASE.  • SAX Parser for parsing XML stream coming from VRU.  • SAX Parser for parsing configuration files to load classes for services.  • SAX Parser for parsing configuration file to read MQ managers channel and queue information for services.  Responsibilities:  • Exclusive ownership of EHD Middleware for analysis, design, development.  • Exclusive ownership of EHD database for Design and development.  • Partial ownership of Gateway Process. Used VC++ and Web Sphere MQ C++ classes.  • Used JAVA2 SDK 1.4.2, JDBC, SAX Parser and JMS API to develop EHD MIDDLEWARE.  • Used Eclipse development tools for EHD Middleware construction.  • Used ANT tool to deploy EHD middleware.  • Created Data model using ERWIN.  • Used PL/SQL to Develop Database (Package, Store function, store procedure).  • Created Triggers to populate history table.  • Used Test director to write test plan for unit test.  • Used harvest for version control.  • Design, development of Multithreaded VRUProxy simulator to provide development with a tool to simulate to make a call to EHD call-back system.  Environment: Java, C++, Unix (AIX), XML, JMS, MQ series Software Developer/Designer MCI Worldcom Inc. - Colorado Springs - CO March 1999 to December 2002 Application:  • PS and ERM of NGSN Call processing and routing system.  • Next Generation Service Node (NGSN).  • Next Generation Service Node is one of the projects that generate highest revenue in MCI  • WorldCom. Provisioning System (PS) Provisions call center applications, 32/64kbps Audios, Host connect application and local database out to the Voice Response Units (VRU) s.  • ECR Route Manager (ERM): A middleware to develop call plan for call center application and route call plan to PS for provisioning.  • ECR Route Manager (ERM)/PS Interface: Routing call center applications and Audios from Client (Web) to Voice Response Units (VRU) s.  System Architecture:  • Socket interfaces and UNIX message queues in a multi-threaded environment using POSIX Threads.  • Interface with oracle using ProC  • UNIX semaphore for process synchronizations.  Roles:  • Analysis, design, development of NGSN Provisioning System, ECR Route Manager (ERM), ECR Route Manager (ERM)/PS Interface.  • Designing system architecture of GFP (Generic file provisioning).  • Developing and optimizing SQL, PL/SQL (Stored Procedure, Function, Package, Triggers script to maintain Oracle database.  Responsibilities:  • Ownership of processes (PSUI, DISPATCHER, COLLATOR, ERM, GAPI, Route manager) for Construction and maintenance.  Environment: C++, C, Java, Oracle, JDBC, UNIX (HP, DEC). Software developer National Research council - Ottawa, ON December 1997 to January 1999 Application: Ice forecasting program of Environment Canada  • Analysis, design and development of the operational ice forecasting program.  Responsibilities:  • Design and implementation of Ice module and its interfaces of ice forecasting Program. Utilized C on Unix (HP).  • Design and implementation of Graphical user interface (GUI) to view Ice concentration and movement.  • Utilized Java, Socket interface, AWT and JNI on both Unix (HP) and Window  • Design and implementation of tools to create Excel file from binary file generates by ice forecasting program.  • Utilized C++.  • Developing tools for Research fellows team on their demand.  • Utilized C/C++.  • Maintenance operational forecasting program developed with FORTRAN.  Environment: C, Java, C++, FORTRAN, AWT, JNI, UNIX (HP), WindowNT. Programmer Analyst Saint-Hubert, QC January 1996 to March 1997 Responsibilities:  • Analysis, design and development of Console User Interface to demonstrate the performance of a Keyboard substitute device. Utilize TurboC on Microsoft DOS 6.  • Analysis, design and development of Graphical user interface (GUI) to demonstrate the performance of a Keyboard substitute device. Utilize Visual C++ and Windows API.  • Design and implementation of the interfaces and their modules to handle event generated by multiple keystrokes.  Environment: TurboC, Visual C++, Windows API, Window 95, Microsoft DOS 6. Education Diploma in Computer in Computer science Delta College - Montréal, QC