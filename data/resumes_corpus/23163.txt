SOFTWARE DEVELOPER <span class="hl">SOFTWARE</span> <span class="hl">DEVELOPER</span> SOFTWARE DEVELOPER Portland, OR GOALS  • To find a software company that can help me grow as a programmer, and one that I can feel like part of a team.  • To learn as many new technologies as I can, and to grow my repertoire of languages, skills and technologies.  • To be a part of a company I really care about, and feel like I have a stake in.  • To continue on the path of becoming a software architect  • To grow my knowledge of data science Work Experience SOFTWARE DEVELOPER TOWERS WATSON August 2015 to July 2019 • React/MVC Website  • Website for healthcare exchange  • Yarn/NPM package manager, Cake build, rake build, Ruby and Bash scripts  • React/.NET Core Web Application - Microservices  • Authentication prototype using Auth0 integration  • React frontend, .NET Core backend/backend-for-frontend  • Session storage  • Cypress automation testing  • Jest unit testing  • Web API  • Team City for CI and CD  • Full SCRUM process  • ReactJS on web projects  • JIRA for issue tracking  • Unit Testing in XUnit/NUnit  • Git/Github for source control; code reviews through PR's  • Azure infrastructure built out using Terraform  • Concourse pipelines on Linux/Ubuntu  • Azure function deployments using Concourse  • Azure managed SQL instances  • Cypress automated testing  • Jira/Confluence/Slack for communications SOFTWARE DEVELOPER DOCUMATIX May 2015 to August 2015 • Documatix Product Suite  • MVC 4 using Knockout and jQuery for lightweight user interfaces  • Integration with Entity Framework  • CSS use/heavy design-driven development SOFTWARE DEVELOPER II PRIMARY RESIDENTIAL MORTGAGE INSURANCE April 2014 to May 2015 • Careers Application  • Currently rewriting/enhancing PRMI's careers/jobs application  • Uses Knockout, jQuery, MVC 4, Razor, Entity Framework, WCF  • Jobs board for client interaction  • Resume parsing and LinkedIn API to autofill portions of the application  • Managers will have the ability to filter/search by terms included in a resume/LinkedIn profile, as well as terms in the candidate's application  • Supply Closet Dashboard/Ordering System  • Web forms system using lightweight UI with Knockout  • Integrated into preexisting internal corporate site  • Ordering system integrated into existing support ticket system  • Bug Fixes/Enhancements For Existing Corporate Site and Public Site  • Responsible for bug fixes and enhancements on current sites, including:  • Payroll systems  • Presentation layer/visual fixes  • Services layer fixes  • Data-issue resolution JR. SOFTWARE DEVELOPER EARTHSOFT INC July 2012 to April 2014 • One of the first to start building the new enterprise client from the ground up  • Was one of the first two to pilot our new dashboard technology (third-party library developed by Kalitte)  • Built the file explorer widget, which allowed users to group and move files and other data  • Context menus, a draggable UI layout, a tree, a table and inter-widget drag and drop were all implemented in JavaScript    • Built a client-side dashboard for displaying different sets of environmental data  • Contained around 20 different charts built using HighCharts JavaScript library  • The user could set the number of rows and columns through the query string  • Charts had inherited methods and a life cycle (inheritance achieved through the use of a mixin function)  • Data from the server was changed from an array of data to a tree structure, which was then used to provide filtering through drop down menus on each chart itself (custom data structure now released on GitHub called Stor)    • Real-time, live-data enabled charting using data from REST API's  • WCF REST services and web services utilized (.asmx)  • HighCharts JavaScript charting library used for client side charts  • Pie, line, column, bar, stacked column, wind rose, candlestick charts implemented, including charts with multiple series of different types  • Chart functionality extended to include user defined flags on data points, and the ability to display ranges of data based on a 4-character qualifier in a different color    • Daily and regular duties include:  • Creating new dashboard widgets including data access, business logic, client-side logic and presentation  • Writing complex MSSQL queries including CASE, WITH/AS, and JOIN statements, subqueries, dynamically created SQL, and aggregate functions  • Filtering of data using LINQ  • Business logic written in C# and JavaScript  • Web services in .asmx and WCF REST  • Responding to time-sensitive client issues/bug fixes  • Managing a case load with different deadlines, priorities and areas for each case  • Managing a daily schedule to make sure high priority tasks are done first  • Determining case priority based on client, urgency and desired features request/bug fix  • Attending weekly and bi-weekly meetings  • Primary/only developer on our Live module, which deals with retrieving and displaying real-time data  • Live currently contains 8 widgets and 7 agents  • Live agents vary from implementation to implementation, but typically involve interfacing with a third-party REST service to pull data down and modify it for use in our database schema at user-set intervals  • Some agents are asynchronous and use object locks to prevent race conditions/deadlocks/improper access of resources  • Live widgets include tables, trees and charts implemented in JavaScript, data access down through a .asmx service, and user settings/widget initialization done in code behind in C# Education BACHELORS OF SCIENCE in Computer Science WEBER STATE UNIVERSITY December 2014 Skills .net, Api, C#, Javascript, Webpack, CSS, Git Additional Information Skills & Abilities  PROGRAMMING LANGUAGES  • C#/.NET (7 years professional experience)  • Enterprise-level web development  • Web Forms development, including custom controls (both user and in-code composite controls)  • Custom controls with internal state management  • Multi-threading  • ASP.NET MVC  • Custom controller factories  • Custom global and local filters  • Use of third party frameworks for development, such as Kalitte Dashboard Framework  • REST services (WCF, Web API, Web Services, Page Methods)  • Delegates (Action/Func)  • WinForms/WPF    • SQL/T-SQL (4 years professional experience)  • Basic SELECT, INSERT, UPDATE, DELETE statements  • WITH statements  • CASE statements  • Dynamically-generated SQL  • TRIGGERS  • Date math  • OHLC queries    • Javascript (3 years professional experience)  • React/React Hooks+  • jQuery  • Highcharts  • Webpack  • Babel transpiling    Technologies  C#, .NET Core 2.1/2.2, React, MSSQL, Entity Framework, Dapper, Concourse, Terraform, Azure B2C, Azure infrastructure, Bash, Python, C# Script