Full Stack Python Developer Full Stack <span class="hl">Python</span> <span class="hl">Developer</span> Full Stack Python Developer - Bed Bath & Beyond Jersey City, NJ • 5+ years of experience as a full stack Developer with proficiency in Analysis, Design, Deployment and Testing Enterprise Applications using Python and Django, JavaScript, Angular, jQuery, Node.js, and Express.js.  • Proficient in front-end development using Angular 2+, AJAX, HTML5, CSS3, XML, and Bootstrap.  • Experience Deploying, Managing and operating scalable, highly available, and fault-tolerant systems in AWS.  • Experienced in working with Angular features like Directives, Components, Router, Data Binding, Reactive Forms, Form Validations, Pipes, and Services.  • Experience working with Django Templates, Views, Forms, Authentication and Authorization, and Models.  • Experienced with using popular Python libraries such as Requests, Scrapy, BeautifulSoup, TkInter, NumPy, SciPy, Matplotlib, and Pandas.  • Implemented projects using Python and Django framework along with JavaScript frameworks such as Angular and Bootstrap with jQuery.  • Proficiency in developing single page applications (SPA) using Angular 2+ to create responsive web applications, with extensible code.  • Strong foundation in OOP principles and writing extensible, reusable, and maintainable code.  • Extensive experience using and creating APIs in Python using the Flask and Django frameworks, and JavaScript using Node.js with Express.js.  • Experience implementing Object-relational Mapping (ORM) using SQLAlchemy and ODM for MongoDB.  • Experience with creating, querying, and maintaining databases with many DBMS such as MySQL, MongoDB, SQLite, PostgreSQL, MS SQL, and Oracle. Experience working with web servers such as Apache, and Nginx to deploy projects.  • Hands-on experience in AWS Services and related features and services like EC2, S3, ELB, EBS, IAM, AMI, Lambda functions, and Boto3.  • Experience deploying servers on Elastic Beanstalk and Bitnami and configuring VPCs and Security Groups.  • Experience with version control systems like Git and testing frameworks like unittest, Karma, and Jasmine.  • Experience in working and developing in separated environments with virtualenv.  • Experience using JIRA to manage workflow and track progress. Authorized to work in the US for any employer Work Experience Full Stack Python Developer Bed Bath & Beyond - Union, NJ May 2018 to Present Description: Bed Bath & Beyond is a major retail company with retail stores in the United States, Puerto Rico, Canada, and Mexico. They have an internal inventory management application that tracks item stock across various locations and the items' suppliers. The application also collected statistics on item usage, trends, and demand over time, which was used to make business analysis reports. The application allowed users to view, create, and manage product requests. Users of the application had a hard time keeping up with customer demand as the large number of products available for sale made it difficult for them to effectively make orders. An automated system was set up so that users can see in the application when stocks run low or run out, and users get notified of these alerts by email. I was mainly involved in setting up the automatic email alerts and redesigning the user interface of the application. I created a REST service using Node.js and Express.js in combination with Mongoose and a MongoDB server. I also created a user interface with Angular, and made a Django backend with a REST service to handle alerts and send emails using Amazon SES with Boto3.    Responsibilities:  • Involved in various phases of the Systems Development Life Cycle (SDLC) like Requirements Gathering, Development, Design, Implementation, and Deployment of the project.  • Developed REST APIs using Django REST Framework and Node.js with Express.js. Consumed the Django and Node REST APIs in Angular using Services.  • Used Django ORM to interface the Django service with the MySQL database.  • Used HTML5, CSS3, and Angular to develop a presentable and responsive user interface.  • Created a Django REST API using MySQL as the database for managing inventory alerts.  • Utilized custom Components and Angular Reactive forms to make the User Interface interactive.  • Utilized Angular built-in and custom Services to consume the RESTful APIs in the front end and used Angular 2+Routing for navigation and Pipes to format the data into a user-friendly format.  • Managed data migrations, wrote queries for, and maintained a MongoDB database.  • Utilized Mongoose for Object relational mapping (ORM) to create model Schema and database design.  • Handled multipart encoded forms in the Node.js server using the Multer library.  • Tested the RESTful API using Postman, Compass, and MongoDB Shell and tested the Django REST service and MySQL data integrity using MySQL Workbench.  • Utilized the AWS SES service in combination with the Boto3 library to send emails.  • Written AWS Lambda functions using Python for server less computing platform.  • Utilized Amazon Cloud Watch Agent to monitor statuses of the MongoDB and MySQL databases.  • Used Amazon SNS to send notifications to alert administrators of problems with the databases.  • Tested the Python scripts using the unittest package, and tested the Angular site using Karma and Jasmine.  • Made use of the Git version control system to track progress and facilitate simultaneous development.    Environment: Angular 2+, Node.js, Express.js, Python, Django, Django REST Framework, Boto3, AWS, SES, CloudWatch, Mongoose, MongoDB, Postman, Compass, MongoDB Shell, MySQL, MySQL Workbench, HTML5, CSS3, unittest, Karma, Jasmine, Git Full Stack Django Developer The Children's Place - Secaucus, NJ April 2017 to March 2018 Description: The Children's Place is a retailer specializing in children's apparel and accessories. They have an e-commerce website where users can add items to a cart, update and remove items from the cart, and place orders. The old site was limited in functionality and was straining under added load. They decided the site would be revamped and deployed into a more scalable platform. I was hired to assist in revamping the website along with adding new functionalities to it. I used the Django framework to handle inventory request order details and Node.js with Express to handle inventory stock and provider details, Angular for the front end, and MySQL as the database. I also used Amazon EC2 and ELB for deployment.    Responsibilities:  • Involved in all phases of SDLC including Requirements Gathering, Design, Analysis and Testing of customer specifications, Development, Implementation, and Deployment of the application.  • Developed the back end of the website using the Django framework using the MySQL database and used Django ORM to coordinate the back end internal data with the MySQL database.  • Utilized the Model View Template (MVT) architecture to separate the business logic from the presentation logic in the code.  • Made extensive use of OOP principles to create easily extensible code by implementing design patterns.  • Created a Single Page Application (SPA) using Angular, using Routing to switch between different views.  • Created Django Models and utilized QuerySets to manage the back end and database integration.  • Separated routes in Node.js REST API using the Express router in separate files for each resource.  • Implemented authentication in the Node.js backend using JSON Web Tokens (JWT).  • Developed RESTful APIs using the Django REST Framework, tested the RESTful APIs using Postman and integrated the Django back end and Angular front end using RESTful APIs.  • Used Class-Based Generic Views to make a User Interface with simple and easily extensible code. Used Django validators to validate user input before inserting into database.  • Used session management to track the users' cart items. Implemented authentication model in Django to ensure that only users logged in can place orders.  • Used Angular Services for Dependency Injection to provide data from REST service asynchronously to several Components. Used Angular Route Guards to block routes from unauthenticated users.  • Created Amazon EC2 instances made from AMIs to deploy the website and utilized AWS Auto Scaling to manage traffic directed at the website.  • Added Health Checks to the Auto Scaling Group to monitor EC2 instance health and made use of Amazon RDS so that all the instances would access data that is consistent.  • Tested the Django project using the unittest framework, as well as testing the Angular application using Karma and Jasmine.  • Made use of the Git version control system to track progress and facilitate simultaneous development.  Environment: Python, Django, Django REST Framework, MySQL, MySQL Workbench, HTML, CSS, JavaScript, TypeScript, Angular, AWS EC2, AWS ELB, unittest, Karma, Jasmine, Git Django Developer / AWS Developer Hershey, PA December 2015 to March 2017 Description: Hershey's is a major chocolate manufacturer. They also manufacture baked products such as cakes, cookies, and shakes as part of their diverse variety of products they create. Hershey's has an internal service in which users can upload and share images of their goods. This allows Hershey's marketers to effectively create their marketing campaigns. The original application was not designed for scalability and availability, as it was designed for users in only one location to share photos. Its early success meant that the application had to be made scalable and made available to a wide variety of locations around the U.S. and the world. I was hired as part of a team that worked on making renovations to the application and to make the project scalable. I used Django to make the user interface and backend, and Amazon S3 in combination with Boto3 to host the images.    Responsibilities:  • Involved in various phases SDLC like Requirements Gathering, Development, Design, and Implementation of the project.  • Constructed Restful API using Django's URL Configuration to setup the URL structure, and Views to handle the requests and to return the responses.  • Created a user interface using HTML, CSS, and used Angular to make the interface responsive.  • Used the Django MVT Framework to separate the business logic from the view logic.  • Used Django Forms to gather and process data from the front end. Used Django Validators to validate the submitted form data.  • Created Models and Views to implement the REST service and utilized Django's authentication system to block views from unauthorized users.  • Utilized Angular Services with HttpClient and Directives to obtain the data used to present the user interface.  • Used Reactive Forms to construct the user forms and Angular Validators to validate the submitted data.  • Implemented authentication in Angular using JWT to ensure that only authenticated users can post images.  • Applied regular expressions to validate input fields and URLs and Involved in creating and extracting data from database using SQL Queries.  • Handled file uploads using Django's File Handling system with Boto3 and stored images into Amazon S3 Buckets, and monitored requests using Amazon CloudWatch.  • Used AWS Lambda functions to send notifications of S3 Bucket status and alerts.  • Deployed the website to EC2 instances using Amazon ELB to ensure availability. Utilized AWS SNS to send notifications of health status of EC2 instances.  • Tested the Django project using Python unittest package and managed software version control using Git.  Environment: Python, Django, unittest, HTML, CSS, Bootstrap, AWS, Boto3, S3, EC2, ELB, Git Full Stack Django Developer St. Peter's University Hospital - New Brunswick, NJ June 2014 to November 2015 Description: St. Peter's University Hospital is a non-profit hospital sponsored by the Roman Catholic Diocese of Metuchen. They are technologically advanced teaching hospital that provides a broad selection of services to the community. St. Peter's University Hospital has an internal application that manages the details and documents of the hospital's patients. Users of the application can add information for incoming patients, edit any patient's information, and view information about patients to check for documentation. Prior to this project, employees in charge of managing patient information used to input the information manually into Excel documents. The team I worked with was tasked to create an application so that those employees have an easier time with data input. I was tasked with developing a web site that hosts the application. The project uses Django as the back end with MySQL as the database and uses HTML, CSS and Bootstrap for the front end.    Responsibilities:  • Involved in all phases of SDLC including Requirements Gathering, Design, Analysis and Testing of customer specifications, Development, Implementation, and Deployment of the application.  • Utilized the Django MVT framework to separate presentation logic from business logic.  • Created custom Models, Views, and Templates to implement the project.  • Used HTML, CSS, Bootstrap to create a user interface that is presentable. Used jQuery and Ajax to make the user interface responsive.  • Used Django authentication system to block certain views from unauthorized users. Utilized User and Group models to implement authentication.  • Collected patient information from users using Django forms. Stored relevant information into a MySQL database.  • Utilized QuerySets and Django ORM to synchronize data between the back end and the database.  • Wrote unit tests using Django.test and unittest to verify the integrity of project during development.  • Tested integrity of JavaScript code using Karma and Jasmine. Tested correctness of database implementation using MySQL Workbench.  • Used Git software version control to allow simultaneous development.    Environment: Python, Django, HTML, CSS, Bootstrap, jQuery, Ajax, JavaScript, unittest, Karma, Jasmine, MySQL, MySQL Workbench, Git Education Bachelors of Science in Computer Science and Mathematics in Computer Science and Mathematics Rutgers University - New Brunswick, NJ Additional Information TECHNICAL SKILLS:    Programming Languages Python 3, JavaScript, TypeScript, Java, C, C++, SQL  Databases MySQL, PostgreSQL, MS SQL, Oracle, SQLite, MongoDB  Frameworks Django 1/2, Flask, Express.js, Node.js, Angular 2+  AWS Services EC2, S3, ELB, Auto Scaling, Health Checks, Security Groups, EBS, RDS, IAM, AMI, Lambda functions, CloudWatch, VPC, Route 53  Libraries  Requests, Scrapy, BeautifulSoup, SQLAlchemy, TkInter, NumPy, SciPy, Matplotlib, Pandas, PyMongo, Boto3, re, collections, unittest, jQuery, Karma, Jasmine    Web Development Bootstrap, DOM, HTML5, CSS3, REST, SOAP, JSON, Ajax  Tools Postman, Compass, MongoDB Shell, MySQL Workbench, Git, Unix