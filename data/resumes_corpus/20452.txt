Sr. Full Stack Python Developer Sr. Full Stack <span class="hl">Python</span> <span class="hl">Developer</span> Sr. Full Stack Python Developer - 7-Eleven Dallas, TX • Around 6 years of experience in IT services and consulting working as a Sr. Full Stack Python Developer with expertise in Python, Django/Flask, design patterns, libraries (NumPy, SciPy, matplotlib, Pandas, SQLAlchemy), Amazon Web Services (AWS), NoSQL (MongoDB, Cassandra) and Relational databases (MySQL, SQL Server, Oracle, Postgres), Big Data and Hadoop technologies working in full Software Development Life Cycle (SDLC).  • Proficient architecting scalable platforms, Object-Oriented Programming (OOP), database design, creating Web Services, SOAP, REST and Microservices.  • Highly experienced with DevOps technologies including Jenkins, Splunk, Chef, RabbitMQ, ELK Stack, Apache ActiveMQ, Docker, Kubernetes, Ansible.  • Expertise using front-end technologies such as AngularJS, ReactJS, JavaScript. HTML5, CSS3, Bootstrap, AJAX, jQuery, JSON.  • Extensive experience writing PL/SQL and SQL queries, stored procedures, functions, packages, tables, views and triggers. Work Experience Sr. Full Stack Python Developer 7-Eleven - Dallas, TX June 2018 to Present • Managed large datasets using Pandas API ecosystem to analyze the different segments of customers based on Location.  • Developed views and templates using Python and created a user-friendly website interface using Django's view controller and template language.  • Developed project's web page as Single Page Application (SPA) by using AngularJS and JavaScript API and build delivery driver application.  • Implemented advanced procedures like text analytics and processing using the in-memory computing capabilities like Apache Spark.  • Created a Handler function in Python using AWS Lambda that can invoke when the service is executed.  • Used jinja2 if statement for structure control. Used PyChecker for testing code.  • Created services using AngularJS factory method and used AngularJS $q and promise to handle asynchronous calls.  • Automated the existing scripts for performance calculations using Numpy and used SQLAlchemy to fetch the data.  • Generated Python Django forms to record data of online users and used PyTest for writing test cases.  • Responsible for the Automation of the deployment of the Conductor application on AWS lambda using high-end AWS architectural components.  • Involved in building database Model, APIs and Views utilizing Python, to build an interactive web-based solution.  • Created bean docker gem for easy creation of additional docker containers on Elastic Beanstalk instances for testing and diagnostics.  • Created RESTful API's to integrate and enhance functionalities of the application. Also Utilized Restful API in communicating with third parties.  • Refactored and extended large existing Django/ Python code base by maintaining PEP-8 code standards and fix the bugs.  • Designed and developed web crawler in python using Scrapy framework and using RabbitMQ as a messaging server between the microservices.  • Installation, configuration and administration of Virtual box and VMware virtual machine for Ubuntu and Linux servers.  • Used Kubernetes to deploy scale, load balance and manage Docker containers with multiple namespace versions.  • Added support for Amazon AWS S3 and RDS to host static/media files and the database into Amazon Cloud.  • Designed and Implemented Microservices Architecture Applications using AWS ECS and Docker.  • Involved in development of Web Services using SOAP and REST for sending and getting data from the external interface in XML and JSON format.  • Develop Automation Scripts and programming libraries that interface with various devices and deal with repetitive tasks such as configuration and extraction of CLI outputs using Python.  • Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework called PyUnit.  • Worked on Element Tree XML API in python to parse XML documents and load the data in database.  • Make connection with using TCP/IP protocol with the help of Socket module in python to connect with .external java collector to monitor application performance.  • Unit test all develop module using PyUnit and nose test framework, also develop custom scenario to test worst case scenario for the application.  • Worked with open-stack services such as NOVA, SWIFT, KEYSTONE, NEUTRON, CINDER and GLANCE. Used J2EE Design patterns (Singleton, Service Locator and DAO).  • Added support for Amazon AWS S3 and RDS to host static/media files and the database into Amazon Cloud.  • Developed Kafka producer and consumers, HBase clients, Spark, shark, Streams and Hadoop MapReduce jobs along with components on HDFS, Hive.  • Leveraged AWS cloud services such as EC2, auto scaling and VPC to build secure, highly scalable and flexible systems that handled load on the servers.  • Implemented TFS Build Archival to AWS Simple Storage Service S3 and created Life Cycles for managing the files in S3. Implemented cloud watch for setting alarm for monitoring the Ec2 instances.  • Used Kubernetes to deploy scale, load balance, and worked on Docker Engine, Docker HUB, Docker Images, Docker Compose for handling images for installations and domain configurations.  • Extracted data from the database using SAS/Access, SAS SQL procedures and create SAS data sets. Responsible for Data Backups, Restores and Recovery using tape.sys software.  • Used python packages cx_oracle, pyodbc and MySQL dB for working with Oracle, sql server and MySQL DB respectively. Code conventions, pushed for PEP8 and Pylint compliance Analyzing the data in existing PIP schema. Modifying data using SAS/BASE, SAS/ MACROS.  • Worked on NoSQL database MongoDB and developed custom MongoDB applications as per the client specification.  • Created server monitoring daemon with Psutil, supported by Elasticsearch app for analytics which I created. Also researched big data solutions with Cassandra database.  • Worked on migration of Splunk to AWS(cloud) instances. Involved in standardizing Splunk forwarder deployment, configuration and maintenance across UNIX and Windows platforms.  • Configured Elastic Load Balancer and Auto scaling to design cost effective, fault tolerant and highly available systems.  • Created Python and Bash tools to increase efficiency of application system and operations, data conversion scripts, AMQP/RabbitMQ, REST, JSON, and CRUD scripts for API Integration. Worked on AJAX framework to transform Datasets and Data tables into HTTP Serializable JSON strings. Placed data into JSON files using Python to test Django websites.  • Wrote Python code embedded with JSON and XML to produce HTTP GET request, parsing HTML data from websites. Implemented SOAP/RESTful web services in JSON format.  • Using Chef, deployed and configured Elasticsearch, Logstash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and CloudWatch.  • Built Elastic search, Log stash and Kibana (ELK) to store logs and metrics into S3 bucket using Lambda function.  • Worked on developing CRUD applications using MERN stack (MongoDB, ExpressJS, ReactJS and NodeJS) and REST based API.  • Wrote python scripts using Boto3 to automatically spin up the instances in AWS EC2 and OPS Works stacks and integrated with Auto scaling to automatically spin up the servers with configured AMIs.  • Developing python programs by using boto3 sdk to implement security by using AWS Cognito service.  • Using Python, included Boto3 to supplement automation provided by Ansible and Terraform for tasks such as encrypting EBS volumes backing AMIs and scheduling Lambda functions for routine AWS tasks.  • Used ReactJS to create Controllers to handle events triggered by clients and send request to server. Maintained states in the stores and dispatched the actions using redux.  • Developed Docker images to support Development and Testing Teams and their pipelines and distributed images like Jenkins, Selenium, JMeter and ElasticSearch, Kibana and Logstash (ELK) and handled the containerized deployment using Kubernetes.  • Log monitoring and generating visual representations of logs using ELK stack. Implement CI/CD tools Upgrade, Backup, Restore, DNS, LDAP and SSL setup.  • Worked with Data migration from Sqlite3 to Apache Cassandra database. Cassandra data model designing, implementation, maintaining and monitoring using DSE, Dev Centre, Data stax Ops center.  • Build the Silent Circle Management System (SCMC) in Elasticsearch, Python, and Node.JS while integrating with infrastructure services.  • Automated various infrastructure activities like Continuous Deployment, Application Server setup, Stack monitoring using Ansible playbooks and has Integrated Ansible with Run deck and Jenkins.  • Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python. Run Ansible Scripts to Provide Dev Servers.  • Used SQL Alchemy as Object Relational Mapper (ORM) for writing ORM queries.  • Developed a module to build Django ORM queries that can pre-load data to greatly reduce the number of databases queries needed to retrieve the same amount of data.  • Creating and configuring virtual development environments with Chef and Virtual Box part of the SOA (Service Oriented Architecture) team enforcing best practices for services (REST and SOAP).  • Built application interface and web scrapping scripts using OO designing, UML modeling and dynamic data structures.  • Implemented discretization and binning, data wrangling: cleaning, transforming, merging and reshaping data frames.  • Determined optimal business logic implementations, applying best design patterns.  • Increased speed and memory efficiency by implementing code migration to convert python code to C/C++ using Cython.  • Written and Maintained Automated Salt scripts for Elasticsearch, Logstash, Kibana, and Beats.  • Developed full stack Python web framework with an emphasis on simplicity, flexibility, and extensibility. It is built atop excellent components and reinvents zero wheels. WSGI, routing, templating, forms, data, plugins, config, events, SQL Alchemy, Storm, CouchDB, OpenID, App Engine, jQuery, etc.  • Validated BI Support events, transformed and batched events which are sent to HNM and Kafka by triggering these events using Kafka, Mesos.  • Developed a fully automated continuous integration system using Git, Gerrit, Jenkins, MySQL and custom tools developed in Python and Bash.  • Involved in front end and utilized Bootstrap and Angular.js for page design. Created Data tables utilizing PyQt to display customer and policy information and add, delete, update customer records.  • Used PyQuery for selecting particular DOM elements when parsing HTML. Used Wireshark, live http headers, and Fiddler debugging proxy to debug the Flash object and help the developer create a functional component. Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval.  • Worked with python editors like PyCharm, PyScripter, PyStudio, PyDev, Wing IDE and Spyder.  • Developed tools using Python, Shell scripting, XML to automate some of the menial tasks.  • Working in team of Architects and Developers to build and deploy Python Flask Peewee Linux AWS.  • Used RAD 7.0 for implementing Static and Dynamic web services for consuming and providing services related to the business.  • Worked on Jenkins continuous integration tool for deployment of project. Played a key role in a development wide transition from Subversion to Git, which resulted in increase in efficiency for the development community.  • Programmatically controlled the COMSOL Multiphysics model in the MATLAB® graphical user interface to perform case studies and customize plots and data processing.  • Used TKinter to implement GUI for the user to create, modify and view reports based on client data.  • Used Python Library Beautiful Soup for web Scrapping. Responsible for debugging and troubleshooting the web application.  • Integration with CICD (Continuous integration and continuous Deployment) Process for all microservices and serve them to external innovations.  • Support Client side liberaries like angular and database connection like mysql, Casandra, mongoDB and postgres through the Node base microservice and have them connected with Api calls.  • Created Polymer.js , ES6 application to make UI by Dragging and Dropping the web components, where each component contains different microservice and make UI after combine all microservice together. Developed ES6 web components for the multiple uses in the UI.  • Worked with Docker for containing microservices and write docker file, Jenkins for Automated Integration  • Developed Restful MicroServices using Flask and Django and deployed on AWS servers using EBS and EC2.  • Worked on Cloud platform engineering Kubernetes, Spinnaker, Docker, Terraform, Consul, drone Jenkins, Chef, Kitchen. Scheduled, deployed and managed container replicas onto a node cluster using Kubernetes.  • Wrote Ansible Playbooks with Python SSH as the Wrapper to Manage Configurations of AWS nodes and Tested Playbooks on AWS instances using Python. Run Ansible Scripts to Provide Dev Servers.  • Used Pandas library for statistical Analysis. Panda's library was used for flexible reshaping and pivoting of data sets.  • Used Celery as task queue and RabbitMQ, Redis as messaging broker to execute asynchronous tasks. Sr. Full Stack Python Developer Infosys - IN April 2016 to January 2018 • Developed web scrapers using urllib3 to collect raw data from the web and Data exporting to CSV file using Pandas.  • Used advanced packages like Mock, patch and Beautifulsoup in extracting the Data during development phase and perform unit testing.  • Used Pandas API to put the data as time series and tabular format for east timestamp data manipulation and retrieval.  • Created Python scripts for data access and analysis (Scripts, DataFeeds, XLS, FIXML) to aid in process and system monitoring, and reporting.  • Installed/configured/maintained Apache servers on all machines (production server and development servers).  • Developed Restful Microservices using Flask and Django and deployed on AWS servers using EBS and EC2.  • Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format.  • Constructed and involved in penetration tested Production EC2 Container Service Stacks; as well as installed, managed and designed DOL - Docker Containers onto AWS-GovCloud.  • Designed and built a reporting module that uses Apache Spark SQL to fetch and generate reports.  • Creating and configuring virtual development environments with Chef and Virtual Box and Developed a fully automated continuous integration system using Git, Gerrit and custom tools developed in Python and Bash  • Created RDDs, performed analysis and ran queries in Python and Apache Spark based on retrospective and groups.  • Developed python code for different tasks, dependencies, SLA watcher and time sensor for each job for workflow management and automation using Airflow tool.  • Used AWS CloudWatch for performing Monitoring, customized metrics and file logging and sucessfully completed the task in using AWS Lambda to manage the servers and run the code in the AWS.  • Created a backend server with Python Flask that implemented routing for indexing & showing page and receiving the video & info data sent from the user.  • Installed, Configured, administered and monitored multi Data center Cassandra clusters and Involved in upgrading the present Oracle data model to Cassandra data model.  • Development of several Python APIs and harassers that works both in Linux and windows and maintaining them using the revision control SVN.  • Deployed the project into Heroku using GIT version control system and Worked in PostgreSQL database on simple queries and writing Stored Procedures for normalization and denormalization.  • Refactored messaging and storage implementation in loan originator service to use AWS SQS and S3.  • Developed the consumer-friendly front-end with an easy-to-use OpenCV UI and fast access MongoDB.  • Deployed Mircoservices, including provisioning AWS environments using Ansible Playbooks.  • Provisioned load balancer, auto-scaling group and launch configuration for Mircoservices using Ansible.  • Automated various infrastructure activities like Continuous Deployment, Application Server setup, Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins.  • Implemented RESTful Web-Services for sending and receiving the data between multiple systems.  • Performed data manipulation and storage for incoming test data using Beautiful Soup/Html parser, lxml /etree libraries.  • Used Test Driven Approach for developing the application and implemented the unit tests using Python Unit Test framework.  • Developed the presentation layer using HTML, CSS, JavaScript, JQuery and AJAX. Utilized Python libraries wxPython, numPY, Pandas, Twisted and mat PlotLib.  • Worked with Python libraries: requests, python-ldap, suds, pexpect, pip, subprocess.  • Developed frontend and backend modules using Python on Django including Tasty Pie Web Framework using Git.  • Implemented SQL Alchemy which is a python library for complete access over SQL.  • Developed views and templates with Python and Django's view controller and templating language to created user-friendly website interface.  • Used Pandas library for statistical Analysis. Panda's library was used for flexible reshaping and pivoting of data sets.  • Developed cross-browser/platform with ReactJs, nodeJs, JQuery, AJAX and HTML5/CSS3 to desired design specs for single page layout using code standards. Created UI from scratch using ReactJs.  • Used Pandas, NumPy, seaborn, SciPy, Matplotlib, Scikit-learn, NLTK in Python for developing various machine learning algorithms and utilized machine learning algorithms such as linear regression.  • Used Django configuration to manage URLs and application parameters.  • Accessed database objects using Django Database APIs. Worked on python-based test frameworks and test-driven development with automation tools. Worked with real time streaming application and batch style large scale distributed computing applications using tools like Spark Streaming.  • Implemented advanced procedures like text analytics and processing using the in-memory computing capabilities like Apache Spark written in Scala.  • Responsible for debugging and troubleshooting the web application. Manage the configurations of multiple servers using Ansible.  • Provisioned load balancer, auto-scaling group and launch configuration for mirco service using Ansible.  • Used Ansible playbooks to setup Continuous Delivery pipeline. This primarily consists of a Jenkins and Sonar server, the infrastructure to run these packages and various supporting software components such as Maven, etc.  • Deployed mircoservices2, including provisioning AWS environments using Ansible Playbooks.  • Created cloud service using AWS, managed Virtual machines and websites using AWS-EC2, ELB, Autoscaling, Lambda.  • Installed, configured, and managed the AWS server. AWS data pipeline for Data Extraction, Transformation and Loading from the homogeneous or heterogeneous data sources.  • Developed installer scripts using Python(boto3) for various products to be hosted on Application Servers. Written Python utilities and scripts to automate tasks in AWS using boto3 and AWS SDK. Automated backups using AWS SDK (boto3) to transfer data into S3 buckets.  • Writing playbooks for Ansible and deploying applications using Ansible. Automated various infrastructure activities like Continuous.  • Deployment, Application Server setup, Stack Monitoring using Ansible playbooks and has integrated Ansible with Run deck and Jenkins.  • Provisioned and patched servers regularly using Ansible. Implemented Ansible to manage all existing servers and automate the build/configuration of new servers.  • Developed an Ansible role for Zabbix-agent which will be integrated into the to the CICD pipeline.  • Used Ansible to document all infrastructures into version control. Used Ansible to document application dependencies into version control.  • Develop python code to automate the ingestion of common formats such as JSON, CSV by using Logstash from elastic search to Kibana dashboard to be viewed by clients.  • Responsible for designing and deploying new ELK clusters (Elasticsearch, Logstash, Graphite Kibana, beats, Kafka, zookeeper etc.  • Design, build and manage the ELK (Elasticsearch, Logstash, graphite, Kibana) cluster for centralized logging and search functionalities for the App.  • Designed, Automated the process of installation and configuration of secure DataStax Enterprise Cassandra cluster using puppet.  • Configured internode communication between Cassandra nodes and client using SSL encryption.  • Docker container deploying microservices, and scaling the deployment using Kubernetes.  • Developed Chat Ops interfaces with slack and Kubernetes on GKE.  • Working on Spinnaker platform for Multi-Cloud Continuous Delivery (Bake, Test, & Deploy/Container Pipelines) using Packer, Terraform, Kubernetes, AWS, GCP.  • Responsible for on boarding Application teams to build and deploy there code using Git Hub Jenkins, Nexus and Ansible.  • Migrated out core repository from SUBVERSION to GIT. Managed GitHub Projects and migrated from SVN to GitHub with history.  • Used Cloud Trail, TESSA, Cloud Passage, Check Marx, Qualys Scan tools for AWS security and scanning.  • Created monitors, alarms and notifications for EC2 hosts using Cloud Watch. Performed web testing automation using selenium API.  • Worked on Redux making to do list reduces, reducers functions and implementing store method PI Services, JavaScript, Bootstrap, GIT, and JSON.  • Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring. Written and Maintained Automated Salt scripts for Elasticsearch, Logstash, Kibana, and Beats.  • Performed parameterization of the automated test scripts in Selenium to check how the application performs against multiple sets of data Contributed in developing.  • Automation Framework that uses Java, Selenium Web Driver and Testing. Wrote automation test cases and fixing automation script bugs. Worked with migration to Amazon web Services AWS. Python Developer Juniper Networks Inc November 2015 to March 2016 • Performed data cleaning, analysis/munging and visualization of large dataset like stocks data using numpy, pandas, and Matplotlib and iPython Jupyter notebook.  • Implemented Django models to build all database mapping classes and used Python scripts to update content in the database and manipulate files.  • Used Apache Kafka for real-time streaming of data pipelines to get the data reliably from applications.  • Development of Python APIs to dump the array structures in the Processor at the failure point for debugging.  • Used standard Python modules like csv, robotparser, itertools, pickleto ensure privacy of sensitive data.  • Implemented Garbage collection with CPython to enhance the performance, by garbage collecting the older generated objects.  • Involved in development of Web Services using SOAP for sending and getting data from the external interface in the XML format.  • Used Python library BeautifulSoup for web scraping to extract data for building graphs.  • Used ReactJS in components like JSX, creating React components, Virtual DOM, React Props, Lifecycle methods, working with the React States and Events.  • Implemented reading functionality to consume Django API server for the list of customers using Django-rest-framework.  • Developed reusable components using ReactJS and redux for maintaining the state and actions of the functions.  • Used ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA).  • Developed GUI using webapp2 for dynamically displaying the test block documentation and other features of python code using a web browser.  • Performed client-side validations using JavaScript and server-side validations using various other frameworks.  • Identified several hidden bugs caused by complicated multithreading issues such as race conditions caused by asynchronous events and resolved them.  • Developed the front-end featuring rich web interface using HTML5, CSS3, JavaScript and used jQuery framework for UI centric AJAX behavior.  • Created Python script to monitor server load performance in production environment and horizontally scale the servers by deploying new instances.  • Designed, developed and retrieved the data from the database tables using Django models and Django ORM queries in MySQL.  • Used SQL stored procedures and UNIX Shell Scripts for importing/exporting Data and Conversions.  • Worked on developing Web Services using - SOAP, WSDL and developing DTDs, XSD schemas for XML (parsing, processing, and design).  • Implemented logging mechanism to capture exceptions and errors using Log4j tool. Used Tortoise SVN as a version-control client for Subversion  • Responsible for entire data migration from Sybase ASE server to Oracle. Migration of API code written for Sybase to Oracle.  • Debug the application using Firebug to traverse the documents and manipulated the Nodes using DOM and DOM Functions using Firefox and IE Developer Tool bar for IE.  • Developed web applications in Django Framework's model view control (MVC) architecture.  • Creation of REST Webservices for the management of data using Apache CXF.  • Worked on Python to place data into JSON files for testing Django Websites. Created scripts for data modeling and data import and export.  • Worked on ReactJS for its code reusability and integrated Bootstrap. Used Redux architecture in the whole process to connect Actions.  • Designed and Developed the input/output data formats in XSD for the WSDL files and accordingly implementing services using Apache AXIS2 & Used NetBeans IDE to develop the application.  • Implemented Docker containers to create images of the applications and dynamically provision slaves to Jenkins CI/CD pipelines.  • Developed Hadoop integrations for data ingestion, data mapping and data processing. Used XML for dynamic display of options in select box and description on web page.  • Implemented the MVC architecture using Apache Struts Framework & Experience in Python open stack API's. Worked with Rational ClearCase to provide sophisticated version control, workspace management and parallel development support. Build and maintained a Selenium Regression test suite.  • Involved in building database Model, APIs and Views utilizing Python, to build an interactive web-based solution.  • Wrote Python code using Ansible Python API to automate cloud deployment process. Managed Web applications, configuration files, users, file systems and packages using Ansible.  • Built various graphs using Matplotlib package which helped in taking business decisions.  • Created Restful API's to integrate and enhance functionalities of the application. Also Utilized Restful API in communicating with third parties.  • Worked on automation using the Python scripting language, Git on Cygwin32 and XML.  • Worked on monitoring tools like Nagios, Zabbix, AWS Cloud Watch to health check the various deployed resources and services.  • Involved and played a leading role in database migration projects from Oracle to MongoDB.  • Designed and managed API system deployment using fast http server and Amazon AWS architecture.  • Designed and developed Use-Case, Class and Object Diagrams using UML Rational Rose for Object Oriented Analysis/Object Oriented Design techniques.  • Excellent understanding and knowledge of Hadoop Distributed file system data modelling, architecture and design principles and Developed Python Mapper and Reducer scripts and implemented them using Hadoop streaming.  • Involved in writing application level code to interact with APIs, Web Services using JSON and involved in AJAX driven application by invoking web services/API and parsing the JSON response.  • Developed views and templates with Python and Django view controller and templating language to create a user-friendly interface using MVC architecture. Worked on resulting reports of the application and Tableau reports and involved in modifying data using SAS/BASE, SAS/ MACROS.  • Involved in installing software using pip command for python libraries like Beautiful Soup, NumPy, SciPy, python-twitter, RabbitMQ, Celery, matplotlib, Pandas data-frame and used the PEP8 coding convention.  • Migration of API code written for Sybase to Oracle and was involved in Overlook the migration activity of PL/SQL programs.  • Build back-end application with Python / Django, Worked on Dockers, RabbitMQ, Celery, and Jenkins. Involved in migrating the Libraries written using Sybase API's to Oracle OCCI API.  • Used Python Libraries Pandas and NumPy, SQL and Tableau to procure, clean and aggregate data from Relational database to generate status reports and dashboards. Python Developer CGI Group Inc August 2013 to September 2015 • Used Object-Oriented design and coding, various Design Patterns and UML and Wrote Python OO Design code for manufacturing quality, monitoring, logging, and debugging code optimization.  • Imported SSL certs from other hosts to new host and properly configured Apache to use certs.  • Using Django evolution and manual SQL modifications was able to modify Django models while retaining all data, while site was in production mode.  • Worked with JSON based REST Web services and Created a Git repository and added the project to GitHub.  • Implemented jQuery to improve the overall usability of the website interface and AJAX functionality to speed up web application.  • Helped create interactive prototypes and UI specifications, including screen layouts, color palettes, typography, and user-interface elements.  • Wrote and executed various SQL queries from python using Python-MYSQL connector and MYSQL DB package.  • Performed front-end development for web initiatives to ensure usability, using HTML, CSS, Bootstrap, and JavaScript.  • Developed the required XML Schema documents and implemented the framework for parsing XML documents.  • Queried MySQL database queries from Python using-MySQL connector and MySQL DB package to retrieve information.  • Setup automated cron jobs to upload data into database, generate graphs, bar charts and backup the database.  • Designed and developed a system for data management using MySQL and queries were optimized to improve the performance.  • Developed front-end using HTML, CSS, JavaScript and jQuery.  • Responsible for understanding the functional requirements, writing the technical design and developing the requirements  • Application server upgrade testing support.  • Client engagement developer and implementation engineer for code install to production.  • Designing mobile search application system requirements and coded back-end and front-end in Django/ Python. Authored encryption scripts.  • Collaborated with cross-functional teams to scope project requirements, author documents, etc.  • Interactive in providing change requests, trouble reports and requirements collection with the client.  • Maintained the client-server environment and implemented the updates successfully.  • Created and modified required views/tables/triggers using SQL and worked on database bug fixes.  • Involved in Developing a Restful service using Python Flask framework.  • Involved in the Design, development, test, deploy and maintenance of the website.  • Wrote validation scripts in SQL to validate data loading.  • Worked in Agile (Scrum) Methodology that includes daily scrum meetings with team. Skills Amazon web services, Design patterns, Django, Docker, Git, Hadoop, Html, Javascript, Bootstrap, Reactjs, Jenkins, Json, Oauth, Python, Flask, Matplotlib, Numpy, Opencv, Tensorflow, Tkinter Additional Information Technical Skills    Python 2.x/3.x, Go lang, Scala, SQL, PL/SQL, SAS, PEP8, PIP, Spark, Requests, Scrapy, SQLAlchemy, BeautifulSoup, NumPy, SciPy, matplotlib, PyGame, Pyglet, PyQT, PyGtk, pywin32, ntlk, nose, OpenCV, SymPy, Ipython, Caffe, Torch, TensorFlow, Django, Flask, Pyramid, Twisted, Muffin, CherryPy, TastyPie, Pyjamas, gui2py, PySide, TkInter, PyForms, CVS, Git, Mercurial, SVN, GitHub, Jenkins, Chef, Puppet, Ansible, Docker, Kubernetes, PyUnit, PyTest, PyMock, Mocker, Antiparser, webunit, webtest, Selenium, Splinter, PyChecker, Komodo, PyCharm, PyDev, PyScripter, PyShield, Spyder, Jupyter, MySQL, Teradata, SQL Server, InfluxDB, MongoDB, IntelliJ, Cassandra, PostgreSQL, Splunk, Bugzilla, Jira, HP ALM, HP Quality Center, Software Development Life Cycle (SDLC), Agile, Waterfall, Hybrid, TDD, XP, BDD, EDD, Pair Programming, Scrum, ELK (Elasticsearch, Logstash, Kibana), Solr, Kanban, Kafka, Swagger, OpenStack, Amazon Web Services (AWS), Microsoft Azure, Boto3, Jinja, Mako, AMQP, Celery, Apache Tomcat, RabbitMQ, Celery, Heroku, Samba, Confluence, Bamboo, AJAX, jQuery, JSON, XML, XSLT, LDAP, OAuth, SOAP, REST, Microservices, Active Directory, design patterns, HTML/HTML5, CSS/CSS3, JavaScript, PhosphorJS, AngularJS, NodeJS, EmberJS, ReactJS, Bootstrap, Big Data and Hadoop technologies, Linux, Unix.