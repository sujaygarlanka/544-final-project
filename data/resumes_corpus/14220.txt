Java Developer <span class="hl">Java</span> <span class="hl">Developer</span> Java Developer - CapitalOne • Working as a Java Consultant, with over 7 years of experience in capturing Business Process Requirements, Design, Development, Testing and Implementation for various client server based applications using Java and J2EE technologies.  • Expertise in UI Design and Development using HTML5, CSS3 (SASS, LESS), Bootstrap and AJAX that follows W3C Web standards and successfully managing all facts of application development.  • Extensively used JavaScript/Typescript, Ajax, and JSON to build highly interactive web pages.  • Experience in frameworks like Spring MVC and Struts (MVC architecture, interceptors, action mappings and resource builders).  • Worked with various frameworks in spring such as Spring IOC, AOP, Spring transaction Management, Spring Data, Spring JDBC, Spring Batch, Spring Boot, Spring REST, Spring JTA, Spring IO Spring Cloud and Spring Security (Spring security, Site Minder).  • Strong experience in developing Single Page Application (SPA) using MEAN (Mongo, Express, Angular and Node) stack.  • Expertise in building strong websites confirming standards using Dojo, JQueryto develop valid code and table-free sites.  • Developed numbers of Typescripts(ES6) objects including Components, ng Modules, Providers, Services, Interfaces and classes utilizing arrow function and optional types  • Experienced inVarious Angular4/6, Backbone JS, Knockout JS, and Ext JS for rapid front-end app development and to achieve MVVM/MVC design flow.  • Proficient in creating custom pipes in multiple components to modify interpolated values in templates in developing Angular4 application along with declarative templates, dependency injection, observables and end to end testing.  • Included validation in template driven forms in developing dynamic web application using Angular 4 with directives to match attributes with validator functions using HTML validation.  • Proficient in usingHapi JS that enabled to focus on writing reusable application logic with built-in support for input validation, caching, authentication, and other essential facilities for building web and services applications.  • Developed various Single Page Applications(SPA) using REACT JS.  • Involved in responsive design and developed a single ISOMORPHIC responsive website that could be served to desktop, Tablets and mobile users using React.js.  • Closely worked with Application using React.JS and Node.js libraries NPM, gulp directories to generate desired view and redux to root the URL's properly.  • Worked with Express.js for development of RESTful web services and middleware configurations.  • Developed server-side application using Node.js using Express.js as a framework.  • Used hapi.js for building REST API' s for routing, caching and input and output validations and served to build single page application.    • Involved in developing a full-fledged REST API server with an open source NoSQL database that uses a document-oriented data model MongoDB and Mongoose connector.  • Proficient in using RDBMS concepts and worked with Oracle 8i/9i/10g/11i, SQL server, and good experience in writing stored procedures, functions and triggers using PL/SQL JDBC, ODBC and JNDI in WebLogic server.  • Excellent experience withRelational databases like MySQL, Oracle, SQL Server, DB2 and No SQL Databases like Couch DB and Cassandra.  • Solid experience with various web MVC monolithic frameworks such as JSF, Spring MVC and Struts.  • Developed a micro service using Spring Boot which included Aspect Oriented Programming and deployed the application in distributed systems using Spring Cloud.  • Implemented Spring Boot to create a CRUD operations backend for our Angular-fronted application.  • Built a Spring Boot architectureon Spring Cloud by creating Configuration service using twelve factor app methodology to handle the configurations for all the services through a simple point call.  • Used Spring Boot for developing stand-alone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server, added a RESTful Spring MVC Controller that responds to a request using post, used Swagger for describing and documenting the RESTful API's.  • Designed and developed RESTFUL Web Services using Spring Boot and Jersey framework.  • Used Spring Boot which is radically faster in building cloud Micro Services and develop Spring based application with very less configuration.  • Developed projects with RESTful services (JAX-RS, Spring Boot), SOAP (JAX-WS, Apache CXF, WSDL, Apache Axis2) and automated the documentation using Swagger and WADL.  • Used Gradle as a build tool for Spring Boot used for better dependency management and testing the application until deployment.  • Included Apache Kafka in Spring Boot application for integration and Data Processing Pipeline for persistent messaging, worked with Apache Kafka with Spring Integration which provides inbound adapters for working with low level and high-level Apache Kafka API.  • Used JMS messaging using Apache ActiveMQ as Spring Boot application starters which is used for running the consistently and quickly.  • Good understanding of React JS and working with Redux / Flux architecture.  • Implemented security functionality for various projects using spring security and Site minder (SSO).  • Professional experience in Log4J for extensible logging, debugging and error tracing.  • Developed projects on SOA (Service Oriented Architecture) and Microservices Architecture with RESTful services (JAX-RS with Spring Boot, Spring MVC) and implemented SOAP (JAX-WS, Apache CXF, WADL, WSDL, Apache Axis2)  • Solid Experience with Java based ORM frameworks such as Hibernate, Spring Data and Ibatis.  • Proficient in using Spring Data JPA that helped in creating automatic Data Access Objects (DAOs) at the compile time.  • Worked with NoSQL based ORM frameworks like Mongoose Connector and Cassandra Node Driver.  • Experience with build tools like Ant, Maven, and Gradle for building applications to different environments.  • Extensive hands on experience in setting up CD/CI pipelines using Jenkins, Bamboo and GoCD.  • Implemented DevOps practice in Spring boot microservice based platform.  • Have very good understanding and hands-on working CI/CD pipelines.  • Intermediate expertise in public cloud platform - Amazon web services.  • Comfortable creating scripts for infrastructure automation using cloud native tools.  • Experience in using DevOps tools like Puppet, Chef and Docker.  • Good Knowledge in documentation of REST API's using Swagger 2 and WADL.  • Proficient in using client side JavaScript build runners namely Bower, Grunt, Gulp and Web pack.  • Expertise in integration testing automation framework like Seleniumautomation using Selenium WebDriver, Selenium Grid.  • Proficient in writing unit tests for JavaScript based Applications using Karma, Jasmine, Mocha and Chai testing frameworks.  • Wrote comprehensive test cases and test plans using JUnit, TestNG, Spock and Mockito for Java based backend applications.  • Designed and created highly scalable, highly available, fault tolerant, highly secured, distributed infrastructure (IAAS) using AWS EC2 instances, S3, SQS, EBS, ELB, API Gateway, Route 53, CloudFront, Auto Scaling, Elastic Bean Stalk, IAM, ECS, VPC, Cloud Watch, CloudTrial, RDS, SNS, SQS.  • Worked with spring cloud config, Ribbon, Hystrix and Zul API-Gateway in the spring cloud and Netflix Eureka service to provide weighted load balancing based on several factors like traffic, resource usage, authentication, monitoring services and routing.  • Hands on experience in implementation of Pivotal Cloud Foundry (PCF) services such as Pivotal Application Service, Pivotal Container Service and Pivotal Functional Service.  • Authenticated Users accessing RESTful services using Oauth 2.0, OIDC and JWT(Jason Web token)  • Experience in messaging queue services like JMS, IBM MQ. Rabbit MQ, Active MQ and Apache Kafka.  • Extensive experience in Deploying and Configuring Application & Web Servers such as Oracle WebLogic, IBM WebSphere, JBoss, Glassfish and Apache Tomcat.  • Worked with Log Monitoring tools like Splunk and ELK (Elastic Search,LogData and Kibana).  • Worked with Drools to provide Business Rules Management System (BRMS) solution that provides a core Business Rules Engine.  • Proficient in applying design patterns like MVC, Object Orient Design, Singleton, Factory, Session Facade, Service Locator, Visitor, Observer, Decorator, Front Controller, Data Access Object.  • Experience in Java Thread Dump Analysis and familiar with thread dump techniques.  • Have knowledge on Application monitoring tools like New Relic and Dyna Trace.  • Strong Knowledge on automated java based integration testing and behavioral testing of the applications using Selenium and Cucumber respectively. Work Experience Java Developer CapitalOne - Richmond, VA August 2018 to Present Description:  Capital One Financial Corporation is a bank holding company specializing in credit cards, auto loans,banking and savings accounts. I worked withAuthorization team supporting technical initiatives for card users such as virtual credit card numbers, backend development for customer preferences, platform resiliency and data modeling.    Responsibilities:  • Involved in the complete Software Development Life Cycle using Agile methodology including design, development, implementation, verification and validation.  • Involved in agile scrum methodology with sprint cycle for every 2 weeks.  • Designed and Implemented SPA (single page application) using Angular 6 Module, Component, Template, Metadata, Data Binding, Directives and Dependency Injection.  • Created Typescript reusable components and services to consume REST API's using component-based architecture provided by Angular 6. Creating generic service which have async capability and detailed description about observables.  • Optimized the performance of application using Angular 6 Lazy Loading and ahead of time compilation.  • To allow fully encapsulate custom elements, created custom elements, HTML imports and Shadow Dom using Angular 6 and implemented Angular Router to enable navigation from one view to the next as user performs application task.  • Implemented the security APIs with access token along with Api key for external consumers.  • Architected and implemented the application modules using Spring boot, Spring framework and integrated the application using Microservices architecture.  • Provided authentication and authorization by using Spring Security and OAuth.  • Used Spring AOP terminologies to handle transaction management and address the problem of cross-cutting concerns.  • Involved in producing and consuming the RESTful Web Services using Spring. Produced SOAP Web Services for communicating with external components.  • Created Hibernate configuration, mapping files and defined persistence classes to persist the data into Oracle Database and used Hibernate Query Language (HQL) toquery the database.  • Used MongoDB to retrieve most recent transactions of the users.  • Deployed the application as a microservice into Docker container and made easily accessible at runtime using AWS services like EC2.  • Used AWSS3 buckets for online backup and archiving of the data.  • Implemented Java Message Service (JMS) to exchange information over reliable channel in an asynchronous way by using Kafka as a message queue.  • Followed Test Driven Development (TDD) methodology for developing test cases using Junit and Mockito.  • Implemented complete Mavenbuild life cycle to achieve organized application structure and conflict free dependencies in pom.xml file and deploy on Tomcat Server.  • Generated reports using JasperReports and interactive visualization using tools such as D3.js.  • Implemented Continuous Integration and ContinuousDeployment (CI/CD) using Jenkins.  • Set up Jenkins server and build jobs to provide continuous automated builds based on polling the Git source control system during the day and periodic scheduled builds overnight to support development needs.  • Hands on with Drools, written business rules for credit authorizations.  • Used Splunk, DataDog for alert monitoring and querying.  • Intermediate expertise in public cloud platform - Amazon web services.  • Comfortable creating scripts for infrastructure automation using cloud native tools.  • Utilized Log4j to debug and record the logs in application.  • Used JIRA tool for Issue/bug tracking, monitoring of work assignment in the system.  • Developed GIT to track and maintain the different version of the project.    Environment:  Java 8, Spring IOC, Spring Boot, Spring Security, Spring AOP, Spring Batch, Hibernate 4,HTML5, CSS3, Ajax, Bootstrap 3.0, Angular 6.0, JSON, OAuth 2.0, JUnit, Mockito, Maven, Tomcat, Kafka, JAX-RS, RESTful, SOAP, JIRA, Micro Services, Log4j, Mongo DB 3.5,EC2,S3,IAM,Docker, Git, Jenkins, D3.js and Spring Tool Suite. Java Full Stack Developer Express Scripts - Franklin Lakes, NJ December 2016 to August 2018 Description:  The express script a Medicare based company which is setting up the benefits to the individuals depending up on their claims benefits setups, there is a client website application used by the accounts team to document client requirements used to install and change the benefits over 60 functional areas, Manage status of each client requirement from initial entry point through functional area review and client approval process.    Responsibilities  • Developed a Micro Service Oriented applicationwith React JS in the front end and Spring Boot services.  • Involved in development, design and implementation front end part of the widget based application using HTML5, CSS3-LESS, AJAX, Bootstrap 4.0.  • For client-side view rendering services,used React JS typically used various predefined Redux libraries.  • Configured React-Redux for state management and React-Router for programmatic navigation.  • Implemented Store-Redux for holding the whole state tree of application and Reducer-Redux for describing actions.  • Used AJAX request to data from back-end based on user interface input and post updated data back to backend.  • Mocha test runner and Chai test framework are used to test React JS components.  • Web pack module bundler and Babel java script compiler are used accompanying React JS.  • Implemented Spring Boot to create a CRUDoperations backend for our React-fronted application.  • Bottle micro-framework implemented with RESTful service and used WADL (Web Application Description Language) for modelling the resources provided by the services and relationships between them.  • Developed dashboard based on Ajax calls with Business Customers Count, Flags, Real-time graphs for Analytical Reporting using Node JS.  • Implemented modules into Node JS to coordinate with plans and necessities.  • Implemented JSON web tokens for authentication and authorization security configurations using Node.js  • Used Node.js for deploying POC and used for Bower and other development automation tasks.  • Used Express JS which is fast, assertive, essential and moderate web framework of Node.js that helps manage a sever and routes.  • Integrated Node.js with Express.js and communicated with databasefor CRUD operations on the data repository.  • Developed the web application based on the Node.JS micro services architecture using Express and MongoDB.  • Extensive experience in designing MongoDB multi-shared cluster and monitoring with MMS.  • Junit is implemented along withMokitoto perform unit testing on our RESTful web application.  • Implemented JWT (JSON Web Tokens) for creating tokens to assert claims in the application and thus providing authentication of RESTful services.  • Published message services using Spring AMQP's Rabbit Template and subscribes to the messages on a POJO using Message Listener Adapter.  • Created dynamic schema design through NOSQLMongo DB by writing rich queriesand achieved data in a collection to be distributed across multiple systems for horizontal scalability as data volumes increase through Automatic Sharding.  • Developing internal Web Application in Groovy/Grails with Mongo DB as a data store. Using the IntelliJ Idea 15.0.4 IDE with the latest Grails 3.1.1 SDK, Java 8.  • Splunk is implemented in the application for log errors, exceptions, business logic and log analytics.  • Engineered Splunk to build, configure and maintain heterogeneous environments and in-depth knowledge of log analysis generated by various systems including security products and worked on setup of various dashboards, reports and alerts in Splunk.  • Gradle build tool is used to deploy the application on the web servers i.e. JBoss.  • Integration of automation batch run job with Jenkins. Worked with Jenkins Continuous Integration and Continuous Deployment(CI/CD).  • Used Apache Kafka (Message Queues) for reliable and asynchronous exchange of vital information between multiple business applications.  • Developed Kafka consumers to consume data from Kafka topics and integrated Kafka source to read the payment confirmation messages.  • Responsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring.  • Implemented Spring Cloud-NetflixOSSStack along with using Ribbon for client-side load balancing, NetflixZuulApi Gateway with Eureka service registry for reverse proxy infrastructure and Hystrix Circuit Breaker for fault tolerance.  • Deployed the Dockerized Spring Boot application that is intended to be run on dev local machine using PCF (Pivotal Cloud Foundry).  • Behavioral and Integration testing is done using Cucumber and Selenium respectively.    Environment:JavaScript, React JS-Redux, HTML5, CSS3-LESS, AJAX, Bootstrap, jquery, Spring Security, Rabbit MQ, Spring Data, Spring Batch, Quartz Scheduler, Hibernate, Spring Boot, Microservices, Restful services, Netflix OSS, Eclipse Java EE IDE, Jenkins, Spring Cloud-Netflix, Splunk, Mongo DB, MySQL, Docker, Apache tomcat, Jenkins, Netflix ZuulApi, Ribbon, Eureka, Hystrix, JUnit, Mokito, Mocha, Chai, Selenium, Cucumber, Cassandra DB, Cassandra Node Connector, Gradle, JBoss, JIRA, JWT, WADL, Web pack, Babel. Java Full Stack Developer C2N IT Services 2016 to December 2016 Description:  C2N offers a range of IT services including infrastructure support, software development, integration & support, web development & web hosting, quality assurance & testing, cyber security, certification & accreditation (C&A) services, as well as program & project management services.  Built a Java application for a recruitment startup. This application was be used by workers and hiring companies. As part of the marketing strategy we used referral codes to reward our customers for referring.    Responsibilities:  • Worked with all phases of SDLC as a scrum member following agile methodology and Test Driven Development (TDD).  • Created the front-end web pages using HTML5, CSS 3(using SASS), Twitter Bootstrap CSS framework, media queries and JavaScript to develop the UI for our login and customer enrolment portals.  • Created Dynamic &Responsive Designs using HTML5&CSS3 (using SASS), Bootstrap.  • Followed the strict patterns of implementing model-view-controller (MVC) architecture using Angular 2 Framework. Design and implementation of accessibility features and collaborating with customer up to date.  • Experience with the features of Angular 2 such as directives, modules and routing.  • Used Angular 2 as framework to create a Single Page Application (SPA), which can bind data to specific views and synchronize data with server.  • Developed the server side application on Angular 2 platform using JavaScript programming.  • Developed custom Directives in Angular 2 to make reusable components, custom views using Bootstrap components and involved in configuring routing for various modules in the application.  • Configured Hapi JS node http framework to set up middle-wares to respond to HTTP requests and used its front-end tooling like web packs, starter packs, boiler plates efficiently.  • Used Hapi JS which is configured on top of Node JS to attain better performance, to use built in authentication and authorization techniques.  • Implemented a robust RESTful (Apache CXF) web service and automated documentation to the web services in the application is provided by Swagger by configuring hapi-swaggered and hapi-swaggered-ui.  • Worked with Drools to provide Business Rules Management System (BRMS) solution that provides a core Business Rules Engine.  • Developed data tables using AG-Gridand implemented Sorting, Filtering and Pagination functionalities.  • Tested the front-end application using Jasmine and Karma testing frameworks.  • Implemented microservices based architecture using Spring Boot interacting through REST API.  • Worked with ORM frameworks such as Spring Data.  • Worked on various features in ECMAScript 6 (ES6) such as Arrow functions, Classes and enhanced object literals.  • Used React Router to create a Single Page Application (SPA), which can bind data to specific views and synchronize data with server.  • Implemented modules into Node JS to coordinate with plans and necessities.  • Authenticated Users accessing RESTful services using Oauth 2.0 and OIDC.  • Worked with Web pack build tool and automated the process of building using Jenkins for React based front-end application.  • Worked with Spring Cloud and Netflix OSS-Eureka for service registration and discovery.  • Used spring boot Actuator to externalize application's configuration properties for different environments.  • Proficient in deploying and configuring Elastic search, Log Stash, Kibana(ELK) and AWS Kinesis for log analytics  • Worked with AWS IAM service to create various groups and attached appropriate policy documents to the users within that group.  • Designed, built, and deployed a multitude application utilizing almost all the AWS stack (Including EC2, Docker) focusing on high-availability, fault tolerance, and auto-scaling).  • Implemented Spring Boot to createCRUDoperations backend for our fronted application.  • Used Spring Boot for developing stand-alone applications using Spring Tool Suite and generated Maven project using Jetty as embedded server, added a RESTful Spring MVC Controller that responds to a request using post, used Swagger for describing and documenting the RESTful API's.  • Developed the application as a Spring Boot App to get range of non-functional features.  • Deployed Spring Boot based micro services on Dockercontainers using Amazon ECS and used Docker Hub for registering the Docker images.  • Good Knowledge in documentation of REST API's using Swagger and WADL.  • Used the fundamentals of Java 8 like parallel streams and filters through lambda expressions to handle the searching.  • Developed the application using industry standard design patterns like Singleton, Business Delegate, MVC, and Factory Pattern etc. for re-usability.  • Worked with Cassandra Node Connector for database persistence to interact with Cassandra NOSQL DB with Spring Data to unify and ease the access to Cassandra persistence stores.  • Maintained, structured, and surveyed documents within the Cassandra database ensuring data integrity, correcting anomalies, and increasing the overall maintainability of the database.  • Wrote comprehensive test cases and test plans using JUnit, Spock and Mockito for backend.  • Wrote complex SQL queries using joins, Stored Procedures, Functions, Triggers, cursors, and indexes in MySQL database.  • Installed Kafka manager for consumer lags and for monitoring Kafka metrics also this has been used for adding topics, partitions.  • Very Proficient Knowledge of JIRA to track issues and communicate with other teams at various environments.  • Used GIT for source code management and worked with Visual Studioand Spring Tool Suite IDE's.  • Professional experience in Log4J for extensible logging, debugging and error tracing.    Environment:HTML5, CSS3, SASS 3.5,JQuery 3.0, ECMAScript 6(ES6), Typescript, AJAX 4.1, JSON 3, Bootstrap, DOM, React v15, Redux, NPM 5.5, Java8, OOPS, Lambda expressions, Angular 4 , Spring MVC , Spring Boot v1.2, Micro Services, Apache Kafka v0.10, Spring Batch v3.0, Netflix OSS-Eureka v1.5, Spring cloud, Jenkins v2.0, PL/SQL, MySQL, DB2, MongoDB v3.2, Cassandra 3.0, AWS, S3, EC2, ECS, ECR, IAM, EBS, JUnit, Selenium, SLF4J, Visual Studio, STS, Jasmine, JIRA, GIT, POSTMAN/REST Client, Jenkins, Windows, Agile, Scrum. Java Full Stack Developer MTW Labs - Hyderabad, Telangana December 2013 to November 2014 Description:  The project deals with development of a website to enable the people to select the medicines and place order from different pharmacies. The agent or the customer chooses any product from the website after registering. The admin of the company will see the order accept or deny it. When all terms and conditions are satisfied, the customer/agent will be given the delivery date on which he will be paying the required amount and receiving the product.    Responsibilities:  • Developed the SOA (Service Oriented Architecture) application using Spring REST and Jersey to build rest-based Web services  • Developed the web interface for end users using AngularJS along with jQuery and included two-way binding and DOM manipulation  • Built Web pages those are more user-interactive using jQuery plugins for Drag and Drop, Validator AutoComplete, AJAX, JSON, Angular JS.  • Extensively used the JavaScript and jQuery plug-in to fetch and display the data on web pages and create interactive features in the application. Worked with jQuery concepts like selectors, and filters  • Developed RESTful services that are reusable based on SpringRESTful Services using Jerseyframework.  • Used Spring MVC to develop REST webservices within the application. Developed RESTful Web services to create new subscription/account and updating them for mobile value chain in JSON format and consumed RestWeb services from the browser using AngularJS.  • Performed testing for SOAP/REST Web services using SoapUI and Postman Rest client.  • Developed POJO objects and used Hibernate as the Object-Relational Mapping (ORM) tool to access the persistent data from SQL Server.  • Configured multiple data source using HibernateSessionManager functionality to provide independent database connectivity.  • Implemented Hibernate EH Cache technique for the critical objects in the application.  • Used Hibernate ORM framework used to interact with database through Hibernate query language(HQL).  • Used Hibernate for connecting the database and mapping the entities by using hibernateannotations.  • Developed components using core Java concepts like Collections, Serialization and Java Threads  • Used Spring MVC Interceptors, Spring core modules and native Spring AOP facets of Logging and transactional management.  • Implemented Pivotal Cloud Foundry(PCF) as a platform as a service for RESTfulservices.  • Provided installation, configuration & maintenance of pre-prod and production Cloud environments including servicessuch as Tomcat, Apache, Jetty, MySQL, and JIRA.  • Done load testing of SOAP Web Services using SOAP UI and Apache JMeter tools.  • Developed a GUI to help to read the logs generated by the scripts, which was created using D3.JS, jQuery table sorter.  • Used Spring Validation framework to implement the server-side validations and used jQuery calls to get the data from the server asynchronously by using JSON objects.  • Used JMS ( Java Mailing Service)API to setup mail notifications upon success or failure when the backend processes are completed and to send mail notifications regarding any system related problems.  • Develop Spring Batch processes for financial reporting applications and modules using Perl and Korn shell scripts on Oracle database, with partitions and sub-partitions.  • Modules for the Front-end are integrated to Back-end using Hibernate framework.  • Implemented Spring Batch for processing large volumes of records, including logging/tracing, transaction management, job processing statistics, job restart, skip, and resource management in the application using Quartzscheduler.  • Implemented validation rules using JBossBRMS (Business Rule Management System) version of Drools.  • Wrote Test classes using JUnit and EasyMock and test coverage using EMMA plug-in.  • Deployed the services using Dockercontainer to host in AWS and utilized AWS platform to upload data into S3 buckets, EC2 instances.  • Used Jenkins automation for building pipelines and GitHub repositories using web hooks plugin.  Environment: Java/J2EE, UNIX, JBoss 3.0, Spring core, JMeter, Cassandra, Hibernate, Jetty, Core java, Perl, Spring MVC, Hibernate, SOAP/RESTful Web services, FileNet, Ajax, XML, AWS, jQuery, Jersey, AngularJS 1.x, HTML, CSS, SaaS, Google Charts API, Git, Maven, Jenkins, Drools(BRE), AWS, Pivotal Cloud Foundry (PCF) Java Developer MicroSpark Software Solutions 2012 to December 2013 Description:  Micro-spark Software Solutions, Inc. provides systems integration and data management solutions to commercial and government clients. The company offers applications development services and solutions, such as systems engineering and technical assistance.    Responsibilities:  • Designed the user interface screen and its functionality as per user requirements and developed RESTful Web services on Service Oriented Architecture (SOA).  • Responsible for Agile Framework implementation and practices.  • Have good working background with J2EE Frameworks like Servlets, JSP  • Worked with BackboneJS as use interface which offers MVC framework and abstracts data into models and bind objects with custom events and also written dynamic logic in model.  • Created responsive UI modules using BackboneJS with hard coded dependency of Underscore JS  • The Backbone Router and Backbone sync components can help handle navigation throughout an application and syncing data back to a server  • Used BackboneJS Router for routing client applications and defining URL representation of the applications object.  • Used Jasmine behavior-driven development (BDD) testing framework and library Sinonfor testing of BackboneJS, which included specs representing single example of behavior.  • Developed Thread Safe blocks for multithread access and distributed transaction management.  • Created and injected Spring services, controllers and DAOs to achieve dependency injection.  • Heavily used Spring Inheritance, Auto-wiring, Core Container, Security, AOP, ORM modules as part of migration from EJB to spring, Spring Quartz for scheduling tasks to generate reports and emails to clients.  • Used SOAP UI, Postman, Rest Client, Spring Mock MVC for testing the Web Services.  • Upgraded Spring Rest Controllers and Services classes to support migration to Spring framework.  • Involved inHTML5, CSS code optimization DOMloading and cross browser compatibility.  • Used CSS features, such as creating borders and background and used LESS/SASS Preprocessor.  • Developed changes on Adobe-Flex front-end with changes in business logics on legacy application.  • Implemented REST based Web Services using JAX-RS annotations, Jersey provider and consumed using HTTP services.  • Used jQuery to create drop downs, progress,menu bar and other drag and drop components.  • Experience in Building Web Service Contracts in SOA Service Manager, Orchestration, performance tuning.  • Developed quality code adhering to Scala coding Standards and best practices. Implemented Authentication & Authorization with Spring security.  • Used Magento Connector - Connecting to Magento API with java using SOAP.  • Used PL/SQL stored procedures for applications needed to execute as part of scheduling mechanisms.  • Used Toad to interact with oracle data base, performance tuning db execution plans. Heavily used joins stored procedures, views, Unions in Oracle data base to fetch the data.  • Developed Applications using Rule Engines-Jboss Drools4.x,Work flows, Human tasks to implement Business rules validations and provided Drools Dashboard for Business users.  • Extensively used Hibernate Relational mappings(One-To-Many, Many-To-Many) worked on Hibernate Cache, Query, Criteria and Transactions.  • Worked with the Node package manager(NPM) along with Karma, Jasmine, Grunt and Bower fortest and build.  • Used Maven as build and dependency management tool for creating EAR, WAR and JAR file to be deployed in application servers and integrated with SVN, Jenkins, and Jenkins Jobs.  • Resolved bugs/defects in application by coordinated with team members of the project to assure a positive outcome using JIRA.  • Used GIT as version management, developed test cases and performed unit testing using JUnit.  Environment: Web Services, Spring Hibernate, HTML, JSP, JavaScript, jQuery, AJAX, CSS3, Angular JS, SOAP UI, XML, WSDL, Java J2EE, Scala, Kafka, Agile Methodology, JIRA processes, GIT, Design Patterns, PL/SQL, Junit, WebSphere MQ, Maven, Eclipse, CVS and Oracle 11g. Education Bachelor's in Computer Science and Engineering in SRIT JNTU - Hyderabad, Telangana Skills Eclipse, Ejb, J2ee, Java, Hibernate, Spring, Jax, Jaxb, Jaxp, Jax-ws, Jboss, Jms, jquery, Jsf, Jsp, Servlets, .net, Visual studio, C++, Docker Additional Information TECHNICAL SKILLS:    Programming Languages Java, C, C++, PL/SQL, .Net  Web Technologies  HTML5, CSS3, JavaScript, AJAX, JSON, Bootstrap, jquery, Angular2.0/4.0, React JS with Flux, Redux, Ember JS, Knockout JS, Back Bone JS, Handlebar JS, NodeJS, Express JS, Hapi JS    J2EE Technologies & frameworks  Servlets, EJB, JSP, JSF, JDBC, SOAP, WSDL, REST, XML, JAXP, JAXB, JPA, JMS, Spring3.x/4.x/5.x, Hibernate, Spring MVC, Spring Boot, Spring Data, Spring Batch, Spring cloud, Dump Analysis.    Databases Oracle 8i/9i/10g/11i, DB2, SQL Server 2000/2005/2008, MYSQL, MongoDB, Raven DB, Cassandra  Application/Web Servers Oracle Web logic, IBM Web Sphere, JBoss, Glassfish, Apache Tomcat  Messaging Services JMS, Active MQ, Rabbit MQ, IBM MQ, Apache kafka  Web service frameworks JAX-RS, JAX-WS, Apache CXF, Axis, Jersey  Software Methodologies Agile, Scrum, TDD, Waterfall  Build & Configuration Tools Ant, Maven, Gradle, Jenkins, Bamboo Gulp, Grunt, Webpack, NPM, Bower  Testing Tools Junit, TestNG, Mockito, Jasmine, Karma, Mocha, Chai, Spock, Protractor  Version Control Tools GIT, SVN, CVS, Bitbucket, TFS  Project Management Tools JIRA, Rally, Microsoft Project  Cloud Technologies & DevOps Tools AWS, PCF, EC2, EBS, S3, Docker, ECS, EBS, EKS, SQS, RDS, S3, Glacier, Lambda, Kubernetes  Operating System Windows, Linux, Unix, MAC, MS-DOS  IDE's Eclipse, Visual Studio, Intellij, Spring Tool Suite, Sublime Text, WinSCP, Putty