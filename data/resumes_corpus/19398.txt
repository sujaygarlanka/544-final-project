Systems Analyst Systems Analyst Systems Analyst - BNY Mellon (Consulting) Sunnyside, NY Work Experience Systems Analyst BNY Mellon (Consulting) October 2018 to Present IT professional with over a decade of solid experience. Proven track record in acquiring expertise in different languages and frameworks. Solid understanding of system, web and web service development. Looking for a workplace that will make use of my vast coding expertise while letting me put my AWS knowledge into practice.    October 2018 - Present BNY Mellon (Consulting)  Systems Analyst - Java, BNY App Engine (Extension of Docker)    • Worked on enhancements to the OMX Java 8 api which supports a Letter of Credit online application. Modified api to use a ResourceBundle.  • Worked on App Engine which is BNY Mellon's Docker extension. Updated .yml and Dockerfile to use AppDynamics. AppDynamics is a website monitoring service for businesses. It provides statistics and logging to help businesses manage distributed applications.  • Deploy and test App Engine applications. Python Developer Bank of America (Consulting) December 2016 to February 2018 - Python 2.7, Flask, Jinja, Jira, Unittest, JQuery, Javascript    • Created configurable data validation framework that allows non-technical people to set up a customized job to validate specific financial instruments.  • Validation framework consisted of two pieces  1. Online Flask application that allowed users to enter data for validation jobs. Flask application used Javascript to validate entered data.  2. Script that read the configurations and did the work.  • Validation jobs require the following pieces of data.  1. Instrument name to be validated - we worked with various kinds (Futures, Options, and their permutations)  2. Holiday Calendar (to avoid reporting a problem because no data was stored)  3. scheduler information  4. Expiry Calendar for Futures or any instrument with a contract end date  5. Columns to check  6. Number of futures contracts for an instrument, if instrument is futures based.  7. Who should receive any alert data  • The standard validations were:  1. Does the data exist for the day in question?  2. Is it in the correct format? (e.g. Float)  • Optional validations included:  1. Flat check (has the end of day value changed on a daily basis)  2. Negative data check  3. Does the instrument have data for the correct number of contracts?  • Jobs ran two or more times to check for data. If a job runs and problems are found than alert data is produced. It was written to an amps queue and was then picked up by another job that wrote it out to an Geneos ITRS dashboard. ITRS used by our Support team. Alerts for particular jobs could also be subscribed to with an email address. Subscriber receives a formatted spreadsheet of alert data.  • If all data is correct by the time of the last run, the alert is marked resolved and resolution data is sent to ITRS and subscribers.  • Created an online application to migrate configurations from different environments. Configurations were stored in as python dictionaries in a database with one dictionary might containing up to 1000 configurations. No process to migrate configs at the key pair value level, required that we use a custom script and limited changes to release days.  • I wrote an online app that used Angular and Javascript to display job configs and allow for their easy migration from one environment to another.  • Online app allowed non programming support staff to take over this process. Ruby on Rails Developer Case Commons February 2016 to April 2016 Ruby, Rails4, TDD, Rspec, ActiveRecord, Pivotal Tracker  Worked on Casebook which is an application that allows social workers to track their cases for the Indiana department of children's services. Software Engineer - Java Knoa Software July 2014 to January 2016 Wicket, TestNG, JUnit, Mockito, Spring, Hibernate, Services, MSSql, Oracle, Wicket Charts/High Charts, Maven, Freemarker Templates, Agile, Scrum, Jira, Jenkins.    Worked on enhancements to the console portion of a system monitors the user activity of SAP and Siebel software. The console configures and provides status about the knoa server and agents. Worked on agile team with weekly dev sync and scrum.  • Dictionary Mapping allows for the meaningful consolidation of agent tracking data in user reports. Data is collected from the agent in Raw Strings. Dictionary Mapping involves mapping those raw strings to rules based on star patterns. Created new Raw Strings Tab Panel. This page allows for the creation of mapping rules by raw strings. Rules can also be modified and deleted as well. There is also a search function. Data is displayed in a wicket data table complete with pagination. Created services  • Created a home page that shows a graph and table with Mapping totals sorted by dictionary and by SAP solution. The table is created by sorting and totaling all dictionary entries by various categories in to a collection which is then loaded into a wicket data table. The graph is created with wicket charts, which is High Charts in a wicket wrapper.  • Alerts system tracks errors and issues that occur in our system through the console interface. Some alerts are generated via regularly scheduled jobs or processes. Others are generated via the server and put in a message queue, which is then consumed by the console and added to an alert database. The alert system generates emails to certain users and provides reports of all issues. I created the Alerts Reporting page, which displays all alert data in a wicket table with sorting and filtering functionality. Each alert links to some sort of detail page that provides more information. In some cases the detail links to a console log with a time parameter so that the logs pertaining to the alert can be displayed.  • Create unit tests for all code changes using the Mockito framework.  • Created services for data and functionality that comes from jmx calls. Application Developer New York Public Library August 2012 to July 2014 - Ruby on Rails3, Agile Methodologies, BDD, Cucumber, Git, Fedora, github, Jenkins Amazon EC2, herouku, rvm, Java6 and 7, hibernate, spring, foreman, knowledge of Ruby2 and Rails4    • Worked on API to return results from solr and fedora requests. API used a separate classes for the fedora and solr calls. Gem RSOLR is used for solr calls. NET:HTTP is used for fedora.  • Worked on Admin page to allow prospective api users to sign_up for username/password and auth-key access. Users can also edit their ID's. An Admin ID can also edit and destroy Users.  • Created cucumber Tests to for login, sign_up and edit pages. Created cucumber tests for api calls as well.  • Worked on Digital Collections website. Created user front end to allow them to store images and image information for the featured images on the homepage. Digital Collections website is deployed in the cloud. (Amazon EC2)  • Worked with MSSQL to marshall data into MODS format to be ingested into our system. Initial data was pulled from a MSSQL database using Java/Spring.  • Worked on a SIPIngest process. SIP's are archives that contain data and metadata. The metadata is ingested into our system where it is stored in Oracle, fedora commons and eventually indexed in SOLR. This process is meant to handle many different data types. (e.g. OCR data, Still Images, Audio and Video). I worked on sub modules for Video and Still Images. I also worked on the hibernate piece that writes to our file_store database.  • Created rails "Linkminter" project. Our Cataloguers often need permalinks before they know the actual destination of the link. This rails project provides a front end to the java endpoint that creates links. Also, once the destination is known it allows users to update the links.  • Worked on Metadata dashboard. Dashboard shows vital statistics or all of our data and answers various questions for those that use our data and apis to power their systems. (e.g. how many items were digitized recently? Why isn't my item showing up in digital collections.) This systems allows our users a more accessible view into fedora commons systems and solr which power our systems. Webdeveloper/Webmaster School of Visual Arts March 2008 to August 2012 - J2EE/JDBC, Ruby on Rails, Apache, Tomcat, PHP4, PHP5, Wordpress, Subversion, MySQL, PostgresSQL, hibernate, Tapestry, XML, XSLT, Linux, Unix    • Created Rails 3/AJAX app to query our employee database for faculty members and return ID information.  • Worked on a Rails 3 app to query our highly confidential student database in the event of an emergency. App is to be deployed on iphones/androids by select members of the Crisis Committee. App uses TinyTDS and FreeTDS to connect to a MSSQL database. Front end of app is jquery mobile.  • Maintained and enhanced various Java/J2EE(JDBC) Systems. These include a 1)Vacation request System, used by staff to request time off. 2) Faculty Forms System, used by faculty and staff to process and approve faculty, course and schedule changes. 3) Continuing Ed course finder, which lets prospective students find the course they are looking for. The course finder is a built using Hibernate and Tapestry.  • Created JSP shopping cart to streamline the Continuing Education registration process. Developer Prudential Financial February 2007 to March 2008 - Java, J2EE, Blaze, Oracle, Sybase, Unix  • Created Blaze Rules to process financial feeds for the organization. Wrote java beans to read the data entities used to process the feeds. Feeds create records in an Oracle table which is imported into Oracle Financials.  • Created tables for our FTMS system in both Sybase and Oracle. FTMS is a system that provides a way for users to enter and maintain data in tables. The tables are maintained on the Sybase side and then imported into Oracle. Wrote Sybase and Oracle scripts to create tables and define their properties. Wrote Sybase triggers for the Oracle import.  • Created SQL statements and PL-SQL stored procedures to used in various ITG for or workflow validations. PHP Developer TBWA/Chiat Day June 2006 to February 2007 - PHP4, Ajax, XML, Mac OSX  • Created generic AJAX employee information web page for company intranet. Web page does AJAX call to dynamically create XML with employee information.  • Maintain Print Media system. This is a PHP/MySQL/Smarty system used to generate ads that will appear in regional and national newspapers. All PHP projects were developed using ZEND. Java Developer - Java, JDBC, Swing Broadview Networks October 2005 to April 2006 • Designed and Implemented production fixes and major enhancements to Broadview Networks Provisioning Utilities. Provisioning Utilities are used to bring new phone customers on to Broadview Networks Switches.  • Created CNAM transaction using Java/Swing to update Verisign Calling Name database.  • Created Java modules for the Gateway to create the outgoing message sent to Verisign as well as the incoming response. The Gateway is a Java/Swing based system that processes all transactions and their responses.  • Modified E911 utilities system to handle Rhode Island Error responses. This system updates the Bell Atlantic E911 database. My role was to automate the handling of Rhode Island E911 Errors. Quality Assurance Engineer DoubleClick February 2005 to July 2005 - Unix, Perl  • Memory Server/Ad Server multicast Optimization project. Verified that jump (clickthrough) information could be passed by Memory Server as well as the Ad Server. Helped reduce load on the Ad Server.  • User Information Server Multiple Ad Family project. Verified that UIS which provides targeting and user data to the Ad server could receive and store more information. Ad Families allows advertisers to control the serving of large classes of ads. Quality Assurance Engineer Unicast/Viewpoint June 2004 to February 2005 - Unix, Perl, HTML  • Responsible for quality assurance of web-based ad play and ad operations applications. Performed functionality, white box, compatibility, usability and regression tests on both applications. Ensured referential integrity between ad operations and ad play applications.  • Projects worked on include optimization of Ad Play Education Bachelor of Arts degree Queens College Skills testing, HTML Links http://loisgh.info