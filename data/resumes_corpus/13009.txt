Senior Java/RESTful Developer Senior <span class="hl">Java</span>/RESTful <span class="hl">Developer</span> Senior Java/RESTful Developer - Capital One McLean, VA • More than 14 years of professional experience in enterprise application design, development and integration using J2EE technology, in various domains including financial, healthcare and mortgages.  • Solid experience in the analysis, design, development, implementation and testing of client-server, Internet, Intranet systems and web based applications.  • Two years of experience in Forgerock OpenAM and OpenDJ solutions implemented in AWS EC2 instances and using DevOps tools such as Jenkins 2, Nexus, Artifactory. Implementing scripts in Java and Shell Scripts. Experience using LDAP for searches, adds, modify, delete.  • Experience in Amazon Web Services (AWS) using various tools such as EC2, S3, Route53, ElastiCache, CloudWatch. Deployment Tools such as MAVEN,  • Experience with RESTful services based on Jersey Framework handling various HTTP responses and using both JSON and XML. Interacting with UI code in AngularJS or NodeJS through an Ajax based component to call orchectration layer the APIs are called handling request and responses.  • Java EE for web application development using various frameworks and various design patterns. Front End development using Java Server Pages (JSP) for data display and dynamic web pages using various jsp tags and basic java coding to keep the front layer light. Javascript JS for data field manipulation and simple data formatting on fields, labels and messaging.  • App servers Tomcat, Weblogic, JBoss and Websphere Application Server to create access to file repositories, databases through JNDI to various types of Command design pattern.  • RDBM Databases such as DB2 and Oracle required JDBC specific drivers to create connections.  • IBM solutions such as Websphere Portal Server to develop portlets to display portal content. Portlets are extensions of Java Servlets and customized to perform a specific display purpose by acquiring data using jdbc without any business layer or data layer.  • Portal Server connected through jdbc to DB2 by executing specific queries to get data from the tables. Additional tables were created to obtain the data.  • Deployment Process through the ant shell script that uses a build.xml configuration file to define the way JAR file and class components should be stored in the app server.  • Indistinctively for Weblogic, Websphere, Tomcat or JBoss the ant tool servers to create WAR files to decouple front end files and EAR to encapsulate all components into one single deployment component that can later be decoupled between the web server and the app server. Sponsorship required to work in the US Work Experience Senior Java/RESTful Developer Capital One - McLean, VA September 2015 to Present Project: Forgerock Infra Set Up  Methodology: AGILE (6 SPRINTS, 2 sprints per month)  Location McLean, VA  Role: Senior Java/RESTful Developer  Environment: Chassis, Jersey, Agile, STS, Maven, Java    Participated on the migration from Multi Factor Authentication infrastructure implementation to the Single Sign On (SSO) OpenDJ infrastructure implementation.    Responsibilities:  • Migrate Shell Scripts to install and configure OpenDJ on a separate AWS environment for SSO users.  • Implement AWS EC2 instances on a 5 instance architecture for directory servers and replication servers.  • Implement the Jenkins Jobs to build and deploy the tar into Artifactory and run the shell scripts to install and configure OpenDJ    Project: FORGOT MY PASSWORD  Methodology: AGILE (6 SPRINTS, 2 sprints per month)  Location McLean, VA  Role: Senior Java/RESTful Developer  Environment: Chassis, Jersey, Agile, STS, Maven, Java    The goal of this project is to implement the FORGOT MY PASSWORD functionality for the Online Banking System. I implemented various functionality for the FORGOTS APIs primarily working at the backend.    Responsibilities:  • Code, Unit Testing RESTful services using Chassis Framework based on Jersey. Interacting with UI made of AngularJS and NodeJS.  • Build using Maven and Deploy into Development Environment.  • To implement a RESTful service to retrieve forgot username and password flow. This was implemented using Jersey Framework under a standard framework called Chassis.    Project: Enrollment  Methodology: AGILE (6 SPRINTS, 2 sprints per month)  Location McLean, VA  Role: Senior Java/RESTful Developer  Environment: Chassis, Jersey, Agile, STS, Maven, Java    Participated in the Enrollment Process for the Consumer Identity Online Banking App to enroll customers accounts into the mobile app.    Responsibilities  • Code, Unit Testing RESTful services using Chassis Framework based on Jersey. Interacting with UI made of AngularJS and NodeJS.  • Build using Maven and Deploy into Development Environment.  • To implement a RESTful service to retrieve forgot username and password flow. This was implemented using Jersey Framework under a standard framework called Chassis.    Project: Access Management Transition  Methodology: AGILE (6 SPRINTS, 2 sprints per month)  Location McLean, VA  Role: Senior Java/RESTful Developer  Environment: Chassis, Jersey, Agile, STS, Maven, Java    Migration from RSA to Forgerock. Participated in the initial implementation of OpenAM and OpenDJ settings for Forgerock    Responsibilities:  • Code, Unit Testing, Build using Maven and and Deploy into Nexus a Custom Auth Module embedded in OpenAM 12.0.0.  • Configure OpenIG 4 to route and redirect URLs to hide internal URLs. Set up .json files to establish the handlers and filters for the urls.  • Configure OpenDJ to authenticate users through LDAP.  • To implement a RESTful service to retrieve all unenrolled products a cardholder and a retail customer has. This was implemented using Jersey Framework under a standard framework called Chassis.    Environment: OpenAM, OpenIG, OpenDJ, OpenIDConnect, SAML, OAuth2, RESTful, eAPI, Chassis, Agile Lead Java/J2EE eCommerce Developer Indra Sistemas - Chicago, IL February 2014 to November 2015 The goal of this project was to reduce one third of the operational costs by implementing a Websphere Commerce 7 solution and customize the Aurora Starter Store to include all Coppel's eCommerce procedures. Commerce 7 is a very customizable, dynamic tool that involves the usage of REST and SOAP web services that interface with the store to validate user information, obtain products and categories, browse through products, compare products, add items to cart, purchase process, invoicing. Additionally it can add various types of payment methods such as credit card, barcode purchase, cash deposit and others. For credit card payments we used eGlobal service for credit validation and payment transactions. That way we were able to work with Credit Card Payment with various credit card institutions such as Banamex, Bancomer, Banorte among other financial institutions in Mexico. For geolocation we used Digital Element services. For caching we used Softlayer to store static content and bring it from cache once the pages were called. All Java-based components ran from Websphere Application Server (WAS).    For defining part of the Solution Outline of this project we had to build UML diagrams to represent the Java Classes that would be used or extended from the Websphere Commerce. In turn some sequence diagrams were written to represent the execution of the web services and to define which entities needed to be accessed. This helped to work with some externa teams such as the SONIC team to know which web services to publish, which ones would be accesses synchronously, which ones asynchronously and which ones would need to be RESTful based. Also we develo    The web services were developed using SPRING framework using the STS IDE which enabled us to easily build the WDSL, the XML and the stubs to interface with the web services within COPPEL. To publish the web services we used SONIC message broker to asynchronously submit the requests to the web services and receive the response accordingly. Both SOAP and RESTful services were published on under SONIC. Before publishing the web services we used SOAPPUI to test the web services for all possible scenarios. If XML fields were empty, with the wrong data type, or even implementing the scenarios defined in test case documents.    Aurora Starter store included a responsive front end based on JSPs, CSS, HTML5, javascript, JSON to customize the front end. On the middle tier we worked with Java/J2EE to customize the data being sent from the front to the back end. Commerce has a tight architecture so additional functionality needed to extend Command design patterns. All product searches were performed using SOLR so it needs a dynamic table structure to store product categories, products, attributes, product images, etc. These tables were stored on DB2 dababase implemented in a two clustered server environment for backup.    Also we accessed some Oracle databases for temporary storage of data which was in turn retrieved from the web services. For this additional functionality was added outside the Websphere Commerce solution and access through an MVC approach using the same Websphere Application Server. Queries were developed as SELECT, INSERT and UPDATE statements to use the temporary data and so several STORED PROCEDURES were developed to retrieve this information every day and get it stored in the DB2 database. COPPEL's DBA would maintain these stored procedures after developed.    Responsibilities:  • Define the Solution Outline including the functional design, detailed level design, store structure diagram, product and category structure, component diagram.  • Resolve critical issues by installing new patches and open PMRs with IBM to get support.  • Work with IBM in Chicago, IL for configuring dynacache and execute performance testing.  • Configure Websphere Commerce for internationalization, patches.  • Functional testing based on Software Requirement Specs and Functional Design  • Develop Testing Plan and defect control    Environment: Websphere Commerce 7, REST, SOAP, eGlobal, Softlayer, WAS, JSP, CSS, HTML5, JS, JSON, DB2, Design Patterns.    Employer: Indra Sistemas  Address: Av. Ejercito Nacional #843 PH Java Senior Developer Col. Granada Del. Miguel Hidalgo, C.P June 2013 to November 2013 11520  Customer: ISBAN  Project Senior Software Developer  Methodology: Iterative / Incremental (max 3 cycles per iteration)  Location Queretaro, Mexico  Role: Java Senior Developer  Duration: Jun 2013 to Nov 2013    This project intended to provide minor and major enhancement support in Java technology. Resolving work orders for include additional functionality for various banking applications related to credit card fraud, collections.    Responsibilities:  • Receive work order and review the requirement documentation  • Visit customer to resolve queries regarding requirements  • Document a detailed design for the functionality to be included  • Code and Unit Test the functionality  • Prepare test cases in Junit  • Assist the customer in installing the new release when moving to QA  • Assist QA team on user acceptance testing  • Assist in moving to Production    Environment: Java/J2EE, Design Patterns, Oracle Database, Progress Database, Clearquest Tool, Clearcase Tool    Customer: Telefonica  Project AMS Transition, Mexico City, Mexico.  Methodology: AGILE (1 SPRINT per release, 5-10 features per release) under an Application Management Service approach Java Developer January 2013 to June 2013 The goal of this project was to transition 40 applications previously maintained by a company called Everis from which 16 applications were code-written in Java/J2EE including Java Design Patterns. Initially a functional transition took place so I worked with the Everis consultant in understanding the application functionality. Since no documentation was available we had formal meetings and minutes were documented to set proof that knowledge was being transitioned. The majority of the java applications were related to managing internal assets such as mobile phones. The code Everis wrote had no multilayer architecture and in some cases code was accessing from the JSP right directly to the Oracle database. So we had to perform a code assessment to establish a measure of quality of the receiving code in order to justify in some cases the amount of time that would take to rewrite the code. For all 16 applications I worked with other 6 people in implementing struts framework to decouple the JSPs from the code being executed in the Websphere web server container. A standard base Action class was defined to be extended on each application transaction. This way it was easier to keep track of the transactions being implemented. We counted the number of transactions to the database to be executed and based on function point estimation we came to the amount of effort on each application to transition. Once each application was ready with the proper coding standards and struts framework it had to be tested. The tool used for tracking the enhancements on each application was Jira, the MIND suite for handling requirements using Requirement Management (RM), and TestLink for defect registering.    Responsibilities:  • Transition meetings with Everis consultants. Elaborating minutes of meetings  • Code assessment for 4 Java applications  • Implement Struts framework for all 4 applications  • Test the applications, register defects and resolve them    Environment: Java//J2EE, Design Patterns, MVC, Oracle 10i, PL/SQL, Websphere Application Server, J2EE Design Patterns, Jira, RM, TestLink    Employer: PCS Computer System Mexico S.A. de C.V.  Address: Av. Epigmenio Gonzalez #500  Fracc. San Pablo C.P. 76130  Parque Tecnologico, 6to Piso  Queretaro, Qro. Mexico  Customer: General Electric (Multinational Company)  Program Application Enhancement for Mexico  Methodology: Iterative (Minor enhancements less than 1 month each) Senior Java Developer GE Money - Cincinnati, OH April 2010 to December 2012 For this program I participate in various major and minor enhancements in Java/J2EE for various applications. Projects involved GE Aviation I traveled to Cincinnati, OH to implement a Project Management workflow using SupportCentral tool, GE Money for implementing a POC using Java Glassfish framework, GE Fleet for implementing a java interface for Salesforce.com and implementing a foreign national exchange application to assist foreign people when getting transferred to another country, CNBC on a project to fulfill the TV shows calendar for various TV channels. The intention was to proof a small team in Mexico could resolve tickets with the same performance that in India, Initially I went to Airoli, India to get some training around all the processes and procedures related to software development. For GE consumer finance I participate in the initial stages of ServiceNow implementation for ITIL asset management.    Responsibilities:  • Elaborate detailed level design for all functionalities to be implemented  • Code and unit test the functionality.  • Build the EAR file for deployment in QA and Production environment.  • Elaborate test cases for the code to me implemented  • Build and deploy the application  • Manage the SVN tool for configuration management in code    Environment: SupportCentral, Java Glassfish, Salesforce.com, ServiceNow, Java/J2EE, Oracle 10i, PL/SQL, SVN    Employer: TCS  Address: Insurgentes Sur 664, Piso 2  Col. Del Valle, México D.F. 03100  Mexico, DF. Mexico  Customer: ISBAN (Banking)  Project Supernet Empresas  Methodology: Iterative / Incremental  Location Queretaro, Mexico. Java Senior Developer February 2008 to April 2010 The goal of this project was to handle the 90% of the online banking transaction for Santander ISBAN center through the Supernet Empresas application to be available to all banking customers reducing costs of attending customers physically. With this project many procedures were totally moved to online application which reduced the effort and amount of people bank affiliates needed to hire and train to perform all procedures. This was a 300 people project handling various technologies. In my case I worked in Java/J2EE piece for user register transactions, wired transfers and credit card payments. IDE used was Eclipse using Tomcat server for coding and deploying the components in JBoss. The application server used was Websphere Application Server    Responsibilities:  • To participate in the requirements meetings to define the online transaction for credit card requests.  • Elaborate functional and detailed level design documents  • Participate in meetings with customer to approve detailed level design.  • Code and Unit Test the functionality  • Elaborate test cases in JUnit    Environment: Java/J2EE, Design Patterns, Struts, EJB, JPA, Tomcat, JBoss, Junit, Websphere Application Server, Oracle 10i, PL/SQL, Eclipse    Customer: Profuturo GNP (Insurance Company)  Project Annuities System / Afore System Java Senior Analyst & Developer Iterative / Incremental - México, D.F., MX May 2006 to February 2008 Methodology: TCS Unified Process (Iterative / Incremental) - 2 iterations for each phase  Location Mexico City, Mexico  Role: Java Senior Analyst & Developer  Duration May 2006 - Feb 2008    The goal of this project was to migrate the existing Mainframe/COBOL functions and CICS framework components to a web development application based on IBM Websphere Application Server, DB2 and Java/J2EE customized application in order to reduce costs in costly COBOL people and hire web developers and increase the speed of maintenance cycles. This project involved a thorough understanding of the Annuities Model for Pensions and Afore (similar to 301K). A vision document was elaborated to understand the project goal which in turn centered the focus on reducing costs, however initial estimations through 80K men hours to develop the entire application from scratch. We had to count all the components to be developed and come to an estimate using UML Use Case Diagram and using Use Case Point estimation. In addition to this we had to perform Data Modeling and develop the ETLs for migrating the mainframe database to an Oracle Database.    Responsibilities:  • To participate in the initial stages of the project in the Vision document elaboration.  • Elaborate Use Case Diagram  • Estimate the project using Use Case Points  • Elaborate uses case documents for 40 use cases  • Elaborate Functional Design documents using UML Activity Diagrams, Component Diagrams, High Level Sequence Diagrams  • Elaborate Detailed Level Design Documents using UML Class Diagrams, UML Sequence Diagrams,  • Elaborate Test Case Documents.    Environment: Java/J2EE, Struts, Websphere Application Server, Oracle, EJB, JPA, Junit, Websphere Application Server, Oracle 10i, Eclipse    Employer: Vision Consulting  Address: Calle Kepler 11, Anzures, 11590 Ciudad de México, D.F., Mexico  Customer: SAGARPA (Secretary of Agriculture)  Project Budgeting System  Methodology: Waterfall (code migration) Java Senior Developer Mexico City, MX September 2005 to May 2006 The goal of this project was to migrate the existing Visual Basic 6 application to a web development application in Java/J2EE. The customer initially provided documentation with screens and user Manual for the application which assisted in the estimation process. A .NET expert assisted in the code assessment and identified the code modules in Visual Basic that could be migrated to Java using VB Converter Java Edition Tool. As part of the coding reuse policy standard we implemented the Java/J2EE code framework using base classes that would be extended for each transaction. The struts framework was incorporated to keep the view layer separated from the front end. This strategy helped us to keep the screen coding and the business layer in parallel and since the screen coding involved a different coding process as Visual Basic code was read and analyzed and immediately after a Java component was written to follow the same algorithm. Whenever applicable (30% of the times) the VB Converter generated the Java code automatically based on Visual Basic code. The business layer was developed using extreme programming (XP) based on the functional design document implementing Command Design patterns and access to the existing Oracle Database by using PL/SQL queries.    Responsibilities:  • Software Evaluation for VB Converter Java Edition tool.  • Identify modules that was possible to translate into Java code  • Elaborate the functional design documents for business layer  • Establish the base classes for J2EE business layer  • Elaborate queries using PL/SQL    Environment: Visual Basic 6, Java/J2EE, VB Converter Java Edition, extreme programming, Oracle 9i, PL/SQL    Customer: INMEGEN (Government Health Ministry)  Project: IBM Portlets Java Senior Developer Iterative / Incremental - México, D.F., MX April 2005 to September 2005 Duration: Apr 2005 - Sept 2005    The goal of this project was to implement a 28 cluster supercomputer to compute genomes of various organisms for scientific research. The search engine would be accessed from all over the world and would include the scientific research performed at INMEGEN. This was a Government investment that would contribute to DNA research of human genome and other organisms that genetically would be compatible for curing cancer and other terminal deceases. The 28 cluster running under Linux SUSE would receive all requests from a Websphere Portal Server which included a search engine where scientists would enter the DNA chain to be searched in all scientific databases in the world (e.g. Affymetrix). The genome is represented as a string of letters A, B, X, Y that can potentially be constructed of billions of patterns. The search engine takes a small piece of that genome and compares it across the billions of DNA genomes on 12 databases and this is the reason of having a 28 cluster to perform the searches. Despite of this we had to understand some aspects of the Java Virtual Machine since major stack overflows were coming out when trying to search. So we had to override the .indexOf() method to perform partial searches in sizeable pieces of substrings so once the indexOf() approached to the final letters we concatenated the next set of letters to perform the search. This proved to be a better performed comparison which reduced the performance in an average of 5 seconds on each query. We worked with the IBM Life Sciences Team coming from Boston, MA that helped in the implementation of the IBM Portlets for genome search. Portlets are basically Java Servlets with a specific architecture that can be assemble as content that can be replaced in the Portal using the IBM tool. They do not follow a MVC approach so portlets access directly to a DB2 database using simple JDBC driver for DB2. In some cases information was zipped as .zip files with plain text files in it so we used the Java ZIP package to read the ZIP file, extract the text files, parse them and insert the data in the DB2 database.    Responsibilities:  • Configure the Portal Server for portal content based on INMEGEN requirements  • To develop 12 portlets to access 12 different databases requesting files through FTP, reading them and insert the information in DB2 database  • Define the Database tables to insert plain files,  • Write the code to identify the most common queries and set them in the DB2 tables.  • Code and Unit test the genome search engine tool.  • Assisted IBM in configuring the Java Virtual Machine for each websphere application server on each node.    Environment: Websphere Portal Server, Websphere Application Server, Affymetrix, java.util, Java Portlets, IBM Portlets. Servlets, DB2, JDBC, FTP, CORBA, text parsing.    Employer: Certum  Address: Rodolfo Gaona 86, Lomas de Sotelo, 11200 Ciudad de México, D.F., Mexico  Customer: Cinepolis (Movie Theatre)  Project: Kiosk Senior Java Developer Waterfall - Mexico City, MX December 2004 to April 2005 The goal of this project was marketing the launch of a kiosk for consulting movie charts and purchase movie tickets using credit card payment. An NCR Kiosk is just a PC running under Linux SUSE which had a LAN connection. The front end part was developed using Adobe Flash and using Javascript it executed a Java application that connected to a MySQL database through JDBC driver. There was no need of a web/application server since the development was meant only for one kiosk. The Kiosk only stored the front end piece and another PC stored the Java application which was executed whenever pressing the Submit button in the front end. Communication between the kiosk and the PC was done through Remote Method Invocation (RMI). To design the database we used TOAD.    Responsibilities:  • Implement the Java Core application, RMI Interfaces, RMI Server  • Design the database for movie charts and movie details.  • Implement the shell scripts in LINUX SUSE  • Extract the images and plain text to update the database.    Environment: NCR Kiosk, Linux SUSE, Adobe Flash, Javascript, MySQL, JDBC, Java, Remote Method Invocation, TOAD.    Employer: eSiglo  Address Culiacán No. 123 esq. Bajío. Hipodromo Condesa. Cuauhtemoc. Mexico City  Customer: Inbursa (Insurance Company)  Project: SII Java Senior Developer Feature-Driven Development - Mexico City, MX August 2004 to December 2004 The goal of this project was to migrate the existing Mainframe set of applications into a single integrated web application for handling the insurance policy requests reducing costs in terms of manpower. The application followed a Service Oriented Architecture (SOA). Web Services were to be developed in any technology which would be called through Websphere Process Server to interact with the Business Workflow that would receive the insurance requests, review the insurance requests and approve the insurance policies. Web Service would invoke the business rules to calculate the score to approve or deny an instrument to the end customer. Web Services would come from various areas in INBURSA and would pass through a multi-threaded dispatcher developed in Java. The dispatcher would be contained on various web servers distributed across 8 websphere application servers.    We used SPRING framework for simplicity in the creation and instantiation of EJBs in the Websphere Application Server. A Factory was developed in order to call SPRING API to instantiate the proper EJBs.    The Websphere Process Server would also be clustered across servers to dispatch the requests. The dispatcher was a MVC based component which used JNDI to direct the requests based on the type of class the web service sent as first parameter. It used Class.forName("className") to identify the class and then reading an XML file and using JNDI we redirected the requests to execute Command components based on the web services. For code versioning we used SVN and we used Eclipse as IDE.    Responsibilities:  • To develop a proof of concept for the Service Dispatcher  • To implement the service dispatcher  • To code and unit test the insurance approval module.  • To configure the business workflow in Process Server  • To define the coding standards checkstyle on Eclipse.    Environment: SOA, Web Services, Design Patterns, Websphere Process Server, Websphere Application Server, Java, MVC, JNDI, XML, SVN, Eclipse.    Customer: IFE (Government Elections Institution)  Project: SIIRFE Java Senior Developer Waterfall - Mexico City, MX January 2004 to August 2004 The goal for this project was to reduce costs by migrating the existing applications that handle the voters database and preliminary list of voting stands to keep the information updated. The implementation used a Java/J2EE application that in turn implemented each transaction using a MVC and J2EE design pattern application in a front end, middle end and back end approach. The front end was developed using JSPs which struts framework to define the proper action classes. Action classes in turn called delegate classes to decouple front end from middle end. All business layer was implemented using EJB with the form of stateless session beans. Session functionality was implemented as HttpSession classes to store user information until sign out. An Oracle database stored all tables and data was migrated through digitalization for image compressors. A Feature Driven Development was established to handle scope management in terms of new functions. The code versioning was done using SVN and requirement documentation was elaborated on a use case approach.    Responsibilities:  • To code and unit test the voters list maintenance functionality.  • Worked as configuration manager for the code maintenance, main and branch creation, code merging  • Work with the technical specialists from IFE to assist them in implementing the websphere application server and oracle database in their own environment.    Environment:  • Java/J2EE, MVC, Design Patterns, JSPs, Design Patterns, Websphere Application Server, struts framework, EJB, stateless session beans. Oracle 9i, SVN, Eclipse, Netbeans. Java Senior Developer Softtek - Mexico City, MX August 2003 to December 2003 The goal of this project was to develop a CRUD application for specific catalogs within the Institution. The application was developed following J2EE design patterns and implemented using Tomcat server as the Institution was not sure about which server to purchase. Database used was Oracle 9i which had the catalog tables defined by IFE.    Responsibilities:  • Define the J2EE base classes to be extended for application development  • Code and unit test some of the transactions for 10 catalogs.    Environment: Java/J2EE, J2EE Design Patterns, Oracle 9i, Tomcat.    Employer: Softtek  Address: Av Eugenio Garza Sada, Parque Industrial Tecnopolo, 20328 Ags., Mexico  Customer: Fidelity Investments  Project: Outbound Extract Process Java Developer Waterfall - Merrimack, NH November 2002 to August 2003 The goal for this project was to develop various reports required by Fidelity Investments in order to shape the information received from various companies into a single plain text file that would be uploaded into an existing web application. Plain Text files were placed on Unix servers under a specific route. Each file maintained a naming convention so the report processing jobs would recognize the source company and the destination company the report would be generated to. The report structure varied based on the destination company so the need of creating various java applications to create various reports was inevitable. An analyst would design the report and define the source files and destination files as more than one report could be created based on the configuration parameters. Each Java application required extensive algorithm design as many configuration parameters created various conditions for which data to include in the report. The Java files were java applications run by a crontab tool as Unix Shell scripts.    Responsibilities:  • Work with analyst to define the algorithm to be executed in Java application  • Code and unit test the java application locally  • Define the package classes to obtain the plain text from various servers    Environment: Plain Text files, Unix Servers, Java applications, Crontab, Unix Shell Scripts    Customer: General Electric Capital Card Services  Project: Apollo Workstation Java Developer Feature-Driven Development - Mason, OH September 2001 to November 2002 The goal for this project was to build a Collections and Customer Service modules for credit card requests. A web layer to the existing mainframe infrastructure that would encapsulate all the business functionality and reduce costs of maintenance. This web layer followed a Multi-layered approach and evolved through various technological tools and approaches. Initially a JSP front end development was defined for all screens based on the existing mainframe cobol screens. On the JSP screen we inserted a javascript component that interfaced with a Telephony box operated by a call center. This javascript component extracted from the caller all its information such as name, address, credit conditions and so on based on the options dialed through the phone. The struts 2.0 framework was established to decouple the controller pattern from the whole front end development and set the view layer. We configured the pom.xml for the Maven-based build to include the libraries and configured the web.xml to apply the filter and filter mappings for the struts packages. Then we configured using struts.xml all the actions for struts 2.0 to be used, defining the appropriate methods and expected result ulrs for each one of them. A team of 20 developers on which I worked dedicated to code and unit test each feature. The IDE used was TogetherJ. Initially the Kana Application Server was introduced as web/app server so we needed to interact with specific Kana-component called Adapter which worked as a stateless session bean in the server. Later on we removed the Kana Application Server and used Weblogic. Changing the web/app server required to incorporate a new architecture so an Architecture Team dedicated to set the proper base classes for coding the application was created. Also the Architecture Team decided about the server infrastructure and inbound equipment to be used. Challenge was that outbound calls would be required for the Customer Service module so all information was sent in Java through the web/app server and in turn the call to the outbound call equipment was done through the server. A Business Team was put together to create functional and detailed level design documents which were used by software developers to code and unit test the code. Test cases were derived from Use Cases and unit test cases were developed using Junit. Regarding the back end there were various components the J2EE piece would interact. A Data Caching component was set to manually send any information the developer wanted to cache. If developer wanted to cache at the back end level then temporary database in Oracle 9i would be created to store the information and once the session was timed out or user logged out then those tables were removed. If the developer wanted to cache user related information through the web and app server. For code versioning we used MKS and as IDE we used TogetherJ. This project followed a Feature Driven Development approach. In order to retrieve the data from mainframe a Packet Mapping Layer was created in order to interface with the mainframe responses, parse the text sent by mainframe and build Value Objects with the information requested. This project was moved from various vendors and final vendor required knowledge transfer to Hyderabad and Ahmedabad, India.    Responsibilities:  • To elaborate functional and detailed level design documents  • To elaborate use case documents  • To elaborate class diagrams and sequence diagrams  • To code and unit test features  • To produce packet mapping Value Objects  • To perform functional test on Collections Module  • To do code assessment on the existing code  • To assist a new vendor to transition the code to India  • To conduct the knowledge transition for Collections module to people in India    Environment: JSP, Javascript, Telephony, Java/J2EE, J2EE Design Patterns, UML, Use Cases, Functional design, Detailed Level Design, Feature Driven Development, TogetherJ, MKS, Weblogic, Kana Application Server, Oracle 9i    Customer: General Electric Aircraft Engines  Project: Key Characteristic System Java Developer Waterfall - Cincinnati, OH April 2000 to September 2001 The goal for this project was to improve the aircraft part assembly process. A Six Sigma approach was handled to arrive to a Problem Statement to justify the need of the KC System. The KC System implemented in Java Swings using the Netbeans IDE would automatically create the swings based on the editor. The Java Swings would be invoked from a simple java Applet in the web browser. Java Swings would interface directly to an Oracle 8i database with all the information set. Database was consulted and updated through PL/SQL queries through a JDBC driver for Oracle. The application handled various aircraft parts and handled as a CRUD of the upper spec and lower spec limits. So all auditors would measure in the manufacturing area and would capture for each piece the tolerance, resistance and performance of the aircraft parts and enter the information in the KC System.    Responsibilities:  • Understand the requirement from the functional manager  • Code and Unit Test the screens in Java Swings  • Code the sql statements for Oracle access.    Environment: Six Sigma Java Swings, Applets, Oracle 8i, PL/SQL, JDBC    Employer: Consiss  Address: Río Volga 301, Del Valle, 66220 San Pedro Garza García, N.L., Mexico  Customer: CYDSA Corporativo    Project: To Place an Order Java Developer Waterfall - Monterrey, MX January 1999 to April 2000 The goal for this project was to implement a web application to enter the shipping information of all chemicals arrived to the seaport. A JSP application was developed to access a Progress Database using a JDBC/ODBC bridge since Progress database was not compatible with Java. JSP would have the input information and being sent directly to the database. JDBC driver for ODBC data source was purchased with the bridge which give the liberty to move the interaction to any other database.    Responsibilities:  • Code and unit test the JSPs  • Configure the JDBC/ODBC driver  • Implement the 4GL queries required for inserting and updating the information  • Code the triggers that would replicate the main catalogs into temporary tables.    Environment: JSP, JDBC/ODBC driver, Progress. Education Bachelor of Science in Computer Systems Engineering Monterrey Institute of Technology and Higher Education - Monterrey, MX 1994 to 1998 Skills Application Server (8 years), database. (10+ years), Java (10+ years), Oracle (10+ years), SQL (7 years), Java J2Ee, Spring Additional Information Technical Skills    Languages / Web Technologies  Java 1.7, JSP, Servlets, Struts 1.2, Spring 3.1.2, Spring MVC, Spring JDBC, Hibernate 3.2, EJB, SPRING, JDBC, Java Webservices (SOAP/REST), AJAX, Javascript, JQuery, JSON, HTML, XML Technologies, SQL, PL/SQL, Log4J, Junit, UNIX Shell scripts, Visual Basic 6.0, Adobe Flash CS4. Java Servlets, Model View Controller (MVC), BEA Weblogic Server  RESTful  OpenIG, OpenAM, OpenDJ  Encryption AES, RSA, Base64, encoding    Servers  Tomcat 8.0  Weblogic Server 10.0  JBOSS  IBM Websphere Application Server v6.1    Database  Oracle 11g/12c, MS SQL Server 2000, MS Access, MySQL, IBM Websphere Portal Server 5.1, Websphere Application Server 5.1, Informix  Microsoft SQL Server 2005, Access IBM DB2 9.1  Oracle 8i, Application Server, Mainframe    Operating Systems Windows, Sun OS, HP-UX, Linux  Modeling Tools MS Visio, Argo UML, Toad, Enterprise Architect  Other Tools  Eclipse 3.7, STS, Ant, Maven, CVS, VSS, Test Director, Rational Application Developer, Bugzilla, IBM Clearcase, IBM  Git Hub, Jersey  ClearQuest, HP Quality Center 10.0, DB Visualizer 7.0.7. Capability Maturity Model Integrated (CMMi), COCOMO II    SDLC Methodologies Waterfall Methodology, Agile Methodology, Extreme Programming.