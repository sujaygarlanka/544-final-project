Sr. Java/J2EE Developer Sr. <span class="hl">Java</span>/J2EE <span class="hl">Developer</span> Sr. Java/J2EE Developer Charlotte, NC Authorized to work in the US for any employer Work Experience Sr. Java/J2EE Developer Credit Acceptance - Detroit, MI November 2018 to Present Project Description:  CAPS is a web based application used by dealers of Credit Acceptance to process the vehicle loans for the customers. In order to process the application, CAPS will interact with multiple internal systems and also communicates external third party services. It provides following built-in functionalities Account opening, Authentication, Verification, Identification, Risk Management, Credit Scoring, Pre-Approval, Email communication during fulfillment process.  Responsibilities:  • Involved in design and development of the application.  • Participated extensively in Data Model designing for the entire application.  • Used JSF Framework to develop the application.  • Developed application UI using JQuery, AJAX, JS, JSF, JSP  • Implemented the functionalities using Java, J2EE, Spring and JSF framework with Ice faces.  • Used Apache Camel to incorporate ESB integration across the organization.  • Created a standalone application (Work Number Integration) using Apache Camel which would be serving on an ESB to different teams across the organization.  • Configured different camel routes for different teams to accept team specific requests and return team specific responses.  • Client pages are built using JSF tags.  • Used JavaScript for client side validations.  • Created and used the jars to access the data by using axis.  • Used JPA annotations to create domain objects.  • Used Hibernate as an ORM tool.  • Developed and debugged the application using Eclipse.  • Used Log4j for writing the logs including errors, warnings, info.  • Worked on web logic server to deploy the applications.  • Created internal web services using SOAP.  • Created Restful web services using Spring and Consumed Restful web services using Spring's Rest Template with JSON as a data format.  • Consumed external web services to support the application.  • Used Spring's WebService Template to consume SOAP based web services.  • Worked on the JMS queues and configured on web logic server.  • Used JMS API for asynchronous communication by putting the messages in the Message queue.  • Used Ice faces for creating and maintaining the uniformity of the client pages.  • Used memory analysis tools such as Dynatrace 6.1, Eclipse MAT, jHat, YourKit, VisualVM to analyze and find memory leaks.  • Used HP Quality Center to manage the defects and issues.  • Used SVN to manage the versions and Merge the code.  • Used Hudson for the Continuous Integration builds for different applications.  • Used Maven build tool to build different EAR files and to print the server info.  • Used local nexus repository to download the jars for the applications using Maven.  Environment: Java JDK 1.6, J2EE, Spring 3.0.3, JSF 2.0,Ice Faces, Apache Camel 2.14.1, SOAP, REST, Jersey, JAXB, JSON, JPA, Hibernate 3.0, Maven, JNDI, Oracle, Axis(client), Ajax, XPath, JavaScript, JSP, XHTML, HTML, CSS, log4j, Eclipse, Oracle, liquibase, JMS, Hudson, Quartz, JMS, Web logic, SVN, Oracle PL SQL Developer, HP QA, Adobe Fire Works. Sr. JAVA/J2EE developer Capital One - McLean, VA September 2016 to November 2018 Corporate eBanking Application:  Visual Refresh mainly involves enhancing the existing J2EE eBanking application, which was developed back in 2004. This application was developed to facilitate Internet banking service to the customers of the bank. The main goal was to completely rebuild the existing framework and make it Ajax-centric with more robust and flexible code according to the new coding standards and make it more interactive.  Responsibilities:  • Modify and redesign the existing framework to optimize the performance of the existing application by making it completely Ajax-centric.  • Redesign, reconstruct and optimize the existing UI screens using JSTL in JSP's.  • Retrieve data from the Data Access Layer (DAO) using the custom framework designed by the client  • Used jQuery extensively for performing client side validations and for enhancing the current functionality of the screens.  • Design and develop utility classes using java's collection framework to provide better flexibility and avoid reuse of code.  • Developed and enhanced around fifty UIs, using JSPs together with JSTL. JavaScript, HTML/DOM and Ajax based support methods.  • Used wide variety of jQuery plug-ins to provide a better interactivity for the end user.  • Developed data persistent layer using Hibernate as Object Relational Mapping (ORM) Tool for the backend data persistency.  • Experience in using SQL on Oracle 10g and 11g databases to create test data and perform data verification after the WUI updates. Used Stored procedures to perform database related operations.  • Applied standard design patterns, such as Iterator, Singleton, Factory, Observer and Decorator, while coding new application modules.  • Used CSS, HTML and JSP extensively to create uniform look and feel of the new Web User screens.  • Design and develop custom tags to retrieve data from various resources  • Performed extensive testing to minimize the browser compatibility issues.  • Provide support for the application deployed in Test, UAT and Production environments  • Extensively wrote Ajax calls using jQuery's Ajax plug-in to handle navigation throughout the framework.  • Fixed security issues like Injection (SQL, OS etc.), XSS Persistence and XSS Reflection reported by fortify on OWSAP top 10 issues.  • Wrote JUnit, Selenium test cases to perform unit testing.  • Used GIT, Harvest for version control across common source code used by developers.  Environment: Tomcat 5.5, WebSphere 7.0, Eclipse Helios/Indigo/Juno, JSP 2.3, Custom Framework(Similar to Struts), JSTL, Servlets 2.5, jQuery 1.6.x/1.7.x/1.8.x, Ajax, jQuery's Ajax, Hibernate, XML, Web Services, SOAP, WSDL, Log4J, JUnit, Selenium, JavaScript, HTML, HTML DOM, XSLT, SQL, Oracle 10g/11g, GIT, Harvest, UNIX, HP Quality Center, MS Office, Windows 7. Java Developer Travelers Insurance - Saint Paul, MN September 2014 to August 2016 Project Description:  Business Foundation System (BFS) is an insurance policy underwriting system under the Commercial Small Insurance vertical. This application provides quotes for customers and enables agents to issue and renew insurance. The underwriters can update with the new rates and edits. Property and Liability, Auto insurance, Workers Compensation are the three lines of businesses supported by this application. It also interacts with some third party applications and has the facility of accepting quote requests from other vendors.    Responsibilities:  • Involved in Presentation Tier Development using JSF Framework and ICE Faces tag Libraries.  • Involved in business requirement gathering and technical specifications.  • Implemented J2EE standards, MVC2 architecture using JSF Framework.  • Implementing Servlets, JSP and Ajax to design the user interface.  • Extensive experience in building GUI (Graphical User Interface) using JSF and ICE Faces.  • Experience using ICE Faces Tag Libraries to develop user interface components.  • Used JSF, JSP, Java Script, HTML, and CSS for manipulating, validating, customizing, error messages to the User Interface.  • Used EJBs (Session beans) to implement the business logic, JMS for communication for sending updates to various other applications and MDB for routing priority requests.  • All the Business logic in all the modules is written in core Java.  • Implemented Spring IOC for reducing the tight coupling between object.  • Wrote WebServices using SOAP for sending and getting data from the external interface.  • Used XSL/XSLT for transforming and displaying reports. Developed Schemas for XML.  • Involved in writing the ANT scripts to build and deploy the application.  • Developed a web-based reporting for monitoring system with HTML and Tiles using Struts framework.  • Used Design patterns such as Business delegate, Service locator, Model View Controller, Session façade, DAO.  Environment: J2EE, EJB, JSF, ICE Faces, EJB, Web Services, Spring, XML, XSD, Agile, Microsoft Visio, Oracle 9.i/10.g, WebSphere8.1, RAD, LOG4j, Servlets, JSP, UNIX. Java Developer Centene Health Care - Clayton, MO March 2012 to August 2014 Project Description:  The Medco Health Client Website - Online access to interactive tools and information designed to manage the prescription drug benefit. The Client Website places a comprehensive set of web-enabled prescription drug benefit management services, tools, and information right at clients' fingertips. These powerful new capabilities, accessible through a single, secure website, help reduce the time and effort clients spend administering prescription drug benefits. Clients are also able to find answers to benefit-related questions more quickly and easily, maximizing member satisfaction thanks to quicker turnaround.  Responsibilities:  • Involved in the full Systems Development Life Cycle (SDLC) including requirements gathering, architectural and design development and reviews, code and unit test case walkthrough.  • Developed the user interface using Struts Framework with HTML, XSL, XML, Style Sheet and XSLT for retrieving and presenting the DCDP and Prescription Drug Benefit Information using JSP and Servlets.  • Involved in coding and modifying Servlets for changes, enhancements, and fixing defects in the application.  • Involved in developing of various business and data components like Entity and Session Beans and managed database transactions using JDBC and Oracle8i.  • Created Deployment Descriptor file for taking care of Transactions, Security and Database related information of EJB in the J Boss Container using XML.  • Incorporated J2EE architecture using JSP, Servlets and Business objects.  • Based on the user profile data collected, the pages are displayed to encompass the security.  • User is facilitated to customize the home page. Created browser generic code.  • Developed a search engine functionality to search the database, management server using Entity beans and implementing XML parser.  • Created and modified Stored Procedures, Complex SQL Commands for the application-using PL/SQL.  • Responsible for installation and configuration of Web Sphere 4.0 for the deployment of developed EJB's.  • Involved in troubleshooting and debugging the JSP Pages and EJB's in all the stages of environments.  Environment: J2EE, Java, SDLC, JBoss ,UML, EJB 1.2, JSP Tag libraries, JDBC, Servlets, XML, CSS, XSL , Struts, JMS, Oracle8i, SQL/ PL/SQL, HTML, JavaScript, Windows XP. JAVA Developer Infosys - IN July 2007 to November 2011 Project 1:  Project Description: BMS  Billing Management System (BMS) developed is aimed at automating and standardizing the process of billing and generate statutory and analytical reports for the management. Along with monthly bill processing, revenue collection information would also be processed through the system to ensure seamless integration of metering, billing and collection processes with regard to all the categories of Low tension and High-tension consumers of the power distribution utilities. A comprehensive product that puts in place customer centric business processes and enables the faster management of customer needs achieving the aim of enhanced revenue generation.  Responsibilities:  • Developed home page port lets which describe the functionality of various applications and having links to them.  • Involved in analysis and high level design of the project.  • Developed different dynamic UI screens using HTML, JSP and JavaScript for prototype.  • Used Session beans and Entity Beans for Application logic.  • Involved in Reports using XSQL, XSL etc.  • Developed certain modules like Customer details, ledger process, d-list process and reports.  • Involved in Implementing the Application at Client-side.  • Worked on Maintenance and supporting team for considerable amount of time.  • Used MVC design Pattern for whole Application development.    Environment: Weblogic, Java, JSP, Servlets, XSL, XSQL, Session beans, Entity Beans, Eclipse3.0, Oracle9i.    Project 2:  J2EE Developer  ECRM (e-Customer Relationship Management)  eCRM is developed as a highly parameterized application suitable for various power distribution companies. Modules are to be arranged together to customize the application as per the client's requirement. eCRM addresses most of the customer interfaces in a power distribution utility spanning areas such as new customer acquisition, estimation, work order processing, metering, billing, collection, customer service center, and trouble call management. eCRM through its automated features like automatic bill generation, faster means of communication to the lineman in the field etc. improves the consumer relation with the distribution company and also reduces the consumer grievance. Other outstanding features include Remote Logging and Debugging component build on asynchronous JMS technology. eCRM gives a centralized monitoring and tracking support for information flow.    Responsibilities:  • Developed home page port lets which describe the functionality of various applications and having links to them.  • Involved in analysis and high level design of the project.  • Developed different dynamic UI screens using HTML, JSP and JavaScript for Client Validations.  • Used Session beans and Entity Beans for Application logic.  • Used MVC design Pattern for whole Application development.  • Involved in Implementing the Application at Client-side.  • Worked on Maintenance and supporting team for considerable amount of time.  • Involved in Repots using XSQL, XSL etc.  • Extensively involved in the development of key modules like Collections and    Environment: Java, Jboss, Servlets, JSP, JDK 1.4, Oracle9i, XSL, XSQL, Eclipse, Entity Beans. Education Bachelor in Computer Science Engineering in CSE JNTU Hyderabad Skills ECLIPSE, EJB, J2EE, JAVA, HIBERNATE, SPRING, JAX, JAXB, JAX-WS, JBOSS, JMS, JNDI, jQuery, JSF, JSP, JSTL, SERVLETS, STRUTS, WSAD, APPLICATION SERVER, Javascript, Java J2Ee, Angularjs, MVC, JEE, Soap, Angular