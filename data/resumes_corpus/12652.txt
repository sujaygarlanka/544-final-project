Sr. Java/Liferay Portal Developer Sr. <span class="hl">Java</span>/Liferay Portal <span class="hl">Developer</span> Sr. Java/Liferay Portal Developer - BCBSA Angels, PA • Certified Oracle Java Developer with 7+ years of experience in Software Development Life Cycle - Softwaredeveloping enterprise applications in domains Finance, Public Sector and Health Care.  • Involved in various projects related to Data Modelling, System Analysis, Design and Development for both OLTP and Data warehousing environments.  • Acquainted in designing and developing server-client and webbased applications in Java/J2EE technology using Object Oriented Technology.  • Adept knowledge in Liferayportal development technology using Hooks,Portlets,OSGiframework,Fragments,Activators,Form Navigator,Service Builder, extand Liferay CMS.  • Leveraged the Liferay DXP OSGi framework for providing the development environment for modular applications.  • Expertise in Core Java concepts such as OOP Design, Multi-Threading, Generics, Exception Handling, Collections, Java Reflection, JDBC and Annotation.  • Familiar with Java 8 concepts like Lambda Expressions, Functional Interfaces, Stream API, Joda.Org(Time and Date API).  • Proficient in developing web based GUI's using HTML5, CSS3, JavaScript, Angular-JS, XML,DOJO,Bootstrap and knowledge on JavaScript libraries ReactJS,NodeJS,BackboneJS etc.  • Good working experience on XML suite of technologies such as XML, XSD,XSLT, DTD, DOM, SAX-parser.  • Created UI application using Angular4 and Type script as POC.  • Mastered different modules of Spring core, Spring MVC, Spring securityandgood hands-on experience with Spring Boot, Spring cloud.  • Stronghands on experience with Hibernate andSpring JPA, Spring Data.  • Having good experience in exposing and consuming web services using Apache CXF and Apache Camel.  • Adeptknowledge in RDBMS like MySQL, PostgreSQL, Oracle,PL/SQL, Microsoft SQL Server, DB2.  • Good knowledge in NOSQL databases like MongoDB,Elastic Search and Couchbase  • Knowledge in Amazon web services(AWS), Open shift Enterprise, Docker Images, BRMS images.  • Involved incoding both View layer (MVC Framework) and Model Layerusing Struts and Java Web Services and UI mockups using Balsamiq.  • Extensive exposure in AngularJs for application implementations, proficient in creating modules, controllers, factory services, customizable filters, http get/post method and directives to realize functionalitieslike REST service using Ajax call, input validations, searchable and sortable contents.  • Proficientwith version control software like SVN,GIT andimplementing logging features using Log4j, Slf4j.  • Experiencedin TEST automation usingSelenium, Cucumber, Jenkins, Karma, Jasmine and Testing tools JUnit, Firebug, JMeter.  • Acquainted inWeb Services usingSOAP, REST, UDDI, WSDL,andJava Web Service API's such as JAX-RPC, JAX-M, JAX-RS, JAX-WS.  • Experiencedwith CI/CD build pipelines using Jenkins for timely builds, code coverage, running test.  • Expert in using defect tracking system like JIRA, ClearQuest and Bugzilla and in Message brokersusing ActiveMQ, RabbitMQ.  • Familiar in deploying applications using Java build tools Apache Ant, Maven, Gradle and Basicknowledge in UNIX and LINUX Shell scripting.  • Exposure in interacting with clients and solving application environments issues. Work Experience Sr. Java/Liferay Portal Developer BCBSA - Chicago, IL September 2017 to Present Description: MyBlue is User facing online health and wellness community that connects the Blue Plan members across the country.MyBlue offers variety of health and wellness resources and covers Pharmacy, Medicare, Overseas claims and Maternity. User can access statements, health records, provider directories, real-time nurse chats.    Responsibilities:  • Involved in Software Development Life Cycle type of methodology.  • Participated in Agile Development Teamfor application development which includes bi-weekly Sprint and daily Scrum to discuss the design, Code Review and work progress in Rally.  • DesignDevelop and Test the Portals using Java/J2EE and Liferay Portal Technology.  • Involved in creating a roadmap and implemented Liferay portal upgrade for MyBlue customer portal application from versions 6.2 to Liferay DXP.  • As a part of Liferay DXP upgrade from 6.2 version all the existing portlets are migrated to Liferay DXP OSGI modules.  • Used Liferay Content Manage System(CMS) for create, edit, manage, and maintain website pages and created both public and private pages at the site level.  • Development of UI with JSP, AlloyUI components, jQuery, AngularJS, NodeJS and JavaScript.  • Application architected and developed using AngularJS, NodeJS and MVC framework.  • Created responsive designs(Mobile/Tablet/Desktop) using HTML5, CSS3 and Bootstrap.  • Worked on JavaScript and Browser Cache mechanism for storing and retrieving data for website.  • Implemented various Validation controls for form validation and custom validation controls using JavaScript and AngularJS validation controls.  • Developing a Spring MVC Portlet which generated and imported Web, PDF reports based on user claims request.  • Worked on custom login portlet with forgot username, password with various email templates and multiple security questions using google captcha.  • Migrated Liferay Hook in 6.2 to several Fragments, Activators and Form Navigators to deprecate the changes with Liferay DXP.  • Customized the look and feel of Liferay theme for MyBlue website usingCSS, HTML, JavaScript and Free Markup Language.  • Used Liferay Theme Generator for migrating the customized theme from versions Liferay 6.2 to Liferay DXP.  • Installed DXP Portal and development environment for MyBlue application using Gradle  • Designed Service builder code implementation strategy in themes and other plugins to ensure a decoupled code strategy.  • Worked on Liferay Portlet development using JSR 168 and JSR 286 standards.  • Involved on integration of Liferay with Nagios, Xugglerto monitor the health of webservices.  • Implemented SSO integration for MDOTwebsite and SAML for Liferay Auto Login.  • Created Email Notifications, Templates while creating a user, forgot password and change username using Liferay Fragment.  • Implementing Theme, Hooks, Layout in Liferay Portal and working on current project architecture and Inter Portal Communication.  • Integrated and deployed the application on Tomcat Application Server and used KALEO workflow tasks and notifications.  • Used Service Builder for generating remote Liferay portal web services in REST and exposed it to JSON webservice using service.xml.  • Used Velocity Template Language and Free Marker Templates to create the template and structure for publishing the web content articles in Liferay DXP  • Installed Blade Command Line Interface(CLI) for generating Liferay workspace and used Telnet command prompt for checking status of the OSGi modules.  • REST extenders were used for publishing the JAX-RS web service and implemented to the OSGi framework.  • Developed SQL Server Stored Procedures to execute backend processes.  • Used SQL Server as database and used create, Select, Update and Delete statements.  • Created DB tables, functions, Joins and wrote prepared statements using SQL Server.  • Integrated Elastic Search on Liferay DXP which a distributed search engine is to run parallel searches on different servers and collate results back into single page.  • Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content.  • Imported and Exported Liferay web content articles from Stage Environment to PE using LAR (Liferay Archive File).  • Used Gradle for project management and build automation, and Continuous Integration is done using JenkinsandPUTTY for debugging.  • ImplementedContinuous Deliverypipeline with Docker, Jenkins and GitLab.  • Administration of Liferay Portal and worked on Roles and Groups assignment for authorization for editing and publishing web content.  • Used JSON API, REST Client and Postman for testing the RESTful webservices.  • Integrated and tested various modules with JUnit test cases by PowerMockito and used Java Code Coverage (Jacoco) report to ensure high-quality delivery with minimal rework in Agile environment.  • Participated in preparing technical documents which includes logical flow of the code and migration process of Liferay from versions 6.2 to DXP.    Environment: Java, J2EE, Liferay(6.2/DXP), OSGI Module, Spring MVC, JavaScript, AngularJS, HTML5, CSS3, JSON, AlloyUI, Bootstrap, jQuery, NodeJS, Liferay developer Studio , Eclipse, Ant, Gradle, Apache Tomcat Server, Jenkins, Gitlab, JUnit, Agile, Rally, Mockito, Power Mockito, Jacoco, Blade CLI, Elastic search, Docker, JIRA, SQL Server. Full Stack Developer General Motors - Warren, MI September 2016 to August 2017 Description: GM uses GWARP (Global Warranty part center)application across the globe. It is an Interactive Attestation UI application which is integrated through General Motorsand other applications where the user performs all the actions on provider level namely claims, parts analysis, warranty. Business rules will be applied and send to GM if they can be automated.  Responsibilities:  • Involved in entire Software Development Life Cycle(SDLC) of the project right from requirement gathering to the implementation.  • Participated in Agile Development Teamfor application development which includes bi-weekly Sprint and daily Scrum to discuss the design and work progress in Rally.  • Created environment for Micro service architecture(MSA) and Deployed intoAWS using Open Shift Environment(OSE) as Docker images.  • Followed Micro Service Architecture(MSA)and routes to each service are implemented with Apache Camel.  • Implemented Cache using HazelCast, Infinispanwhich stores data from GWARP calls and update the cache for every 24 hours.  • Developedall UIweb pages using web technologies using HTML5, CSS3, Angular2, Bootstrap, jQueryand ReactJS, NodeJS as POC.  • Involved in Enhancement of existing application utilizing Angular2, created HTMLnavigation menu that is role based wherein menu item changes dynamically based on the values derived from the databasein JSON form using JACKSON API.  • Used various Bootstrap components and developed the application based on Responsive web design and user facing features using React JS in view level.  • Developed controllers, services, custom directives for various modules in Angular2 and used expressions to bind data to HTML using Angular2, JavaScript framework.  • Develop the name selectors in GWARP application using Dojo and AJAX for on-key-down responses from back end.  • Used ReactJS for the use of metrics and end-end events tracing for the analysis purpose.  • Responsible for writing the Design specifications for the generic and application specific web services using Groovy and Grailsand migrated from AngularJS to Angular2to make GWARPapplication more responsive.  • Designed the portlets for General Motors application using J2EE and Liferay Portal Technology and integrated Liferay portal application with other services.  • Administered the Liferay GWARP portal and worked on creating tracking and insurance of Parts, claims for authorizing and publishing the content to the company.  • Imlemented the customized portlets based on the GWARP application demand using Liferay plugins using Java and Spring.  • Involved in the migration process of Liferay 6.2 to 7.0 version.  • Defined Object Relational Mapping(ORM) for Hibernate and performed Spring integration using Hibernate for ease of data access.  • Familiar in using Named queries to pull all HQL data using annotations.  • Worked on Trade Item, Product Item publications and test in FileZilla to get response that publication is received, review, or rejected.  • Used MongoDB as DataBase as a Service(DBAAS)forquery, update, insert and MongoDB for storing JSON files.  • Upgraded Java8version into server and usedLambda expressions, Joda.org(Time/Date), Stream API in Drools to deploy KIE sessions into Open shiftenterprise and integrated with eclipse.  • Implemented message retry mechanism using kafka in the event of any failure of systems and enhanced the listeners for RabbitMQ and Apache Kafka  • Exposed and consumed theLiferayweb services to downstream GWARP application  • Worked on EC2 and VPC API to create instances and virtual private cloud in Amazon(AWS).  • ImplementedContinuous Deliverypipeline with Docker, Jenkins and GitHub.And AWS AMI's whenever a new GitHub branch begins, whereas Jenkins automatically builds a new Docker container from it.  • Used GitHub version controlling tools(CI/CD) to maintain project versions supported the application through debugging, fixing and maintenance releases.  • Used PUTTY for debugging and connect tomy remote files in server securely using SSH Encryption FileZillato transfer files between local and remote folders change file permissions.  • Developed a smart rule engine for GWARP that track claims, emails, and generatesJasper reports for the application in the company about claim and insurance issue.  • Used ElasticSearch for querying from Oracle database and periodic exported the data.  • Tracked the error logs using Log4J and fixed the bugs and generated documentation for SOAP calls using Swagger API.  • Configured and maintained JBoss application server and development server.  • Created JUnit test cases to automate the testing of business logicand Karma with Mocha for testing Angular applications mocked the response with Mockito and Power Mockito.  • Tracked and solved tickets for defects on bug reporting tool JIRAand End2End testing with Protractor and Http-server.  • Participated in preparing technical documents which includes logical flow of the code and UML diagrams user's manual for the application.    Environment: Java 8, J2EE, Liferay(6.2/7) , Spring Core, Spring MVC, Hibernate, JSON, JUnit, Agile, Rally, JavaScript, Angular2, ReactJS, HTML5, CSS3, JSON, Redux, Bootstrap, jQuery, nodeJS, Kendo UI, Eclipse, JBoss 7, Mavens, Jenkins, GitHub, JUnit, Karma, Mocha, Mockito, Power Mockito, Jasmine, Linux, Swagger, Apache Kafka, Http-server, JIRA, MongoDB, Oracle, Pl/SQL, AWS. UI/J2EE Developer (Full Stack Developer) Blue Shield of California - San Francisco, CA January 2016 to August 2016 Description: To develop Health enterprise portal for California Medicaid Management Information System. The overall MMIS design mandated by Centers for Medicare and Medicaid for Receipt Client or member, provider, reference, claims, processing, SURS Surveillance. Health Enterprise modules includes member management, claims financial management, pharmacy and benefit administration.  Responsibilities:  • Involved in Requirements gathering, Analysis, Design, Developing and Testing of application developed using Agile, SCRUM methodology.  • Developed User Interface screens for presentation using HTML5, CSS3, AngularJS, AJAX, Bootstrap, ReactJS, Glyphicons, and jQuery.  • Developed UI using Bootstrap dropdown multiselect, Bootstrap modals implemented a suite of application wide MODALS for application configurable warnings, alerts and Tab Widget, Tree Widget UI controllers.  • Created documentation for all the components which is included in ReactJS and Bootstrap page.  • Developed an AngularJSworkflow manager leveraging AngularJS state router for flexible configuration and management of multi-step user input flows.  • Used Bootstrap for writing gulp tasks, bower, npm (Node Package Manager) for packing and creating production ready code using NodeJS.  • Used JavaScript and AJAX to query the Elastic search indices format and display JSON results in a webpage using HTML, CSS and PHP.  • Improved application by designing and implementing a Groovy/Grails for project activity planning activities.  • Analyzed and dissembled PHP code in legacy project and did translation for functional methods in Java Code.  • Developed Backend REST Services using Spring Jersey, Apache CXF and MAVENto automate the builds and managing projects.  • Modified web.xml and inject Spring Security to ensure back-end security and enhanced doPost method in servlet to avoid multiple submissions.  • Entailed in system design and development in Core Java using collections, multithreading and generics.  • Implementedthe caching mechanism in Hibernate to load data from Oracle 10g database and wrote Hibernate configured files to enable the data transactions between POJO and Oracle 10g Database.  • Involved inimplementation of JSP's, Servlets to interact with Oracle 10g Database  • Deployed complete Web application on JBoss server and Log4J to capture the log that includes runtime exceptions.  • Developed a production level cloud based architecture in AWS andinvolved in maintenance, performance, infrastructure services of Amazon EC2 instancesand used S3 Data pipeline to move data to AWS Redshift.  • Converted data objects in Transient memory assertions and attributes to SAML response as a part of SAML SSO.  • Used Cruise Controlframework for a continuous build process and reporting build status and highly scalable performance efficient Drools Architecture.  • Wrote Drool rules in both rule flow and drools fusion fetching the rule data from the database.  • Used REST web service API JAX-RS with JSON for client based communication in the browser.  • Involved in Unit Testing, Functional and Integration Testing for different modules in the application using JUnit, Jasmine, Karma, and PhantomJs.  • Involved in application architectures development tools for web solutions that fulfill the business requirement of the project.  • Implemented and maintained the branching and build/release strategies using GIT.  • Build, deploy and maintain SOAP/REST compliant Web services and Fetched records for SOAP and Restful requests from Oracle DB using SOLR search.  • Designed properties file that has been used by many services and wrote code for reading.    Environment:J2EE, HTML5, CSS3, AngularJS, ReactJS, JSP, Groovy, GULP, Bootstrap, NodeJS , PHP, Spring Frame work, Spring Security, Hibernate, JMS, JBoss, SOAP, REST, XML, Log4j, websphere, Oracle 10g, SOLR, Drools, Shell Script, GIT, MAVEN, JSON, AWS, S3, EC2, POJO, Jasmine, Karma, JIRA, Mockito. Java/J2EE Developer Virginia Department of Social Services - Richmond, VA March 2014 to December 2015 Description:VDSS is a state supervised and locally administered Social Services system providing benefits to millions of people in Virginia. It has an internal application called VACMS used to enter applications and to get track of all benefits. The UI application is integrated through VACMS application and other applications where the user performs all the actions on customer level namely adding or changing the name/address/SSN to the customer NDB if they can be automated.  Responsibilities:  • Designed and developed the application using Agile methodology and followed TDD, SCRUM.  • Wrote a Technical design document with the class sequence, activity diagram in each use case.  • Designedand developed UI Framework usingHTML5, CSS3, JavaScript, Dojo, JSF, Facelets, Primefacesand involved in writing JSF Backing Beansfor controlling, customizing and validations of components.  • Implemented JSF converters to handle formatting and Localization, configuring faces-config.xml for converters and validators.  • Used AJAX interaction with Prime faces for better and interactive Front-end and developed Single Page Application using AngularJs.  • Developed custom layouts and reusable composite components for the web application using Facelets.  • Used Struts components like Formbeans, ActionClasses, JavaBeans and designed the client UI MVC using Struts and EJB.  • Developed the business layer logic and implemented EJBs Session beans and • Created Grids for VACMS application using Dojo and business widgets for mobile application  • Designed and developed Business components and integrated with Spring MVC and performed data validation in Form beans and Action Classes.  • Used Spring to develop light weight business component and Spring IOC for DI, Spring AOP for cross cutting concerns like logging, security, transaction management.  • Implemented Hibernate Caching (Query and second level EH Cache) for frequent queries executed against databases for reports use of API's like Java Transaction API, Java Persistence API.  • Involved in configuring and integrating JSF, Spring and Hibernate Frameworksand implemented MVC architecture in various modules.  • Used Spring Hibernate and DAO layers to offer abstraction for the business from the database related code (CRUD) and created aspects using Spring AOP annotation approach  • Developed Spring controller class for forms and performed URL and view mapping using the Spring MVCFramework.  • Wrote data Components for Plan Setup, wrote, called Stored procedures using HQL, Hibernate and Hibernate ORM with IBM DB2.  • Integrated Spring and Hibernate to develop the business layer which serves the data required for JSF beans.  • Consumed data REST web services using JAX-RS API using Apache CXFand configured JDBC data source and JMS connection factories in WebSphere.  • Designed and developed the VACMS application to provide integration of FileNet with other systems.  • Developedinterfaces and their implementation classes for asynchronous communication with the Middleware using JMS.  • Modified the VACMS Dashboard application to allow it to be used for Virginia state claims a new region is added to the application and created test support documents for Dashboard.  • Responsible for Deploying and configuring the builds on WebSphere Application Server and Shell scripting in UNIX.  • Wrote notification servicethat executes daily, sends emails and escalation to participate and experienced in using LDAP for Authentication and job scheduling using Quartz.  • Worked Error handling for the flows and routed the failures to Cloud hub connector and created alerts in the cloud hub to send the error messages to the Operations team.  • Developed and calling Web services with SOAP/HTTP bindings from message flows and reusable components in FTP module, File processor.  • Wrote build and deployments scripts using MAVEN on UNIX based environment.  • Worked on application support on different environments from QA to Production where responsible for analyzing the issues, providing technical, functional support to the users and fix them and tested application VACMS using JMeter.  Environment:J2EE/J2SE, Java, CSS3, PHP, HTML5, Dojo, JSP, Prime Faces, JSF, Struts MVC, Spring Framework, Spring Batch, Hibernate, JDBC, AngularJS, JMS, Apache CXF, EJB, JNDI, UDDI, WSDL, SOAP, XML, XSLT, XPath, Log4j, Web Sphere, Oracle, Pl/SQL, RAD, UNIX, Maven, JMeter, GitHub, JBoss. Java Developer FL Blue, Florida June 2012 to February 2014 Description: Florida Blue is a trade name of Blue Cross and Blue Shield of Florida, Inc., an Independent Licensee of the Blue Cross and Blue Shield Association. Florida Blue is a PPO, RPPO and Rx (PDP) Plan with a Medicare contract. Florida Blue HMO, Florida Blue Preferred HMO, are HMO plans with a Medicare contract. Enrollment in Florida Blue, Florida Blue HMO, or Florida Blue Preferred HMO depends on contract renewal.    Responsibilities:  • Followed Agile software development methodology in building the System in an iterative and incremental manner.  • Created a Collections in MongoDB by writing Java code through Spring Boot  • specifications, as part of the implementation and implemented server-side tasks using Servlets and XML.  • Developed view components using JSP, JSTL, JavaScript, CSS, Struts Logic tags and struts tag libraries.  • Integrated Struts with Spring by delegating Struts action management to Spring framework.  • Developed the project using struts components - Struts-config.xml, tiles, form-beans and plugins in Struts architecture.  • Implemented Struts Validation Framework for Server-side validation, Struts Action classes using Struts controller component and Layout management using Struts Tiles Framework.  • Used Core Spring framework for Dependency injection and configured JDBC connections and JMS connection factories.  • Configured the user actions (Struts Actions) using XML. The controller uses XML mappings in struts to map the request to the server-side functionality.  • Experienced in developing applications using React JS for view rendering and implementing React JS with Redux and Flux to achieve MVC design flow to the application.  • Installed and configured Oracle RDBMS on UNIX and Windows environments  • Configured and created JMS servers with various JMS Modules like Queues, Topics, Connection Factories, distributed Queues, and Distributed topics.  • Developed various screens for the front end using React JS and used various predefined components from NPM (Node Package Manager) and Redux libraries.  • Migrated DB2 databases from AIX servers to Amazon Web Services (AWS) Cloud servers on Linux  • Used Spring framework for dependency injection and integrated with Hibernate.  • Used SOAPUI for testing responses of SOAP web service, also generated Mock Service in SOAPUI to simulate and test the functionalities of Web Service.  • Used SOAP Web Services (synchronous and asynchronous) for checking customer information like names (NA), credit checks and scores with bureau (LE/CCB/CES).  • Defined hibernate mappings to map database tables and created queries.  • Created programmatic query by using Criteria and Query by Example (QBC and QBE).  • Defined project dependencies for Maven to build the project based on the package goals and used GIT for version control Java/J2EE Developer CareFirst (BCBS), CA June 2010 to May 2012 Description: This project is to streamline, simplify and standardize the online channel for member, users with industry leading capabilities to cater upcoming reforms. The purpose of this initiative is to define a member Portal solution at CareFirst that are available today that provide this capability in parts. Through this CareFirst Blue Cross Blue Shield intends to achieve an industry standard.    Responsibilities:  • Involved in Agile Scrum methodology, Agile meeting, Sprint and Release Planning meetings  • Worked in Multithreaded environment and excessively used Java Threads, concurrency and exception handling.  • Designed and Coded JEE components using Spring and Hibernate.  • Analyzed and implemented the Spring-MVC framework.  • Used XML based transactional support of Spring Framework.  • Responsible for developing Spring Controllers, Service Components and DAO using Hibernate framework  • Worked on Web Services using SOAP and REST. Worked both on Service and Client Side  • Implemented Hibernate and replaced JDBC code.  • Deployment and Testing the services using SOAP UI  • Developed White box test cases using JUnit and Mockito framework  • Configured Log4j Mechanism for complete project using xml files  • Create Maven pom.xml files and integrated with Jenkins CI worked closely with build engineers  • Designed & Developed user interface layer using combination of JSPs, HTML, JavaScript / jQuery for front end.  • Worked with Cassandra database on Unix and Windows environment  • Designed the application using UML, Class Diagrams, Sequence diagrams and State diagrams.  • Wrote JUnit tests to test all implementation. Set up code coverage tool for web applications to monitor the degree of source code being tested in different environments.  • Wrote builds and deployment scripts using Maven.  • Coordinated the efforts across different teams to ensure smooth progress of migration and to resolve any issues.  • Supported the application in production and worked on the incidents in a timely manner  • Demonstrated the application to end user during scrum meeting and end of the release  • Involved in resolving business and technical issues.  • Handled Remedy production incidents and worked with offshore team and reviewed logs using Splunk  • Developed JUnit and Configured Log4j Mechanism for complete project using xml files  • Implemented build scripts using Maven and SVN technology was used for version controlling.    Environment: Java, J2EE, JSP, Spring(MVC, Core, Batch, IOC, AOP, DAO, ORM), SOAP, Restful Web services, Jersey, Axis, Hibernate, Servlets, JSTL, HTML, CSS, XML, Ajax, Java Script, jQuery, Log4j, JNDI, Maven, Jenkin, Java Beans, GIT, Junit, Cassandra, SQL/PLSQL, TOAD, WebSphere, Linux, Agile, Rally, Splunk. Education Bachelor's in Information Technology Carnegie Mellon University Skills JAVA (8 years), JAVASCRIPT (8 years), WEB SERVICES (8 years), MODEL VIEW CONTROLLER (7 years), MODEL-VIEW-CONTROLLER (7 years) Additional Information TECHNICAL PROFICIENCY:    Programming Languages C, C++, Java 8, Scala, Liferay (6.2/DXP).  J2EE Framework  JSP, Servlets, JavaBeans, JDBC, Struts, RMI, EJB, Hibernate, Spring, JMS, AWT,RMI,Web Services, Micro Services, SOA, SAX and DOM Parsers.    Web Technologies HTML/DHTML, XHTML, JavaScript, Dojo,XML, XSL, XSLT, CSS,SASS, jQuery, Bootstrap ,Angular (2/4),Node-JS, Ajax, JSON, React-JS,Grunt.  Portal Technology  Liferay 6.2/DXP, Hooks, Service Builder, Fragments, Activator, Form Navigator,Theme Generator,OSGI framework, ext, Liferay CMS.    API DOM (Data Object Model), JTA ( Java Transaction API), Java Persistence API (JPA), Java Message Service.  Development-Tools (IDEs) Eclipse, Liferay Developer Studio, RAD, NetBeans, MS Visual Studio, WebStorm, Brackets,TFS.  Web-Application Servers Apache Tomcat, WebLogic, IBM WebSphere, Glassfish.  Design Patterns MVC, Front Controller, Singleton, SessionFaçade, Business Delegateand DAO patterns  Databases Oracle, MySQL,MS SQL Server, DB2, PL/SQL, MongoDB, Couchbase.  Web Services SOAP, REST,JAX-RPC,JAX-M,JAX-RS,JAX-WS, Amazon Web Services.  Unit-Testing Frameworks JUnit, JMeter, Mockito, TestNG, Jasmine-Karma, Chai, Protractor, Http-server.  Platforms Windows, UNIX, LINUX, MAC.  Source Control Tools CVS, SVN, VSS, Rational Clear Case, Source Tree, GIT Hub.  SDLC Methodologies Water Fall Model, Agile, Scrum, Kanban Methodology  Build and Performance Managing Tools Ant, Maven, Gradle, Jenkins, JIRA.