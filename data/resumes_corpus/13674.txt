Sr. Java Lead Developer Sr. <span class="hl">Java</span> Lead <span class="hl">Developer</span> Sr. Java Lead Developer - Bank of America • 16+ years of architecture/ application design development in Core Java/J2EE  • Experience in End to End deliver of Products, migration and application porting in various environments  • Extensive experience in estimation, analysis, design, development, testing, maintenance, performance tuning and deployment of internet, e-commerce and client-server applications using  - Delivered multiple end to end products from scratch to production and Collaborate with Product Owner and Stakeholders to identify Use cases, User Stories, guide scrum teams for agile development practices  - Build POC's, Team leads, mentor junior developers, QA teams and production support on and off-shore  - Expertise in executing UML artifacts (Use Case, BRD etc.), JIRA and project management tools  - Expertise in MVC frameworks (Struts 1.2, Struts2, Spring MVC, Spring Webservices, Struts-Spring integration) JSP and Core Spring module, JBDC templates, spring DAO support  - Data modeling and ORM mapping technology (Hibernate, Ibatis), building cache and writing SQL in DB2, SQL/Stored  Procedures in Oracle 9i, 10,11g PL/SQL, Web logic 8, 9 Tomcat 5.xx, WAS 6.0/7.0 middleware using JMS, IBM MQ  - Experience in UNIX, Windows hardware migration plan, cluster, app server, deployment plan etc.  - Expertise in SOA architecture using Webservices SOAP, RESTful, XSD, XSL, JAXB, SAX and DOM parsers. Work Experience Sr. Java Lead Developer Bank of America - Jersey City, NJ March 2018 to Present Project: BDS (Broker-Dealer Separation)  Currently overseeing and leading a team of Senior Developers as a part of larger effort to develop a web application using spring boot/cloud and micro services-based architecture to replace an existing c/motif application and other old legacy swing applications. The  application has capabilities in real-time to send mq messages to DTCC and finally deliver the physical certificate. Some of the salient features are street receive, reclaim bust/hold,  instruct delivery, overriding.  • Angular on the first end with phantomjs as test framework to work in nexus builds.  • Worked on exposing as rest-end points. (upgrading angel, brixton, Camden)  • Worked with gateway, config (have svn configs) and discovery (fail over to other discovery) and hysterix.  • Client-side load balancing using Ribbon setup various profiles to work locally on H2 as well as Linux.  • Developed integration tests to run using Spring 4 TestRunner  • KerberosRestTemplate for authentication, JWT, configuring for PROD and DR instances.  • Business logic in service layer connecting using JPA and or Jdbctemplate.  • Consumed Sola mainframe WebServices using with Apache WSS4J  Environment: Spring 4, Boot/ Cloud microservices, Tomcat 7 JIRA and SCRUM, svn, Spring Tool Suite (STS), Gradle, H2, JPA2.1, Hibernate 3, Oracle 11, angular 1.3, SOAPUI, JSON, REST, phantomJS, Cucumber Sr. Java Lead Developer City of New York, Department of Sanitation November 2016 to January 2018 Project: SMART is a web based Multi-user system with real-time updates on the Board. It replaces an old legacy. The system can be used to assign equipment and personnel for all the boroughs for the daily activities not limited to snow and garbage removal.  Led a big team of Software Developers  • Worked with Apache CXF to integrate data back and forth between PeopleSoft and SCAN mainframe for equipment and personnel. WSDL, XDS's and Spring support for SOAP endpoints.  • Worked in Spring echo system using spring boot/ Spring cloud/ micro services architecture, worked on exposing as rest-end points. (angel, brixton, Camden)  • Worked with gateway, config (have svn configs) and discovery (fail over to other discovery).  • Setup various profiles to work locally on H2 as well as Linux  • Developed integration tests to run in bamboo  • Display Board, Main Navigation, SMART UI, End of Shifts, Personnel Availability, Up/Down Equipment, Task Panel, Task settings  • JPA to mongorepositry and hibernate using Spring Boot/Cloud and REST Controllers, logback for logs.  • KerberosRestTemplate for authentication, JWT, configuring for PROD and DR instances and load balancer testing.  Environment: Spring 4, Tomcat 7 with Websockets, JIRA and SCRUM, Git, Bitbucket, Altassian Bamboo, SourceTree, Spring Tool Suite (STS), Gradle, Liquibase, MongoDB 3, RabbitMQ (RabbitMQ java client 3.2.3, RabbitMQ server 3.2.), JPA2.1, Hibernate 3, Dynatrace 6.1, postgres 1.2, Oracle 11, angular 1.3, SOAPUI, Apache Cxf, REST, SELENIUM, Cucumber, Gemfire Sr. Lead Consultant JP Morgan Chase, NJ February 2015 to July 2016 Project: Identity and Access Management (IAM)  IAM services include authentication and authorization, session management, access requests, access provisioning, access reauthorization, public key encryption, remote access, IAM services API, role and entitlement models, and directory technologies. IBID is the front end of the legacy systems of JP Morgan called JANUS. IBID system is the heart of authorization, data protection and authentication policy management for JP Morgan. RMT is a request management tool.  Involved in architect the multi-phase, multi-project Service Oriented Architecture (SOA) Identity and Access Management project.  • Worked on custom entitlement model to manage roles and groups, created approval process using data guardian concept.  • Involved in exposing Identity Management components like password reset, resetpin, token API, bulk uploads etc. as SOAP WebServices to the client. Created XSD's and SOAP end-points  • Worked on Spring IOC, MVC, JSP, JQuery and JavaScript on the front end. Designed safe Java API to avoid cyber threat and vulnerability.  • Involved in designing of DAO based spring classes and new database tables in Oracle and execute queries using JdbcTemplate, SQL fine tuning and indexing  • Additionally, created Identity Management and Single Sign-on Business & System requirements, Use Cases, Project Plans, Architectural System Design documentation. Understand client's business needs and requirements. Resolves issues in an appropriate and timely manner and worked with offshore teams.  • JUnit and SOAP UI Testing and UNIX deployment to Tomcat.  Environment: Eclipse, Tomcat 6, DTD, XSD, SOAP, WSDL, JAX-WS, WS-I, Java 1.6, JSON, JavaScript, JQuery, Maven, Subversion, LDAP, Active Directory, Oracle and SQL. Sr. Developer Credit Suisse, NY October 2012 to January 2015 Excalibur/Examin  EXAMIN) system addresses the needs of the business (Front Office and Operations) and the Variable Expense Efficiency group by providing detailed information on BC&E expenditures at various granularities such as the legal entity, dept, exchang. It is a product aligned, transactional information model, it also Integrated, cross product, rule based calculation engine that support transaction level calculation of Brokerage, Exchange, Clearing, Regulatory expenses, A rule based allocation process with the ability for user overrides and custom mapping to, support for FX, US Cash, OTC Derivates and various other commodities.  • Worked on various aspects of the application (Calculation, Accrual, Invoice Recon, Payments and Posting).  • Worked on to increase the speed and usability of the ajax application using smartclient, across various grid, tree structure, and excel uploads (apache poi).  • Worked on to improve reliability, scalability and performance using coherence.  • Refactored code to accommodate new table, hibernate enities, and dao framework.  • Worked on entitlement model for users to access screens based on roles and also converted screens to fit in the workflow model.  • Configuration of Charge & Calculation Rules through the screen to set up rules and it is saved in DB and the batch process picks up these to apply across transactions.  • Development various components through a shredder module for Exception Management, Validation Exceptions, Calculation Exceptions, Accrual Exceptions, INVOICE CAPTURE AND RECONCILIATION, Payment Processing and Payment Recon.  • Response time communication with offshore teams to deliver and support user requests.  Environment: J2EE 1.4 on Weblogic 9.2, EJB 3 session beans, Hibernate 3.2.4.sp1 with JPA Annotations, Ant 1.6, Log4J 2.1, JTest unit testing framework, Informatics Power center 8.x for ETL, Business Object XI for BI reports Sr. Java/J2EE Developer Bank of America Merrill Lynch May 2010 to August 2012 Credit Risk Technology ATS  The J2EE web application of Agreement Term Sheet (ATS) supports a robust end-to-end agreement workflow that systematically creates an ISDA, CSAs, REPOS, Guarantees/FGIPs, Futures, PMAs and BMAs term sheet which controls and tracks and facilitates the negotiation process for Credit Risk (Credit Analysts and Legal Negotiators). ATS Supports multiple templates covering 100+ contract types. User can have a functionality to group agreements and execute bulk operations.  • Enhanced the existing Templates using struts, ext-js, JavaScript, jstl, jsp to accommodate a new Internal Guaranty template support multiple business needs.  • Created Data model and UI for Audit History reporting on a per field basis  • Interfaced with client on boarding, credit and margin platforms and analyzed data.  • Wrote Ibatis sql maps and business logic in java.  • Sent Feeds to downstream collateral systems by creating shell scripts which execute the Sybase stored procedure and scheduled with autosys jobs  • Worked on the multithreaded Xdocs BoA to Meryll ATS Migration Sybase bcp java program to migrate millions of rows which reads feed files on ftp location and bcp dropping indexes, wrote SP to validate data, optimizes SP's.  • Wrote Code in Java 1.6, executor framework and Worked with Spring Transactions.  • Ensure Project management timelines with off shore team of developers.  Environment: Spring Framework, Struts 1.2, Java 5.0, Tomcat, Application server 5.2.23, Eclipse 3.2, Ibatis Framework, JSP, JSTL, Servlets, XML, XSLT, CVS, Ant, Db2, Hibernate, Unix, JavaScript, AJAX, Ext-JSlog4j, Autosys Sr. Java/J2EE Developer UBS Financial Services Inc September 2008 to April 2010 Portfolio Management Reporting  PMR is designed to facilitate the delivery of total portfolio management solutions to clients. The platform will provide Financial Analysts (FA) with a seamless end-to-end process, guiding the FA through a risk/investment objective profiling and investment solution selection process. The user selects their product preferences and model/list in order to build their investment solution/asset allocations. Some of the key components PMT (tool is used to create, manage, and monitor a series of investment accounts). This tool enables FA's to accurately profile clients, match a client with a pre-defined investment template, and generate account reports which are sent to the doc server. Designed classes based on Business Requirement document, implemented Core Java classes for the batch processing and exception handling.  • Participated in the DATA model as to the relationship with the application.  • Used front end JavaScript, css, tiles framework and used Core Java (Reflection API; Serialization; Collections API, multi-threading), used Interceptor provided by Spring 2.5 (AOP) and Stored Procedure classes of DB2.  • Coded DAO classes for database calls.  • Wrote DB2 stored procedures using stored procedure builder, SQL programming.  Environment: Websphere Application server 6.1, RAD 7, Struts 2, Spring 2.5 JDBC, JSP, Servlets, JQuery, Iframe, XML, XSLT, SVN, Maven, PVCS, PVCS Tracker, Ant, DB2 Command Center, ANT, Unix, JavaScript, AJAX, log4j Core Java Developer Goldman Sachs, NY February 2006 to August 2008 Issue Incident Convergence Engine (IICE)  Risk Convergence is an initiative to establish an integrated portfolio view of the firm's operational risk and control environment. IICE is a common search platform to search for issues and incidents for different control divisions (MCD, Regulatory Letters, Prod Memos, Compliance, SOX404, ORBIT (external and internal) which feed into IICE. Jdbcconnector (Core Java) of Mule framework is used for feeds. Document and PDF, HTML sources are read using Core Java ( java.net.URL connection) and they are indexed into FAST Enterprise server, then the application then searches against it. The J2EE application server which the IICE runs is on Tomcat 5.5.23. The application uses Spring MVC and uses FAST Enterprise server (similar to LUCENE) to search collection of indexes.  • Datamodelling, normalization database coding to support business applications  • Plan, design, and implement application database code objects, such as stored procedures and views.  • Used Core Java (Reflection API; Serialization; Collections API, multi-threading), participated in and gathered requirements which were mapped to Legal Entities, Impacted Business Area.  • Worked with FAST Enterprise server to create collections, and search the indexes through java and display results.  • Worked with Jdbcconnector of Mule to get feeds of data into system. Parsed XML data.  • Used Service Models including Service Information Architecture for webservices.  • Wrote java code interaction with ORM so that search results can be grouped into groups. Privated Vs Public groups (Access control Admin, Contributor, Reader using Acegi Framework).  • Created a Subscription/Notification admin/model whenever items getting added to a group through feeds which runs for every source system and a corresponding notification is sent in email.  • Dashboard is a group of groups showing the breakdown of source systems and counts of each system.  Environment: Spring Framework, Java 5.0, Tomcat Application server 5.2.23, Eclipse 3.2, MITHRA/HIBERNATE Framework, JSP, JSTL, Servlets, XML, XSLT, CVS, Ant, Db2, Unix, JavaScript Sr. Java Developer IBM April 2005 to January 2006 Cybermortage, Eclipse, Impact  IBM Mortgage Origination Services Unit, offers a full range of lending services, including loan application, underwriting, processing, vendor management, document preparation and loan ofclosing. The systems are browser based STRUTS/J2EE applications running both IBM Web Sphere 6.0 and BEA WebLogic 8.2. The Systems provide seamless end to end process and reduces the cumbersome paper work needed. The systems provide functionality like Escrow holdback, Credit Check, teaser rate on HELOCs, PITI Abatement Months, HUD rules, PreQual screen to the application (e.g. income, loan type, property type and loan amount)., LTV Guidelines.  • Cleaned up code to remove EJB's and replaced with POJO's. Changed to Convenient Spring JDBCTemplate. Used ORM based philosophy for database operations using HIBERNATE.  • Wrote efficient SQL/Stored Procedures, triggers, functions, exceptions using in Oracle 10g PL/SQL.  • Coded Middle layer business service using Rules engine, event publishers, Interface Manager, work queue manager and workflow facade.  • Used RAD as modeling tool to create UML artifacts. XSLT for content generation such as Credit Reports.  • Spring Bean Factory for extensive configuration management.  • Created Oracle views, wrote PL/SQL stored procedures, grant permissions, public synonyms.  Environment: Spring Framework, Websphere Application server 6.1, BEA WebLogic 8.2, MyEclipse Workbench 5.0, RAD, JDBC, JSP, Servlets, XML, XSLT, CVS, VSS, Oracle 10g, Oracle Java/J2EE Developer The Depository Trust & Clearing Corporation June 2004 to March 2005 CRE/CWF/CSF  A 2006 DTCC strategic objective is to create a common run time environment (CRE) for Internet applications for the services it provides like clearance, settlement, information services for equities, corporate and municipal bonds, government and mortgage-backed securities and over-the-counter credit derivatives. Worked on the following applications: The Automated Customer Account Transfer Service (ACATS), Reconfirmation and Pricing Service (RECAPS), Mortgage-Backed Securities Division (MBSD) Clearing Services of Fixed Income Clearing Corporation (FICC). Fund/SPEED is an Extensible Markup Language (XML) service that supports the real-time exchange of account and order information between mutual funds and their trading partners.  • Used Validator Plug in of Validator framework and custom validations wherever necessary.  • Implemented ConverUtils of commons beanutils to static initialize for Byte conversion to timestamp String and back to timestamp.  • Used ContextLoaderPlugIn of Spring Framework to plug-in struts layer to delegate actions to spring DelegatingActionProxy to manage beans using Dependency Injection.  • Used IBatis parameter maps (wrapper around JDBC) to execute procedures and Spring TransactionProxyFactoryBean for declarative transaction.  • Changed applications to run in WAS 6 with code level to J2EE 1.4, changed security layer to use standard TAM/WebSeal/AZN which involved changing stored procedures and application code.  • Used MockStrutsTestCase extension of the base JUnit testcase to test Struts Action objects.  • Used caching in iBATIS results by specifying a cache in the XML file including cache order (FIFO, LIFO, and LRU).  • Used DAO pattern to encapsulate data access calls, Business Delegate pattern and injected through spring.  Environment: WAS 6.0, RAD, JDBC, XML, XSLT, iBatis 2.1.5, Spring Framework Java/J2EE Developer UBS Investment Bank, CT March 2003 to May 2004 Hudson (NOAH, NoahsArk)  As part of the Hudson initiative, which defines Trade Flow Requirements (Prime Brokerage), NOAH subsystem is required to interface and accept trade feeds from varied dependent systems like equities, fixed incomes, repurchases and Journals. NOAH is a middle-layer message router/processing system. NoahsArk is a re-implementation of the NOAH system using J2EE platform. Leveraging the cutting-edge capabilities of J2EE message system the redesigned NOAH gained a message handling capacity that was faster, highly available and much more scalable. The primary purpose of NOAH/NOAHSARK system is to transmit, purchase and sale transactions (P&S), and book keeping transactions (BK) from front office systems (front-end trading, order management systems and real-time trading) to ADP using their proprietary intact message format based on Microsoft Excel and to other settlement systems like EUCLID and KEYLINK.  • Involved in some of the silent features of NoahsArk to overcome NOAH'S limitations, which were single threaded/procedural model. Metadata-driven approach, reusable persistence layer generation, multiple connectors, N/Tier model.  • Used spring framework extensively for JDBC development, Dependency Injection and configurations through Bean Registry.  • Wrote configurable multi-threaded message parsers and reconciliation algorithms which persist to database also parsed Swift messages into XML format using JDOM.  • Automated tasks using Autosys and SQL*Loader for Solaris and Linux environments.  • Built JUnit test cases to unit test various INTACT message sent as settlement messages to various systems (EUROCLEAR, KEYLINK, EUCLID, ADP).  • IBATIS sql-maps for reusable persistence layer generation- optimized stored procedures in Sybase and Oracle and used PL/SQL.    Environment: WebSphere Application server 5.1, JDBC, XML, XSLT, Hermes 1.5, 1.8, iBatis 2.1.5, Spring Framework 1.2.6, MQ Series 5.3, TOAD 8.1, ORACLE 9i, SQL*Loader Education M.S in Computer Science in Computer Science University of Memphis 2002 Bachelor's Computer Science University of Mangalore 1999 Additional Information TECHNICAL SKILLS:    J2EE, Java5/8, JSP, Servlets, AJAX, JDBC, Spring, Hibernate, JPA annotations, Ibatis, JMS1.0.2, JNDI, J2EE, Smarclient, dhtml, ext-js, Javascript and Flex, Sybase, Oracle, SQL, Oracle 10g, 11, PL/SQL, Linux, IBM Web Sphere 5.0/6.0, BEA WebLogic 9, Apache Tomcat 5.1, My Eclipse 3.xx, Ant, JUnit, log4j, Eclipse 3.x, IntelliJ idea