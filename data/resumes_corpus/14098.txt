Full Stack Java Developer Full Stack <span class="hl">Java</span> <span class="hl">Developer</span> Full Stack Java Developer - Cerner Corporation Kansas City, MO, MO • Around 4+ years of experience in the IT industry with diversified exposure in Software Process Engineering, designing, building and testing a Web Application using Java/J2EE technology.  • Expertise in developing Web based distributed and Front-end applications in a three-tier architecture using Java, J2EE, HTML, CSS, JavaScript, Ajax, JSP, jQuery and Angular JS.  • Expertise in server-side development with JDBC, JNDI, Servlets, spring frameworks like MVC architecture, spring boot etc.  • Proficient in working on various Spring modules (Spring Core, Spring IOC, Spring MVC, Spring DAO, Spring Boot and AOP, Batch, cloud, security) along with Hibernate and JPA as the back-end ORM tool for implementation of persistence layer and mapping of POJOs.  • Strong experience on Hibernate and in using Hibernate Connection Pooling, HQL, Collections, Hibernate Caching etc.  • Experience in designing User Interactive UI Web Pages and visually appealing User Interfaces with the help of HTML 5 and CSS3.  • Expertise in coding optimized SQL queries on databases like My SQL, SQL Server and Oracle.  • Worked on IDE's like Microsoft visual studio, Sublime text, IntelliJ, Web Storm and Eclipse.  • Proficient in applying design patterns like MVC, Singleton, Session Facade, Factory, Abstract Factory, Service Locator, Visitor, Observer, Decorator, Front Controller, Data Access Object.  • Experience in developing web applications using MVC, MVVM, MVP, Singleton architectures.  • Expertise in using source code control systems such as GIT, JIRA and Jenkins.  Solid experience with Responsive Web Design (RWD) with involvement in several web application development projects.  • Good knowledge on Amazon Web Services (AWS) cloud platform.  • Solid knowledge on Core Java, Multi-threading, Algorithms and Object-Oriented concepts.  Good experience with web services like RESTFUL, SOAP.  • Implemented XML and related technologies like XSL, XSTL, XPATH and parsers like JAXP (SAX, DOM) and JAXB.  • Experience in spring framework (MVC) and Struts (MVC Architecture, interceptors, action mappings and resource bundles)  • Good knowledge in deploying applications on web servers like Apache Tomcat, Glassfish and IBM WebSphere.  • Hands on experiences with Core Java with Multithreading, Concurrency, File Handling I/O, Generics, Data Structures and Collections and Garbage Collection.  • Built and managed policies for S3 buckets, used S3 bucket and glacier for storage and backup on AWS.  • Experience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries.  • Experience in database related work primarily creating complex stored procedures, Views, Triggers, Functions, using PL/SQL.  • Experience with messaging frameworks like ActiveMQ, RabbitMQ, Kafka.  • Experience in Integration of Amazon Web Services (AWS) with other applications infrastructure.  Strong database skills in Oracle 12c, DB2, My SQL, and MS SQL Server, MySQL, MongoDB.  • Experienced in working in AGILE based development environment and participating in Scrum sessions.  • Strong experience with Junit and Mockito in performing unit tests of the applications.  • Performed test driven development for JavaScript with Angular Js with mocha and chai test cases.  • Excellent communication and Strong team player and effective individual with an ability to adapt to new technologies quickly. Work Experience Full Stack Java Developer Cerner Corporation - Kansas City, MO October 2017 to Present Kansas City, MO    Responsibilities:  • Analyzed the business requirements of the project by studying the Business Requirement Specification document.  • Worked with Data Governance, Data quality, Data architect to design various models and processes.  • Used a Microservice architecture, designed and developed RESTFUL web services using Spring Boot framework.  • Deployed Spring Boot based microservices Docker container using Amazon EC2 container services.  • Used Node.js for deploying POC and used for Bower and other development automation tasks.  • Used Hapi.js which is fast, assertive, essential and moderate web framework of Node.js that helps manage a server and routes.  • Integrated Node.js with Hapi.js and communicated with Mongo dB for CRUD operations on the data repository.  • The back-end use of Node.js, Hapi.js, MongoDB and Mongoose the complete MERN Stack to provide RESTful API.  • Implemented various screens for the front end using React.js and used various predefined components from Node Package Manager (NPM) and Flux library.  • Developed dynamic and responsive web pages to user interface screens using HTML5, CSS3 and JavaScript.  • Created reusable components and used across various modules using Angular custom libraries.  • Developed a dashboard based on Ajax calls with Business customers count, Flags, Real-time graphs for analytical reporting using Node.js.  • Worked in using React JS Components, Forms, Events, Keys, Router, Animations and Flux concept.  • Extensively worked in writing minimal code in building re-usable forms with their validations using REACT with Flux Architecture.  • Extensively used ES6 to create components in REACT.  • Enhanced the customer search experience by developing searchable components with Splunk.  • Performed CRUD operations like Create, Update, Insert and Delete data in MongodB.  • Worked on Mongo dB database concepts such as locking, transactions, indexes, replication and schema design.  • Configured mongo-connector to create a pipeline from the MongoDB cluster to keep synchronize with the multiple sources like Elastic Search or another MongoDB cluster.  • Used Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application.  • Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code and Amazon ECS.  • Designed and deployed a multitude application utilizing almost all the AWS stack which Includes EC2, MongoDB, Docker, Kubernetes Orchestration container focusing on high-availability, fault tolerance, and auto-scaling.  • Worked on AWS Cloud Front, S3 and Lambda Web Services to integrate the server side and client-side code.  • Worked with app developers during API development, to implement a secure server by using OAuth2 between server and client applications. Java Developer Mc Donald's Corporation - Chicago, IL January 2016 to September 2017 Responsibilities:  • Involved in different software lifecycle stages like Design, Development, Testing and Implementation of the project.  • Designed and developed the DAO Layer using Hibernate/JDBC template, using Spring Boot.  • Developed responsive UI layer utilizing Semantic HTML, REST API architecture. Developed front end for the entire website using HTML5, CSS3, and JAVASCRIPT.  • Involved in designing user screens and validations using HTML 5, jQuery and JSF as per user requirements.  • Extensively used Java features such as Lambda Expressions, Parallel operations on collections for effective sorting mechanisms and new Date Time API.  • Built microservices with Spring Boot to serve multiple applications across the organization. The data is provided & consumed in JSON.  • Created RFP microservice to provide RESTful API utilizing Spring Boot with Micro Services.  • Developed the application using Angular 4.0 and implemented Angular services to connect the web application to back-end APIs.  • Authored REST based Web API wrappers to integrate with conventional Web Services. Developed.  • Creating & establishing of the User Interfaces using HTML, CSS and JSP.  • Used Spring Core annotations for Spring Dependency Injection, Spring MVC for Rest API's and Spring Boot for microservices.  • Implemented Angular services to connect the web application to back-end APIs.  • SPRING Controllers were used with Angular JS to route the control to desired Java services.  • Used GITHUB as the configuration management tool to manage the code repository.  • Wrote Client Side and Server-Side validations by using Java Script along with inbuilt Angular validations.  • Mapped business objects to database using Hibernate.  • Used Spring Boot which is radically faster in building cloud Micro Services.  • Maintained Docker containers where microservices are deployed.  • Used Web services (SOAP, REST) for transmission of large blocks of XML data over HTTP.  • Deployed applications into Continuous integration environments like Jenkins to integrate and deploy code on CI environments for development testing. Java Developer Frost Bank - San Antonio, TX September 2014 to November 2015 Responsibilities  • Implemented SOAP based web services using Apache Axis with JAX-WS support. Used SoapUI to test the web services.  • Developed Microservices using Spring MVC, Spring Boot, Spring Cloud.  • Used a Microservices architecture, with Spring Boot based services interacting through a combination of REST and Spring Boot.  • Used complete annotation driven approach to develop the application using Spring Boot framework and was also involved in setting up the Spring bean profiling.  • Developed the date layer for the applications using Spring Hibernate ORM and developed various business logic and services using HQL and Hibernate Criteria.  • Developed entity classes and mapped to the relational tables in database using JPA and hibernate mapping files.  • Worked on Oracle as the backend database and used hibernate to automate the mapping between the SQL Databases and the Java Objects.  • Designed and developed REST APIs using Spring Boot and Microservices for exposing the services utilized for risk assessment by various other applications.  • Configured WebLogic Application Server for deployments and participated in structured code reviews /walkthroughs.  • Wrote unit test scripts using TestNG framework for testing functionalities in a Test-Driven Development (TDD) methodology.  • Wrote scripts for automated web application testing using Selenium Web driver.  • Used JIRA for tracking bugs. Used Maven script for building and deploying the application.  • Used Jenkins for Continuous Integration Builds and deployments (CI/CD) Education Master's Skills WEB SERVICES (4 years), API (3 years), HTML5 (3 years), JAVA (2 years), MODEL VIEW CONTROLLER (2 years), Java (3 years), Javascript (3 years), Html (3 years), Multithreading (3 years), Jsp (3 years), Servlet (3 years), Applet (3 years), Java Beans (3 years), Tag Libraries (3 years), Groovy (3 years), Apache-Tomcat (4 years), Web Logic (3 years), Web Services (3 years), Jira (3 years), JUnit (3 years), Windows (4 years), Unix (3 years), Linux (3 years), Restful (3 years) Additional Information Technical Summary    Programming Languages:- Java, J2EE, HTML5, PL/SQL.  Java Technologies: - Collections, Multithreading, AWT, Exception Handling  J2EE Technologies: - JSP, Servlets, Applet, JDBC, Java Beans, Tag Libraries, Groovy  Web Servers: - Apache-Tomcat 5.x/6.x, n JBuilder  Application Servers: - Web Logic, Tomcat, JBoss, WebSphere  Markup & Scripting Lang: - Java Script, HTML 5.  Framework: - Spring 3.2.2, Struts 2.3.12, Spring MVC, Spring Core, JMS  GUI and Proto type Tools: - AWT, JSP, CSS  IDE/Tools: - Eclipse, RAD, Net Beans, Visual Studio, ANT, JIRA.  XML Technologies: - XML, XSL, DTD/Schema, DOM/SAX API, JAXB.  Databases and Tools: - Oracle MYSQL, SQL Server, MS Access, ORM Tool Hibernate 3.0, Cassandra.  Web Service Technologies: - Web Services JAX-WS, JAX-RS, Apache CXF, SOAP, RESTful.  Testing / Bug Fix Tools: - JUNIT, Clear Quest.    Operating Systems: - Windows, UNIX, Linux.  Design Methodology/Tools: - UML, Object Oriented Analysis and Design, J2EE Design Patterns.  Deployment & Build Tool: - Apache Ant 1.9, Apache Maven 2.2.1  Source/Version: - Control Dimensions, ClearCase, SVN, GIT, VSS.  Documentation Tool: - Microsoft Word 2007, Microsoft Visio, Open Office.  Cloud Technologies: - AWS, EC2, S3.  Automation testing: - Cucumber, Selenium